# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: combined.proto
# plugin: python-betterproto
import builtins
from dataclasses import dataclass
from typing import Dict, List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class AbilityInvokeArgument(betterproto.Enum):
    ABILITY_INVOKE_ARGUMENT_NONE = 0
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1
    ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2
    ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3
    ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5
    ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6
    ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7
    ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8
    ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9
    ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10
    ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_SETATE = 11
    ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12
    ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13
    ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14
    ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15
    ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16
    ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17
    ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18
    ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19
    ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20
    ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21
    ABILITY_INVOKE_ARGUMENT_JDDDLJELBLJ = 22
    ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51
    ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52
    ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53
    ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55
    ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56
    ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57
    ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58
    ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59
    ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60
    ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61
    ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62
    ABILITY_INVOKE_ARGUMENT_FNANDDPDLOL = 63
    ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100
    ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102
    ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104
    ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105
    ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106
    ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108
    ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109
    ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110
    ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111
    ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112
    ABILITY_INVOKE_ARGUMENT_NJHBFADEOON = 113
    ABILITY_INVOKE_ARGUMENT_EGCIFFFLLBG = 114
    ABILITY_INVOKE_ARGUMENT_OFDGFACOLDI = 115
    ABILITY_INVOKE_ARGUMENT_KDPKJGJNGFB = 116


class AbilityScalarType(betterproto.Enum):
    ABILITY_SCALAR_TYPE_UNKNOW = 0
    ABILITY_SCALAR_TYPE_FLOAT = 1
    ABILITY_SCALAR_TYPE_INT = 2
    ABILITY_SCALAR_TYPE_BOOL = 3
    ABILITY_SCALAR_TYPE_TRIGGER = 4
    ABILITY_SCALAR_TYPE_STRING = 5
    ABILITY_SCALAR_TYPE_UINT = 6


class ActionReasonType(betterproto.Enum):
    ACTION_REASON_NONE = 0
    ACTION_REASON_QUEST_ITEM = 1
    ACTION_REASON_QUEST_REWARD = 2
    ACTION_REASON_TRIFLE = 3
    ACTION_REASON_SHOP = 4
    ACTION_REASON_PLAYER_UPGRADE_REWARD = 5
    ACTION_REASON_ADD_AVATAR = 6
    ACTION_REASON_GADGET_ENV_ANIMAL = 7
    ACTION_REASON_MONSTER_ENV_ANIMAL = 8
    ACTION_REASON_COMPOUND = 9
    ACTION_REASON_COOK = 10
    ACTION_REASON_GATHER = 11
    ACTION_REASON_MAIL_ATTACHMENT = 12
    ACTION_REASON_CITY_LEVELUP_RETURN = 15
    ACTION_REASON_CITY_LEVELUP_REWARD = 17
    ACTION_REASON_AREA_EXPLORE_REWARD = 18
    ACTION_REASON_UNLOCK_POINT_REWARD = 19
    ACTION_REASON_DUNGEON_FIRST_PASS = 20
    ACTION_REASON_DUNGEON_PASS = 21
    ACTION_REASON_CHANGE_ELEM_TYPE = 23
    ACTION_REASON_FETTER_OPEN = 25
    ACTION_REASON_DAILY_TASK_SCORE = 26
    ACTION_REASON_DAILY_TASK_HOST = 27
    ACTION_REASON_RAND_TASK_HOST = 28
    ACTION_REASON_EXPEDITION = 29
    ACTION_REASON_GACHA = 30
    ACTION_REASON_COMBINE = 31
    ACTION_REASON_RAND_TASK_GUEST = 32
    ACTION_REASON_DAILY_TASK_GUEST = 33
    ACTION_REASON_FORGE_OUTPUT = 34
    ACTION_REASON_FORGE_RETURN = 35
    ACTION_REASON_INIT_AVATAR = 36
    ACTION_REASON_MONSTER_DIE = 37
    ACTION_REASON_GM = 38
    ACTION_REASON_OPEN_CHEST = 39
    ACTION_REASON_GADGET_DIE = 40
    ACTION_REASON_MONSTER_CHANGE_HP = 41
    ACTION_REASON_SUBFIELD_DROP = 42
    ACTION_REASON_PUSH_TIPS_REWARD = 43
    ACTION_REASON_ACTIVITY_MONSTER_DROP = 44
    ACTION_REASON_ACTIVITY_GATHER = 45
    ACTION_REASON_ACTIVITY_SUBFIELD_DROP = 46
    ACTION_REASON_TOWER_SCHEDULE_REWARD = 47
    ACTION_REASON_TOWER_FLOOR_STAR_REWARD = 48
    ACTION_REASON_TOWER_FIRST_PASS_REWARD = 49
    ACTION_REASON_TOWER_DAILY_REWARD = 50
    ACTION_REASON_HIT_CLIENT_TRIVIAL_ENTITY = 51
    ACTION_REASON_OPEN_WORLD_BOSS_CHEST = 52
    ACTION_REASON_MATERIAL_DELETE_RETURN = 53
    ACTION_REASON_SIGN_IN_REWARD = 54
    ACTION_REASON_OPEN_BLOSSOM_CHEST = 55
    ACTION_REASON_RECHARGE = 56
    ACTION_REASON_BONUS_ACTIVITY_REWARD = 57
    ACTION_REASON_TOWER_COMMEMORATIVE_REWARD = 58
    ACTION_REASON_TOWER_SKIP_FLOOR_REWARD = 59
    ACTION_REASON_RECHARGE_BONUS = 60
    ACTION_REASON_RECHARGE_CARD = 61
    ACTION_REASON_RECHARGE_CARD_DAILY = 62
    ACTION_REASON_RECHARGE_CARD_REPLACE = 63
    ACTION_REASON_RECHARGE_CARD_REPLACE_FREE = 64
    ACTION_REASON_RECHARGE_PLAY_REPLACE = 65
    ACTION_REASON_MP_PLAY_TAKE_REWARD = 66
    ACTION_REASON_ACTIVITY_WATCHER = 67
    ACTION_REASON_SALESMAN_DELIVER_ITEM = 68
    ACTION_REASON_SALESMAN_REWARD = 69
    ACTION_REASON_REBATE = 70
    ACTION_REASON_MCOIN_EXCHANGE_HCOIN = 71
    ACTION_REASON_DAILY_TASK_EXCHANGE_LEGENDARY_KEY = 72
    ACTION_REASON_UNLOCK_PERSON_LINE = 73
    ACTION_REASON_FETTER_LEVEL_REWARD = 74
    ACTION_REASON_BUY_RESIN = 75
    ACTION_REASON_RECHARGE_PACKAGE = 76
    ACTION_REASON_DELIVERY_DAILY_REWARD = 77
    ACTION_REASON_CITY_REPUTATION_LEVEL = 78
    ACTION_REASON_CITY_REPUTATION_QUEST = 79
    ACTION_REASON_CITY_REPUTATION_REQUEST = 80
    ACTION_REASON_CITY_REPUTATION_EXPLORE = 81
    ACTION_REASON_OFFERGING_LEVEL = 82
    ACTION_REASON_ROUTINE_HOST = 83
    ACTION_REASON_ROUTINE_GUEST = 84
    ACTION_REASON_TREASURE_MAP_SPOT_TOKEN = 89
    ACTION_REASON_TREASURE_MAP_BONUS_LEVEL_REWARD = 90
    ACTION_REASON_TREASURE_MAP_MP_REWARD = 91
    ACTION_REASON_CONVERT = 92
    ACTION_REASON_OVERFLOW_TRANSFORM = 93
    ACTION_REASON_ACTIVITY_AVATAR_SELECTION_REWARD = 96
    ACTION_REASON_ACTIVITY_WATCHER_BATCH = 97
    ACTION_REASON_HIT_TREE_DROP = 98
    ACTION_REASON_GET_HOME_LEVELUP_REWARD = 99
    ACTION_REASON_HOME_DEFAULT_FURNITURE = 100
    ACTION_REASON_ACTIVITY_COND = 101
    ACTION_REASON_BATTLE_PASS_NOTIFY = 102
    ACTION_REASON_RELIQUARY_DECOMPOSE = 103
    ACTION_REASON_RECHARGE_GOOGLE_GIFT_GARD = 104
    ACTION_REASON_RECHARGE_CONCERT_PRODUCT = 105
    ACTION_REASON_RECHARGE_CONCERT_PRODUCT_REPLACE = 106
    ACTION_REASON_SEND_CONCERT_PRODUCT_BY_MUIP = 107
    ACTION_REASON_RECHARGE_APPLE_GIFT_GARD = 108
    ACTION_REASON_PLAYER_USE_ITEM = 1001
    ACTION_REASON_DROP_ITEM = 1002
    ACTION_REASON_WEAPON_UPGRADE = 1011
    ACTION_REASON_WEAPON_PROMOTE = 1012
    ACTION_REASON_WEAPON_AWAKEN = 1013
    ACTION_REASON_RELIC_UPGRADE = 1014
    ACTION_REASON_ABILITY = 1015
    ACTION_REASON_DUNGEON_STATUE_DROP = 1016
    ACTION_REASON_OFFLINE_MSG = 1017
    ACTION_REASON_AVATAR_UPGRADE = 1018
    ACTION_REASON_AVATAR_PROMOTE = 1019
    ACTION_REASON_QUEST_ACTION = 1021
    ACTION_REASON_CITY_LEVELUP = 1022
    ACTION_REASON_UPGRADE_SKILL = 1024
    ACTION_REASON_UNLOCK_TALENT = 1025
    ACTION_REASON_UPGRADE_PROUD_SKILL = 1026
    ACTION_REASON_PLAYER_LEVEL_LIMIT_UP = 1027
    ACTION_REASON_DUNGEON_DAILY = 1028
    ACTION_REASON_ITEM_GIVING = 1030
    ACTION_REASON_FORGE_COST = 1031
    ACTION_REASON_INVESTIGATION_REWARD = 1032
    ACTION_REASON_INVESTIGATION_TARGET_REWARD = 1033
    ACTION_REASON_GADGET_INTERACT = 1034
    ACTION_REASON_SEA_LAMP_CI_MATERIAL = 1036
    ACTION_REASON_SEA_LAMP_CONTRIBUTION_REWARD = 1037
    ACTION_REASON_SEA_LAMP_PHASE_REWARD = 1038
    ACTION_REASON_SEA_LAMP_FLY_LAMP = 1039
    ACTION_REASON_AUTO_RECOVER = 1040
    ACTION_REASON_ACTIVITY_EXPIRE_ITEM = 1041
    ACTION_REASON_SUB_COIN_NEGATIVE = 1042
    ACTION_REASON_BARGAIN_DEDUCT = 1043
    ACTION_REASON_BATTLE_PASS_PAID_REWARD = 1044
    ACTION_REASON_BATTLE_PASS_LEVEL_REWARD = 1045
    ACTION_REASON_TRIAL_AVATAR_ACTIVITY_FIRST_PASS_REWARD = 1046
    ACTION_REASON_BUY_BATTLE_PASS_LEVEL = 1047
    ACTION_REASON_GRANT_BIRTHDAY_BENEFIT = 1048
    ACTION_REASON_ACHIEVEMENT_REWARD = 1049
    ACTION_REASON_ACHIEVEMENT_GOAL_REWARD = 1050
    ACTION_REASON_FIRST_SHARE_TO_SOCIAL_NETWORK = 1051
    ACTION_REASON_DESTROY_MATERIAL = 1052
    ACTION_REASON_CODEX_LEVELUP_REWARD = 1053
    ACTION_REASON_HUNTING_OFFER_REWARD = 1054
    ACTION_REASON_USE_WIDGET_ANCHOR_POINT = 1055
    ACTION_REASON_USE_WIDGET_BONFIRE = 1056
    ACTION_REASON_UNGRADE_WEAPON_RETURN_MATERIAL = 1057
    ACTION_REASON_USE_WIDGET_ONEOFF_GATHER_POINT_DETECTOR = 1058
    ACTION_REASON_USE_WIDGET_CLIENT_COLLECTOR = 1059
    ACTION_REASON_USE_WIDGET_CLIENT_DETECTOR = 1060
    ACTION_REASON_TAKE_GENERAL_REWARD = 1061
    ACTION_REASON_ASTER_TAKE_SPECIAL_REWARD = 1062
    ACTION_REASON_REMOVE_CODEX_BOOK = 1063
    ACTION_REASON_OFFERING_ITEM = 1064
    ACTION_REASON_USE_WIDGET_GADGET_BUILDER = 1065
    ACTION_REASON_EFFIGY_FIRST_PASS_REWARD = 1066
    ACTION_REASON_EFFIGY_REWARD = 1067
    ACTION_REASON_REUNION_FIRST_GIFT_REWARD = 1068
    ACTION_REASON_REUNION_SIGN_IN_REWARD = 1069
    ACTION_REASON_REUNION_WATCHER_REWARD = 1070
    ACTION_REASON_SALESMAN_MP_REWARD = 1071
    ACTION_REASION_AVATAR_PROMOTE_REWARD = 1072
    ACTION_REASON_BLESSING_REDEEM_REWARD = 1073
    ACTION_MIRACLE_RING_REWARD = 1074
    ACTION_REASON_EXPEDITION_REWARD = 1075
    ACTION_REASON_TREASURE_MAP_REMOVE_DETECTOR = 1076
    ACTION_REASON_MECHANICUS_DUNGEON_TICKET = 1077
    ACTION_REASON_MECHANICUS_LEVELUP_GEAR = 1078
    ACTION_REASON_MECHANICUS_BATTLE_SETTLE = 1079
    ACTION_REASON_REGION_SEARCH_REWARD = 1080
    ACTION_REASON_UNLOCK_COOP_CHAPTER = 1081
    ACTION_REASON_TAKE_COOP_REWARD = 1082
    ACTION_REASON_FLEUR_FAIR_DUNGEON_REWARD = 1083
    ACTION_REASON_ACTIVITY_SCORE = 1084
    ACTION_REASON_CHANNELLER_SLAB_ONEOFF_DUNGEON_REWARD = 1085
    ACTION_REASON_FURNITURE_MAKE_START = 1086
    ACTION_REASON_FURNITURE_MAKE_TAKE = 1087
    ACTION_REASON_FURNITURE_MAKE_CANCEL = 1088
    ACTION_REASON_FURNITURE_MAKE_FAST_FINISH = 1089
    ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_FIRST_PASS_REWARD = 1090
    ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_SCORE_REWARD = 1091
    ACTION_REASON_HOME_LIMITED_SHOP_BUY = 1092
    ACTION_REASON_HOME_COIN_COLLECT = 1093
    ACTION_REASON_SUMMER_TIME_SENTRY_TOWER_REWARD = 1094
    ACTION_REASON_SUMMER_TIME_SPRINT_BOAT_REWARD = 1095
    ACTION_REASON_SUMMER_TIME_BOSS_REWARD = 1096
    ACTION_REASON_SUMMER_TIME_BOMB_REWARD = 1097
    ACTION_REASON_HOME_FETTER_COLLECT = 1098
    ACTION_REASON_ECHO_SHELL_REWARD = 1099
    ACTION_REASON_HOME_EVENT_REWARD = 1100
    ACTION_REASON_BLITZ_RUSH_DUNGEON_REWARD = 1101
    ACTION_REASON_FURNITURE_MAKE_RETURN = 1102
    ACTION_REASON_HOME_PLANT_BOX_GATHER = 1103
    ACTION_REASON_HOME_PLANT_SEED = 1104
    ACTION_REASON_HOME_PLANT_GATHER = 1105
    ACTION_REASON_CHESS_DUNGEON_REWARD = 1106
    ACTION_REASON_GROUP_LINK_BUNDLE_FINISH = 1107
    ACTION_REASON_LUNA_RITE_SACRIFICE = 1108
    ACTION_REASON_LUNA_RITE_TAKE_SACRIFICE_REWARD = 1109
    ACTION_REASON_FISH_BITE = 1110
    ACTION_REASON_FISH_SUCC = 1111
    ACTION_REASON_PLANT_FLOWER_REWARD = 1112
    ACTION_REASON_PLANT_FLOWER_DELIVER_ITEM = 1113
    ACTION_REASON_PLANT_FLOWER_GIVE_FLOWER = 1114
    ACTION_REASON_PLANT_FLOWER_RECV_FLOWER = 1115
    ACTION_REASON_ROGUE_CHALLENGE_SETTLE = 1116
    ACTION_REASON_ROGUE_TAKE_FIRST_PASS_REWARD = 1117
    ACTION_REASON_ROGUE_UPGRADE_SHIKIGAMI = 1118
    ACTION_REASON_ROGUE_REFRESH_CARD = 1119


class AvatarExpeditionState(betterproto.Enum):
    AVATAR_EXPEDITION_STATE_NONE = 0
    AVATAR_EXPEDITION_STATE_DOING = 1
    AVATAR_EXPEDITION_STATE_FINISH_WAIT_REWARD = 2
    AVATAR_EXPEDITION_STATE_CALLBACK_WAIT_REWARD = 3
    AVATAR_EXPEDITION_STATE_LOCKED = 4


class Cbjedmgobpl(betterproto.Enum):
    CBJEDMGOBPL_MBLDLJOKLBL = 0
    CBJEDMGOBPL_ILOMIKADKGD = 1
    CBJEDMGOBPL_HGHOEJGHMDH = 2
    CBJEDMGOBPL_PJCONIDJGOD = 3


class ChangeEnergyReason(betterproto.Enum):
    CHANGE_ENERGY_REASON_NONE = 0
    CHANGE_ENERGY_REASON_SKILL_START = 1


class ChangeHpReason(betterproto.Enum):
    CHANGE_HP_REASON_CHANGE_HP_NONE = 0
    CHANGE_HP_REASON_CHANGE_HP_SUB_AVATAR = 1
    CHANGE_HP_REASON_CHANGE_HP_SUB_MONSTER = 2
    CHANGE_HP_REASON_CHANGE_HP_SUB_GEAR = 3
    CHANGE_HP_REASON_CHANGE_HP_SUB_ENVIR = 4
    CHANGE_HP_REASON_CHANGE_HP_SUB_FALL = 5
    CHANGE_HP_REASON_CHANGE_HP_SUB_DRAWN = 6
    CHANGE_HP_REASON_CHANGE_HP_SUB_ABYSS = 7
    CHANGE_HP_REASON_CHANGE_HP_SUB_ABILITY = 8
    CHANGE_HP_REASON_CHANGE_HP_SUB_SUMMON = 9
    CHANGE_HP_REASON_CHANGE_HP_SUB_SCRIPT = 10
    CHANGE_HP_REASON_CHANGE_HP_SUB_GM = 11
    CHANGE_HP_REASON_CHANGE_HP_SUB_KILL_SELF = 12
    CHANGE_HP_REASON_CHANGE_HP_SUB_CLIMATE_COLD = 13
    CHANGE_HP_REASON_CHANGE_HP_SUB_STORM_LIGHTNING = 14
    CHANGE_HP_REASON_CHANGE_HP_SUB_KILL_SERVER_GADGET = 15
    CHANGE_HP_REASON_CHANGE_HP_SUB_REPLACE = 16
    CHANGE_HP_REASON_CHANGE_HP_SUB_PLAYER_LEAVE = 17
    CHANGE_HP_REASON_CIKCDBOJGDK = 18
    CHANGE_HP_REASON_HEKLBLFBJJK = 19
    CHANGE_HP_REASON_CHANGE_HP_BY_LUA = 51
    CHANGE_HP_REASON_CHANGE_HP_ADD_ABILITY = 101
    CHANGE_HP_REASON_CHANGE_HP_ADD_ITEM = 102
    CHANGE_HP_REASON_CHANGE_HP_ADD_REVIVE = 103
    CHANGE_HP_REASON_CHANGE_HP_ADD_UPGRADE = 104
    CHANGE_HP_REASON_CHANGE_HP_ADD_STATUE = 105
    CHANGE_HP_REASON_CHANGE_HP_ADD_BACKGROUND = 106
    CHANGE_HP_REASON_CHANGE_HP_ADD_GM = 107
    CHANGE_HP_REASON_CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108
    CHANGE_HP_REASON_CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109


class CodexType(betterproto.Enum):
    CODEX_TYPE_NONE = 0
    CODEX_TYPE_QUEST = 1
    CODEX_TYPE_WEAPON = 2
    CODEX_TYPE_ANIMAL = 3
    CODEX_TYPE_MATERIAL = 4
    CODEX_TYPE_BOOKS = 5
    CODEX_TYPE_PUSHTIPS = 6
    CODEX_TYPE_VIEW = 7
    CODEX_TYPE_RELIQUARY = 8


class CombatTypeArgument(betterproto.Enum):
    COMBAT_TYPE_ARGUMENT_NONE = 0
    COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT = 1
    COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED = 2
    COMBAT_TYPE_ARGUMENT_FACE_TO_DIR = 3
    COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET = 4
    COMBAT_TYPE_ARGUMENT_RUSH_MOVE = 5
    COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED = 6
    COMBAT_TYPE_ARGUMENT_ENTITY_MOVE = 7
    COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION = 8
    COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO = 9
    COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO = 10
    COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF = 11
    COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK = 12
    COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE = 13
    COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM = 14
    COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE = 15
    COMBAT_TYPE_ARGUMENT_KPDNFKCMKPG = 16
    COMBAT_TYPE_ARGUMENT_KPLOMOIALGF = 17


class CoopChapterState(betterproto.Enum):
    Close = 0
    CondNotMeet = 1
    CondMeet = 2
    Accept = 3


class CoopPointState(betterproto.Enum):
    Unstarted = 0
    Started = 1
    Finished = 2


class CoopRewardState(betterproto.Enum):
    Unlock = 0
    Lock = 1
    Taken = 2


class DealAddFriendResultType(betterproto.Enum):
    DEAL_ADD_FRIEND_RESULT_TYPE_REJECT = 0
    DEAL_ADD_FRIEND_RESULT_TYPE_ACCEPT = 1


class EnterType(betterproto.Enum):
    ENTER_TYPE_NONE = 0
    ENTER_TYPE_SELF = 1
    ENTER_TYPE_GOTO = 2
    ENTER_TYPE_JUMP = 3
    ENTER_TYPE_OTHER = 4
    ENTER_TYPE_BACK = 5
    ENTER_TYPE_DUNGEON = 6
    ENTER_TYPE_DUNGEON_REPLAY = 7
    ENTER_TYPE_GOTO_BY_PORTAL = 8
    ENTER_TYPE_SELF_HOME = 9
    ENTER_TYPE_OTHER_HOME = 10
    ENTER_TYPE_GOTO_RECREATE = 11


class ForwardType(betterproto.Enum):
    FORWARD_TYPE_LOCAL = 0
    FORWARD_TYPE_TO_ALL = 1
    FORWARD_TYPE_TO_ALL_EXCEPT_CUR = 2
    FORWARD_TYPE_TO_HOST = 3
    FORWARD_TYPE_TO_ALL_GUEST = 4
    FORWARD_TYPE_TO_PEER = 5
    FORWARD_TYPE_TO_PEERS = 6
    FORWARD_TYPE_ONLY_SERVER = 7
    FORWARD_TYPE_TO_ALL_EXIST_EXCEPT_CUR = 8


class FoundationStatus(betterproto.Enum):
    FOUNDATION_STATUS_NONE = 0
    FOUNDATION_STATUS_INIT = 1
    FOUNDATION_STATUS_BUILDING = 2
    FOUNDATION_STATUS_BUILT = 3


class FriendEnterHomeOption(betterproto.Enum):
    FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0
    FRIEND_ENTER_HOME_OPTION_REFUSE = 1
    FRIEND_ENTER_HOME_OPTION_DIRECT = 2


class FriendOnlineState(betterproto.Enum):
    FRIEND_ONLINE_STATE_FREIEND_DISCONNECT = 0
    FRIEND_ONLINE_STATE_ONLINE = 1


class GadgetBornType(betterproto.Enum):
    GADGET_BORN_TYPE_NONE = 0
    GADGET_BORN_TYPE_IN_AIR = 1
    GADGET_BORN_TYPE_PLAYER = 2
    GADGET_BORN_TYPE_MONSTER_HIT = 3
    GADGET_BORN_TYPE_MONSTER_DIE = 4
    GADGET_BORN_TYPE_GADGET = 5
    GADGET_BORN_TYPE_GROUND = 6


class HitColliderType(betterproto.Enum):
    HIT_COLLIDER_TYPE_INVALID = 0
    HIT_COLLIDER_TYPE_HIT_BOX = 1
    HIT_COLLIDER_TYPE_WET_HIT_BOX = 2
    HIT_COLLIDER_TYPE_HEAD_BOX = 3


class InterOpType(betterproto.Enum):
    INTER_OP_TYPE_FINISH = 0
    INTER_OP_TYPE_START = 1


class InteractType(betterproto.Enum):
    INTERACT_TYPE_NONE = 0
    INTERACT_TYPE_PICK_ITEM = 1
    INTERACT_TYPE_GATHER = 2
    INTERACT_TYPE_OPEN_CHEST = 3
    INTERACT_TYPE_OPEN_STATUE = 4
    INTERACT_TYPE_CONSUM = 5
    INTERACT_TYPE_MP_PLAY_REWARD = 6
    INTERACT_TYPE_VIEW = 7
    INTERACT_TYPE_GENERAL_REWARD = 8
    INTERACT_TYPE_MIRACLE_RING = 9
    INTERACT_TYPE_FOUNDATION = 10
    INTERACT_TYPE_ECHO_SHELL = 11
    INTERACT_TYPE_HOME_GATHER = 12
    INTERACT_TYPE_ENV_ANIMAL = 13
    INTERACT_TYPE_QUEST_GADGET = 14
    INTERACT_TYPE_LIEIKFDFMGF = 15


class LunchBoxSlotType(betterproto.Enum):
    LUNCH_BOX_SLOT_NONE = 0
    LUNCH_BOX_SLOT_REVIVE = 1
    LUNCH_BOX_SLOT_HEAL = 2


class MapMarkFromType(betterproto.Enum):
    MAP_MARK_FROM_TYPE_NOE = 0
    MAP_MARK_FROM_TYPE_MONSTER = 1
    MAP_MARK_FROM_TYPE_QUEST = 2


class MapMarkPointType(betterproto.Enum):
    MAP_MARK_POINT_TYPE_NPC = 0
    MAP_MARK_POINT_TYPE_QUEST = 1
    MAP_MARK_POINT_TYPE_SPECIAL = 2
    MAP_MARK_POINT_TYPE_MINE = 3
    MAP_MARK_POINT_TYPE_COLLECTION = 4
    MAP_MARK_POINT_TYPE_MONSTER = 5
    MAP_MARK_POINT_TYPE_FISH_POOL = 6


class MapMarkTipsType(betterproto.Enum):
    MAP_MARK_TIPS_TYPE_DUNGEON_ELEMENT_TRIAL = 0


class MarkNewType(betterproto.Enum):
    _NONE = 0
    COMBINE = 1
    FORGE = 2


class ModifierAction(betterproto.Enum):
    ADDED = 0
    REMOVED = 1


class MonsterBornType(betterproto.Enum):
    MONSTER_BORN_TYPE_NONE = 0
    MONSTER_BORN_TYPE_DEFAULT = 1
    MONSTER_BORN_TYPE_RANDOM = 2


class MotionState(betterproto.Enum):
    MOTION_STATE_NONE = 0
    MOTION_STATE_RESET = 1
    MOTION_STATE_STANDBY = 2
    MOTION_STATE_STANDBY_MOVE = 3
    MOTION_STATE_WALK = 4
    MOTION_STATE_RUN = 5
    MOTION_STATE_DASH = 6
    MOTION_STATE_CLIMB = 7
    MOTION_STATE_CLIMB_JUMP = 8
    MOTION_STATE_STANDBY_TO_CLIMB = 9
    MOTION_STATE_FIGHT = 10
    MOTION_STATE_JUMP = 11
    MOTION_STATE_DROP = 12
    MOTION_STATE_FLY = 13
    MOTION_STATE_SWIM_MOVE = 14
    MOTION_STATE_SWIM_IDLE = 15
    MOTION_STATE_SWIM_DASH = 16
    MOTION_STATE_SWIM_JUMP = 17
    MOTION_STATE_SLIP = 18
    MOTION_STATE_GO_UPSTAIRS = 19
    MOTION_STATE_FALL_ON_GROUND = 20
    MOTION_STATE_JUMP_UP_WALL_FOR_STANDBY = 21
    MOTION_STATE_JUMP_OFF_WALL = 22
    MOTION_STATE_POWERED_FLY = 23
    MOTION_STATE_LADDER_IDLE = 24
    MOTION_STATE_LADDER_MOVE = 25
    MOTION_STATE_LADDER_SLIP = 26
    MOTION_STATE_STANDBY_TO_LADDER = 27
    MOTION_STATE_LADDER_TO_STANDBY = 28
    MOTION_STATE_DANGER_STANDBY = 29
    MOTION_STATE_DANGER_STANDBY_MOVE = 30
    MOTION_STATE_DANGER_WALK = 31
    MOTION_STATE_DANGER_RUN = 32
    MOTION_STATE_DANGER_DASH = 33
    MOTION_STATE_CROUCH_IDLE = 34
    MOTION_STATE_CROUCH_MOVE = 35
    MOTION_STATE_CROUCH_ROLL = 36
    MOTION_STATE_NOTIFY = 37
    MOTION_STATE_LAND_SPEED = 38
    MOTION_STATE_MOVE_FAIL_ACK = 39
    MOTION_STATE_WATERFALL = 40
    MOTION_STATE_DASH_BEFORE_SHAKE = 41
    MOTION_STATE_SIT_IDLE = 42
    MOTION_STATE_FORCE_SET_POS = 43
    MOTION_STATE_QUEST_FORCE_DRAG = 44
    MOTION_STATE_FOLLOW_ROUTE = 45
    MOTION_STATE_SKIFF_BOARDING = 46
    MOTION_STATE_SKIFF_NORMAL = 47
    MOTION_STATE_SKIFF_DASH = 48
    MOTION_STATE_SKIFF_POWERED_DASH = 49
    MOTION_STATE_DESTROY_VEHICLE = 50
    MOTION_STATE_FLY_IDLE = 51
    MOTION_STATE_FLY_SLOW = 52
    MOTION_STATE_FLY_FAST = 53
    MOTION_STATE_NUM = 54
    MOTION_STATE_OOFNNHKLEFE = 55
    MOTION_STATE_KMIGLMEGNOK = 56


class MovingPlatformType(betterproto.Enum):
    MOVING_PLATFORM_TYPE_NONE = 0
    MOVING_PLATFORM_TYPE_USE_CONFIG = 1
    MOVING_PLATFORM_TYPE_ABILITY = 2
    MOVING_PLATFORM_TYPE_ROUTE = 3


class MpSettingType(betterproto.Enum):
    MP_SETTING_TYPE_NO_ENTER = 0
    MP_SETTING_TYPE_ENTER_FREELY = 1
    MP_SETTING_TYPE_ENTER_AFTER_APPLY = 2


class Operation(betterproto.Enum):
    Add = 0
    Mod = 1
    Del = 2
    Get = 3


class PlatformType(betterproto.Enum):
    PLATFORM_TYPE_EDITOR = 0
    PLATFORM_TYPE_IOS = 1
    PLATFORM_TYPE_ANDROID = 2
    PLATFORM_TYPE_PC = 3
    PLATFORM_TYPE_PS_4 = 4
    PLATFORM_TYPE_SERVER = 5
    PLATFORM_TYPE_CLOUD_ANDROID = 6
    PLATFORM_TYPE_CLOUD_IOS = 7
    PLATFORM_TYPE_PS_5 = 8
    PLATFORM_TYPE_CLOUD_WEB = 9
    PLATFORM_TYPE_CLOUD_TV = 10
    PLATFORM_TYPE_IBBEKBJLMAJ = 11
    PLATFORM_TYPE_BCEICMDNIIG = 12


class PlayerApplyEnterMpReason(betterproto.Enum):
    PlayerJudge = 0
    SceneCannotEnter = 1
    PlayerCannotEnterMp = 2
    SystemJudge = 3
    AllowEnterPlayerFull = 4
    WorldLevelLowerThanHost = 5
    HostInMatch = 6
    PlayerInBlacklist = 7
    PsPlayerNotAcceptOthers = 8
    HostIsBlocked = 9
    OtherDataVersionNotLatest = 10
    DataVersionNotLatest = 11
    PlayerNotInPlayerWorld = 12


class PlayerDieType(betterproto.Enum):
    PLAYER_DIE_TYPE_NONE = 0
    PLAYER_DIE_TYPE_KILL_BY_MONSTER = 1
    PLAYER_DIE_TYPE_KILL_BY_GEAR = 2
    PLAYER_DIE_TYPE_FALL = 3
    PLAYER_DIE_TYPE_DRAWN = 4
    PLAYER_DIE_TYPE_ABYSS = 5
    PLAYER_DIE_TYPE_GM = 6
    PLAYER_DIE_TYPE_CLIMATE_COLD = 7
    PLAYER_DIE_TYPE_STORM_LIGHTING = 8


class PropChangeReason(betterproto.Enum):
    PROP_CHANGE_REASON_NONE = 0
    PROP_CHANGE_REASON_STATUE_RECOVER = 1
    PROP_CHANGE_REASON_ENERGY_BALL = 2
    PROP_CHANGE_REASON_ABILITY = 3
    PROP_CHANGE_REASON_LEVELUP = 4
    PROP_CHANGE_REASON_ITEM = 5
    PROP_CHANGE_REASON_AVATAR_CARD = 6
    PROP_CHANGE_REASON_CITY_LEVELUP = 7
    PROP_CHANGE_REASON_AVATAR_UPGRADE = 8
    PROP_CHANGE_REASON_AVATAR_PROMOTE = 9
    PROP_CHANGE_REASON_PLAYER_ADD_EXP = 10
    PROP_CHANGE_REASON_FINISH_QUEST = 11
    PROP_CHANGE_REASON_GM = 12
    PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL = 13


class ProtEntityType(betterproto.Enum):
    PROT_ENTITY_TYPE_NONE = 0
    PROT_ENTITY_TYPE_AVATAR = 1
    PROT_ENTITY_TYPE_MONSTER = 2
    PROT_ENTITY_TYPE_NPC = 3
    PROT_ENTITY_TYPE_GADGET = 4
    PROT_ENTITY_TYPE_REGION = 5
    PROT_ENTITY_TYPE_WEAPON = 6
    PROT_ENTITY_TYPE_WEATHER = 7
    PROT_ENTITY_TYPE_SCENE = 8
    PROT_ENTITY_TYPE_TEAM = 9
    PROT_ENTITY_TYPE_MASSIVE_ENTITY = 10
    PROT_ENTITY_TYPE_MP_LEVEL = 11
    PROT_ENTITY_TYPE_PLAY_TEAM_ENTITY = 12
    PROT_ENTITY_TYPE_EYE_POINT = 13
    PROT_ENTITY_TYPE_MAX = 14


class ResinCostType(betterproto.Enum):
    RESIN_COST_TYPE_NONE = 0
    RESIN_COST_TYPE_NORMAL = 1
    RESIN_COST_TYPE_CONDENSE = 2
    RESIN_COST_TYPE_REUNION_PRIVILEGE = 3
    RESIN_COST_TYPE_OP_ACTIVITY = 4
    RESIN_COST_TYPE_MATERIAL = 5


class Retcode(betterproto.Enum):
    RET_SUCC = 0
    RET_SVR_ERROR = 1
    RET_UNKNOWN_ERROR = 2
    RET_FREQUENT = 3
    RET_NODE_FORWARD_ERROR = 4
    RET_NOT_FOUND_CONFIG = 5
    RET_SYSTEM_BUSY = 6
    RET_GM_UID_BIND = 7
    RET_STOP_REGISTER = 10
    RET_STOP_SERVER = 11
    RET_ACCOUNT_VEIRFY_ERROR = 12
    RET_ACCOUNT_FREEZE = 13
    RET_REPEAT_LOGIN = 14
    RET_CLIENT_VERSION_ERROR = 15
    RET_TOKEN_ERROR = 16
    RET_ACCOUNT_NOT_EXIST = 17
    RET_WAIT_OTHER_LOGIN = 18
    RET_ANOTHER_LOGIN = 19
    RET_CLIENT_FORCE_UPDATE = 20
    RET_BLACK_UID = 21
    RET_LOGIN_DB_FAIL = 22
    RET_LOGIN_INIT_FAIL = 23
    RET_MYSQL_DUPLICATE = 24
    RET_MAX_PLAYER = 25
    RET_ANTI_ADDICT = 26
    RET_PS_PLAYER_WITHOUT_ONLINE_ID = 27
    RET_ONLINE_ID_NOT_FOUND = 28
    RET_ONLNE_ID_NOT_MATCH = 29
    RET_REGISTER_IS_FULL = 30
    RET_CHECKSUM_INVALID = 31
    RET_BLACK_REGISTER_IP = 32
    RET_EXCEED_REGISTER_RATE = 33
    RET_UNKNOWN_PLATFORM = 34
    RET_TOKEN_PARAM_ERROR = 35
    RET_ANTI_OFFLINE_ERROR = 36
    RET_BLACK_LOGIN_IP = 37
    RET_GET_TOKEN_SESSION_HAS_UID = 38
    RET_ENVIRONMENT_ERROR = 39
    RET_CHECK_CLIENT_VERSION_HASH_FAIL = 40
    RET_AVATAR_IN_CD = 101
    RET_AVATAR_NOT_ALIVE = 102
    RET_AVATAR_NOT_ON_SCENE = 103
    RET_CAN_NOT_FIND_AVATAR = 104
    RET_CAN_NOT_DEL_CUR_AVATAR = 105
    RET_DUPLICATE_AVATAR = 106
    RET_AVATAR_IS_SAME_ONE = 107
    RET_AVATAR_LEVEL_LESS_THAN = 108
    RET_AVATAR_CAN_NOT_CHANGE_ELEMENT = 109
    RET_AVATAR_BREAK_LEVEL_LESS_THAN = 110
    RET_AVATAR_ON_MAX_BREAK_LEVEL = 111
    RET_AVATAR_ID_ALREADY_EXIST = 112
    RET_AVATAR_NOT_DEAD = 113
    RET_AVATAR_IS_REVIVING = 114
    RET_AVATAR_ID_ERROR = 115
    RET_REPEAT_SET_PLAYER_BORN_DATA = 116
    RET_PLAYER_LEVEL_LESS_THAN = 117
    RET_AVATAR_LIMIT_LEVEL_ERROR = 118
    RET_CUR_AVATAR_NOT_ALIVE = 119
    RET_CAN_NOT_FIND_TEAM = 120
    RET_CAN_NOT_FIND_CUR_TEAM = 121
    RET_AVATAR_NOT_EXIST_IN_TEAM = 122
    RET_CAN_NOT_REMOVE_CUR_AVATAR_FROM_TEAM = 123
    RET_CAN_NOT_USE_REVIVE_ITEM_FOR_CUR_AVATAR = 124
    RET_TEAM_COST_EXCEED_LIMIT = 125
    RET_TEAM_AVATAR_IN_EXPEDITION = 126
    RET_TEAM_CAN_NOT_CHOSE_REPLACE_USE = 127
    RET_AVATAR_IN_COMBAT = 128
    RET_NICKNAME_UTF8_ERROR = 130
    RET_NICKNAME_TOO_LONG = 131
    RET_NICKNAME_WORD_ILLEGAL = 132
    RET_NICKNAME_TOO_MANY_DIGITS = 133
    RET_NICKNAME_IS_EMPTY = 134
    RET_PLAYER_NOT_ONLINE = 140
    RET_OPEN_STATE_NOT_OPEN = 141
    RET_FEATURE_CLOSED = 142
    RET_AVATAR_EXPEDITION_AVATAR_DIE = 152
    RET_AVATAR_EXPEDITION_COUNT_LIMIT = 153
    RET_AVATAR_EXPEDITION_MAIN_FORBID = 154
    RET_AVATAR_EXPEDITION_TRIAL_FORBID = 155
    RET_TEAM_NAME_ILLEGAL = 156
    RET_IS_NOT_IN_STANDBY = 157
    RET_IS_IN_DUNGEON = 158
    RET_IS_IN_LOCK_AVATAR_QUEST = 159
    RET_IS_USING_TRIAL_AVATAR = 160
    RET_IS_USING_TEMP_AVATAR = 161
    RET_NOT_HAS_FLYCLOAK = 162
    RET_FETTER_REWARD_ALREADY_GOT = 163
    RET_FETTER_REWARD_LEVEL_NOT_ENOUGH = 164
    RET_WORLD_LEVEL_ADJUST_MIN_LEVEL = 165
    RET_WORLD_LEVEL_ADJUST_CD = 166
    RET_NOT_HAS_COSTUME = 167
    RET_COSTUME_AVATAR_ERROR = 168
    RET_FLYCLOAK_PLATFORM_TYPE_ERR = 169
    RET_FLOAT_ERROR = 201
    RET_NPC_NOT_EXIST = 301
    RET_NPC_TOO_FAR = 302
    RET_NOT_CURRENT_TALK = 303
    RET_NPC_CREATE_FAIL = 304
    RET_NPC_MOVE_FAIL = 305
    RET_QUEST_NOT_EXIST = 401
    RET_QUEST_IS_FAIL = 402
    RET_QUEST_CONTENT_ERROR = 403
    RET_BARGAIN_NOT_ACTIVATED = 404
    RET_BARGAIN_FINISHED = 405
    RET_POINT_NOT_UNLOCKED = 501
    RET_POINT_TOO_FAR = 502
    RET_POINT_ALREAY_UNLOCKED = 503
    RET_ENTITY_NOT_EXIST = 504
    RET_ENTER_SCENE_FAIL = 505
    RET_PLAYER_IS_ENTER_SCENE = 506
    RET_CITY_MAX_LEVEL = 507
    RET_AREA_LOCKED = 508
    RET_JOIN_OTHER_WAIT = 509
    RET_WEATHER_AREA_NOT_FOUND = 510
    RET_WEATHER_IS_LOCKED = 511
    RET_NOT_IN_SELF_SCENE = 512
    RET_GROUP_NOT_EXIST = 513
    RET_MARK_NAME_ILLEGAL = 514
    RET_MARK_ALREADY_EXISTS = 515
    RET_MARK_OVERFLOW = 516
    RET_MARK_NOT_EXISTS = 517
    RET_MARK_UNKNOWN_TYPE = 518
    RET_MARK_NAME_TOO_LONG = 519
    RET_DISTANCE_LONG = 520
    RET_ENTER_SCENE_TOKEN_INVALID = 521
    RET_NOT_IN_WORLD_SCENE = 522
    RET_ANY_GALLERY_STARTED = 523
    RET_GALLERY_NOT_START = 524
    RET_GALLERY_INTERRUPT_ONLY_ON_SINGLE_MODE = 525
    RET_GALLERY_CANNOT_INTERRUPT = 526
    RET_GALLERY_WORLD_NOT_MEET = 527
    RET_GALLERY_SCENE_NOT_MEET = 528
    RET_CUR_PLAY_CANNOT_TRANSFER = 529
    RET_CANT_USE_WIDGET_IN_HOME_SCENE = 530
    RET_SCENE_GROUP_NOT_MATCH = 531
    RET_POS_ROT_INVALID = 551
    RET_MARK_INVALID_SCENE_ID = 552
    RET_INVALID_SCENE_TO_USE_ANCHOR_POINT = 553
    RET_ENTER_HOME_SCENE_FAIL = 554
    RET_CUR_SCENE_IS_NULL = 555
    RET_GROUP_ID_ERROR = 556
    RET_ITEM_NOT_EXIST = 601
    RET_PACK_EXCEED_MAX_WEIGHT = 602
    RET_ITEM_NOT_DROPABLE = 603
    RET_ITEM_NOT_USABLE = 604
    RET_ITEM_INVALID_USE_COUNT = 605
    RET_ITEM_INVALID_DROP_COUNT = 606
    RET_ITEM_ALREADY_EXIST = 607
    RET_ITEM_IN_COOLDOWN = 608
    RET_ITEM_COUNT_NOT_ENOUGH = 609
    RET_ITEM_INVALID_TARGET = 610
    RET_RECIPE_NOT_EXIST = 611
    RET_RECIPE_LOCKED = 612
    RET_RECIPE_UNLOCKED = 613
    RET_COMPOUND_QUEUE_FULL = 614
    RET_COMPOUND_NOT_FINISH = 615
    RET_MAIL_ITEM_NOT_GET = 616
    RET_ITEM_EXCEED_LIMIT = 617
    RET_AVATAR_CAN_NOT_USE = 618
    RET_ITEM_NEED_PLAYER_LEVEL = 619
    RET_RECIPE_NOT_AUTO_QTE = 620
    RET_COMPOUND_BUSY_QUEUE = 621
    RET_NEED_MORE_SCOIN = 622
    RET_SKILL_DEPOT_NOT_FOUND = 623
    RET_HCOIN_NOT_ENOUGH = 624
    RET_SCOIN_NOT_ENOUGH = 625
    RET_HCOIN_EXCEED_LIMIT = 626
    RET_SCOIN_EXCEED_LIMIT = 627
    RET_MAIL_EXPIRED = 628
    RET_REWARD_HAS_TAKEN = 629
    RET_COMBINE_COUNT_TOO_LARGE = 630
    RET_GIVING_ITEM_WRONG = 631
    RET_GIVING_IS_FINISHED = 632
    RET_GIVING_NOT_ACTIVED = 633
    RET_FORGE_QUEUE_FULL = 634
    RET_FORGE_QUEUE_CAPACITY = 635
    RET_FORGE_QUEUE_NOT_FOUND = 636
    RET_FORGE_QUEUE_EMPTY = 637
    RET_NOT_SUPPORT_ITEM = 638
    RET_ITEM_EMPTY = 639
    RET_VIRTUAL_EXCEED_LIMIT = 640
    RET_MATERIAL_EXCEED_LIMIT = 641
    RET_EQUIP_EXCEED_LIMIT = 642
    RET_ITEM_SHOULD_HAVE_NO_LEVEL = 643
    RET_WEAPON_PROMOTE_LEVEL_EXCEED_LIMIT = 644
    RET_WEAPON_LEVEL_INVALID = 645
    RET_UNKNOW_ITEM_TYPE = 646
    RET_ITEM_COUNT_IS_ZERO = 647
    RET_ITEM_IS_EXPIRED = 648
    RET_ITEM_EXCEED_OUTPUT_LIMIT = 649
    RET_EQUIP_LEVEL_HIGHER = 650
    RET_EQUIP_CAN_NOT_WAKE_OFF_WEAPON = 651
    RET_EQUIP_HAS_BEEN_WEARED = 652
    RET_EQUIP_WEARED_CANNOT_DROP = 653
    RET_AWAKEN_LEVEL_MAX = 654
    RET_MCOIN_NOT_ENOUGH = 655
    RET_MCOIN_EXCEED_LIMIT = 656
    RET_RESIN_NOT_ENOUGH = 660
    RET_RESIN_EXCEED_LIMIT = 661
    RET_RESIN_OPENSTATE_OFF = 662
    RET_RESIN_BOUGHT_COUNT_EXCEEDED = 663
    RET_RESIN_CARD_DAILY_REWARD_HAS_TAKEN = 664
    RET_RESIN_CARD_EXPIRED = 665
    RET_AVATAR_CAN_NOT_COOK = 666
    RET_ATTACH_AVATAR_CD = 667
    RET_AUTO_RECOVER_OPENSTATE_OFF = 668
    RET_AUTO_RECOVER_BOUGHT_COUNT_EXCEEDED = 669
    RET_RESIN_GAIN_FAILED = 670
    RET_WIDGET_ORNAMENTS_TYPE_ERROR = 671
    RET_ALL_TARGET_SATIATION_FULL = 672
    RET_FORGE_WORLD_LEVEL_NOT_MATCH = 673
    RET_FORGE_POINT_NOT_ENOUGH = 674
    RET_WIDGET_ANCHOR_POINT_FULL = 675
    RET_WIDGET_ANCHOR_POINT_NOT_FOUND = 676
    RET_ALL_BONFIRE_EXCEED_MAX_COUNT = 677
    RET_BONFIRE_EXCEED_MAX_COUNT = 678
    RET_LUNCH_BOX_DATA_ERROR = 679
    RET_INVALID_QUICK_USE_WIDGET = 680
    RET_INVALID_REPLACE_RESIN_COUNT = 681
    RET_PREV_DETECTED_GATHER_NOT_FOUND = 682
    RET_GOT_ALL_ONEOFF_GAHTER = 683
    RET_INVALID_WIDGET_MATERIAL_ID = 684
    RET_WIDGET_DETECTOR_NO_HINT_TO_CLEAR = 685
    RET_WIDGET_ALREADY_WITHIN_NEARBY_RADIUS = 686
    RET_WIDGET_CLIENT_COLLECTOR_NEED_POINTS = 687
    RET_WIDGET_IN_COMBAT = 688
    RET_WIDGET_NOT_SET_QUICK_USE = 689
    RET_ALREADY_ATTACH_WIDGET = 690
    RET_EQUIP_IS_LOCKED = 691
    RET_FORGE_IS_LOCKED = 692
    RET_COMBINE_IS_LOCKED = 693
    RET_FORGE_OUTPUT_STACK_LIMIT = 694
    RET_ALREADY_DETTACH_WIDGET = 695
    RET_GADGET_BUILDER_EXCEED_MAX_COUNT = 696
    RET_REUNION_PRIVILEGE_RESIN_TYPE_IS_NORMAL = 697
    RET_BONUS_COUNT_EXCEED_DOUBLE_LIMIT = 698
    RET_RELIQUARY_DECOMPOSE_PARAM_ERROR = 699
    RET_ITEM_COMBINE_COUNT_NOT_ENOUGH = 700
    RET_GOODS_NOT_EXIST = 701
    RET_GOODS_MATERIAL_NOT_ENOUGH = 702
    RET_GOODS_NOT_IN_TIME = 703
    RET_GOODS_BUY_NUM_NOT_ENOUGH = 704
    RET_GOODS_BUY_NUM_ERROR = 705
    RET_SHOP_NOT_OPEN = 706
    RET_SHOP_CONTENT_NOT_MATCH = 707
    RET_CHAT_FORBIDDEN = 798
    RET_CHAT_CD = 799
    RET_CHAT_FREQUENTLY = 800
    RET_GADGET_NOT_EXIST = 801
    RET_GADGET_NOT_INTERACTIVE = 802
    RET_GADGET_NOT_GATHERABLE = 803
    RET_CHEST_IS_LOCKED = 804
    RET_GADGET_CREATE_FAIL = 805
    RET_WORKTOP_OPTION_NOT_EXIST = 806
    RET_GADGET_STATUE_NOT_ACTIVE = 807
    RET_GADGET_STATUE_OPENED = 808
    RET_BOSS_CHEST_NO_QUALIFICATION = 809
    RET_BOSS_CHEST_LIFE_TIME_OVER = 810
    RET_BOSS_CHEST_WEEK_NUM_LIMIT = 811
    RET_BOSS_CHEST_GUEST_WORLD_LEVEL = 812
    RET_BOSS_CHEST_HAS_TAKEN = 813
    RET_BLOSSOM_CHEST_NO_QUALIFICATION = 814
    RET_BLOSSOM_CHEST_LIFE_TIME_OVER = 815
    RET_BLOSSOM_CHEST_HAS_TAKEN = 816
    RET_BLOSSOM_CHEST_GUEST_WORLD_LEVEL = 817
    RET_MP_PLAY_REWARD_NO_QUALIFICATION = 818
    RET_MP_PLAY_REWARD_HAS_TAKEN = 819
    RET_GENERAL_REWARD_NO_QUALIFICATION = 820
    RET_GENERAL_REWARD_LIFE_TIME_OVER = 821
    RET_GENERAL_REWARD_HAS_TAKEN = 822
    RET_GADGET_NOT_VEHICLE = 823
    RET_VEHICLE_SLOT_OCCUPIED = 824
    RET_NOT_IN_VEHICLE = 825
    RET_CREATE_VEHICLE_IN_CD = 826
    RET_CREATE_VEHICLE_POS_INVALID = 827
    RET_VEHICLE_POINT_NOT_UNLOCK = 828
    RET_GADGET_INTERACT_COND_NOT_MEET = 829
    RET_GADGET_INTERACT_PARAM_ERROR = 830
    RET_ACTIVITY_CLOSE = 860
    RET_ACTIVITY_ITEM_ERROR = 861
    RET_ACTIVITY_CONTRIBUTION_NOT_ENOUGH = 862
    RET_SEA_LAMP_PHASE_NOT_FINISH = 863
    RET_SEA_LAMP_FLY_NUM_LIMIT = 864
    RET_SEA_LAMP_FLY_LAMP_WORD_ILLEGAL = 865
    RET_ACTIVITY_WATCHER_REWARD_TAKEN = 866
    RET_ACTIVITY_WATCHER_REWARD_NOT_FINISHED = 867
    RET_SALESMAN_ALREADY_DELIVERED = 868
    RET_SALESMAN_REWARD_COUNT_NOT_ENOUGH = 869
    RET_SALESMAN_POSITION_INVALID = 870
    RET_DELIVER_NOT_FINISH_ALL_QUEST = 871
    RET_DELIVER_ALREADY_TAKE_DAILY_REWARD = 872
    RET_ASTER_PROGRESS_EXCEED_LIMIT = 873
    RET_ASTER_CREDIT_EXCEED_LIMIT = 874
    RET_ASTER_TOKEN_EXCEED_LIMIT = 875
    RET_ASTER_CREDIT_NOT_ENOUGH = 876
    RET_ASTER_TOKEN_NOT_ENOUGH = 877
    RET_ASTER_SPECIAL_REWARD_HAS_TAKEN = 878
    RET_FLIGHT_GROUP_ACTIVITY_NOT_STARTED = 879
    RET_ASTER_MID_PREVIOUS_BATTLE_NOT_FINISHED = 880
    RET_DRAGON_SPINE_SHIMMERING_ESSENCE_EXCEED_LIMIT = 881
    RET_DRAGON_SPINE_WARM_ESSENCE_EXCEED_LIMIT = 882
    RET_DRAGON_SPINE_WONDROUS_ESSENCE_EXCEED_LIMIT = 883
    RET_DRAGON_SPINE_SHIMMERING_ESSENCE_NOT_ENOUGH = 884
    RET_DRAGON_SPINE_WARM_ESSENCE_NOT_ENOUGH = 885
    RET_DRAGON_SPINE_WONDROUS_ESSENCE_NOT_ENOUGH = 886
    RET_EFFIGY_FIRST_PASS_REWARD_HAS_TAKEN = 891
    RET_EFFIGY_REWARD_HAS_TAKEN = 892
    RET_TREASURE_MAP_ADD_TOKEN_EXCEED_LIMIT = 893
    RET_TREASURE_MAP_TOKEN_NOT_ENOUGHT = 894
    RET_SEA_LAMP_COIN_EXCEED_LIMIT = 895
    RET_SEA_LAMP_COIN_NOT_ENOUGH = 896
    RET_SEA_LAMP_POPULARITY_EXCEED_LIMIT = 897
    RET_ACTIVITY_AVATAR_REWARD_NOT_OPEN = 898
    RET_ACTIVITY_AVATAR_REWARD_HAS_TAKEN = 899
    RET_ARENA_ACTIVITY_ALREADY_STARTED = 900
    RET_TALENT_ALREAY_UNLOCKED = 901
    RET_PREV_TALENT_NOT_UNLOCKED = 902
    RET_BIG_TALENT_POINT_NOT_ENOUGH = 903
    RET_SMALL_TALENT_POINT_NOT_ENOUGH = 904
    RET_PROUD_SKILL_ALREADY_GOT = 905
    RET_PREV_PROUD_SKILL_NOT_GET = 906
    RET_PROUD_SKILL_MAX_LEVEL = 907
    RET_CANDIDATE_SKILL_DEPOT_ID_NOT_FIND = 910
    RET_SKILL_DEPOT_IS_THE_SAME = 911
    RET_MONSTER_NOT_EXIST = 1001
    RET_MONSTER_CREATE_FAIL = 1002
    RET_DUNGEON_ENTER_FAIL = 1101
    RET_DUNGEON_QUIT_FAIL = 1102
    RET_DUNGEON_ENTER_EXCEED_DAY_COUNT = 1103
    RET_DUNGEON_REVIVE_EXCEED_MAX_COUNT = 1104
    RET_DUNGEON_REVIVE_FAIL = 1105
    RET_DUNGEON_NOT_SUCCEED = 1106
    RET_DUNGEON_CAN_NOT_CANCEL = 1107
    RET_DEST_DUNGEON_SETTLED = 1108
    RET_DUNGEON_CANDIDATE_TEAM_IS_FULL = 1109
    RET_DUNGEON_CANDIDATE_TEAM_IS_DISMISS = 1110
    RET_DUNGEON_CANDIDATE_TEAM_NOT_ALL_READY = 1111
    RET_DUNGEON_CANDIDATE_TEAM_HAS_REPEAT_AVATAR = 1112
    RET_DUNGEON_CANDIDATE_NOT_SINGEL_PASS = 1113
    RET_DUNGEON_REPLAY_NEED_ALL_PLAYER_DIE = 1114
    RET_DUNGEON_REPLAY_HAS_REVIVE_COUNT = 1115
    RET_DUNGEON_OTHERS_LEAVE = 1116
    RET_DUNGEON_ENTER_LEVEL_LIMIT = 1117
    RET_DUNGEON_CANNOT_ENTER_PLOT_IN_MP = 1118
    RET_DUNGEON_DROP_SUBFIELD_LIMIT = 1119
    RET_DUNGEON_BE_INVITE_PLAYER_AVATAR_ALL_DIE = 1120
    RET_DUNGEON_CANNOT_KICK = 1121
    RET_DUNGEON_CANDIDATE_TEAM_SOMEONE_LEVEL_LIMIT = 1122
    RET_DUNGEON_IN_FORCE_QUIT = 1123
    RET_DUNGEON_GUEST_QUIT_DUNGEON = 1124
    RET_DUNGEON_TICKET_FAIL = 1125
    RET_MP_NOT_IN_MY_WORLD = 1201
    RET_MP_IN_MP_MODE = 1202
    RET_MP_SCENE_IS_FULL = 1203
    RET_MP_MODE_NOT_AVAILABLE = 1204
    RET_MP_PLAYER_NOT_ENTERABLE = 1205
    RET_MP_QUEST_BLOCK_MP = 1206
    RET_MP_IN_ROOM_SCENE = 1207
    RET_MP_WORLD_IS_FULL = 1208
    RET_MP_PLAYER_NOT_ALLOW_ENTER = 1209
    RET_MP_PLAYER_DISCONNECTED = 1210
    RET_MP_NOT_IN_MP_MODE = 1211
    RET_MP_OWNER_NOT_ENTER = 1212
    RET_MP_ALLOW_ENTER_PLAYER_FULL = 1213
    RET_MP_TARGET_PLAYER_IN_TRANSFER = 1214
    RET_MP_TARGET_ENTERING_OTHER = 1215
    RET_MP_OTHER_ENTERING = 1216
    RET_MP_ENTER_MAIN_PLAYER_IN_PLOT = 1217
    RET_MP_NOT_PS_PLAYER = 1218
    RET_MP_PLAY_NOT_ACTIVE = 1219
    RET_MP_PLAY_REMAIN_REWARDS = 1220
    RET_MP_PLAY_NO_REWARD = 1221
    RET_MP_OPEN_STATE_FAIL = 1223
    RET_MP_PLAYER_IN_BLACKLIST = 1224
    RET_MP_REPLY_TIMEOUT = 1225
    RET_MP_IS_BLOCK = 1226
    RET_MP_ENTER_MAIN_PLAYER_IN_MP_PLAY = 1227
    RET_MP_IN_MP_PLAY_BATTLE = 1228
    RET_MP_GUEST_HAS_REWARD_REMAINED = 1229
    RET_MP_QUIT_MP_INVALID = 1230
    RET_MP_OTHER_DATA_VERSION_NOT_LATEST = 1231
    RET_MP_DATA_VERSION_NOT_LATEST = 1232
    RET_MP_CUR_WORLD_NOT_ENTERABLE = 1233
    RET_MP_ANY_GALLERY_STARTED = 1234
    RET_MP_HAS_ACTIVE_DRAFT = 1235
    RET_MP_PLAYER_IN_DUNGEON = 1236
    RET_MP_MATCH_FULL = 1237
    RET_MP_MATCH_LIMIT = 1238
    RET_MP_MATCH_IN_PUNISH = 1239
    RET_MP_IS_IN_MULTISTAGE = 1240
    RET_MP_MATCH_PLAY_NOT_OPEN = 1241
    RET_MP_ONLY_MP_WITH_PS_PLAYER = 1242
    RET_MP_GUEST_LOADING_FIRST_ENTER = 1243
    RET_MP_SUMMER_TIME_SPRINT_BOAT_ONGOING = 1244
    RET_MP_BLITZ_RUSH_PARKOUR_CHALLENGE_ONGOING = 1245
    RET_MP_MUSIC_GAME_ONGOING = 1246
    RET_MAIL_PARA_ERR = 1301
    RET_MAIL_MAX_NUM = 1302
    RET_MAIL_ITEM_NUM_EXCEED = 1303
    RET_MAIL_TITLE_LEN_EXCEED = 1304
    RET_MAIL_CONTENT_LEN_EXCEED = 1305
    RET_MAIL_SENDER_LEN_EXCEED = 1306
    RET_MAIL_PARSE_PACKET_FAIL = 1307
    RET_OFFLINE_MSG_MAX_NUM = 1308
    RET_OFFLINE_MSG_SAME_TICKET = 1309
    RET_MAIL_EXCEL_MAIL_TYPE_ERROR = 1310
    RET_MAIL_CANNOT_SEND_MCOIN = 1311
    RET_MAIL_HCOIN_EXCEED_LIMIT = 1312
    RET_MAIL_SCOIN_EXCEED_LIMIT = 1313
    RET_MAIL_MATERIAL_ID_INVALID = 1314
    RET_MAIL_AVATAR_EXCEED_LIMIT = 1315
    RET_MAIL_GACHA_TICKET_ETC_EXCEED_LIMIT = 1316
    RET_MAIL_ITEM_EXCEED_CEHUA_LIMIT = 1317
    RET_MAIL_SPACE_OR_REST_NUM_NOT_ENOUGH = 1318
    RET_MAIL_TICKET_IS_EMPTY = 1319
    RET_MAIL_TRANSACTION_IS_EMPTY = 1320
    RET_DAILY_TASK_NOT_FINISH = 1330
    RET_DAILY_TAKS_HAS_TAKEN = 1331
    RET_SOCIAL_OFFLINE_MSG_NUM_EXCEED = 1332
    RET_DAILY_TASK_FILTER_CITY_NOT_OPEN = 1333
    RET_GACHA_INAVAILABLE = 1401
    RET_GACHA_RANDOM_NOT_MATCH = 1402
    RET_GACHA_SCHEDULE_NOT_MATCH = 1403
    RET_GACHA_INVALID_TIMES = 1404
    RET_GACHA_COST_ITEM_NOT_ENOUGH = 1405
    RET_GACHA_TIMES_LIMIT = 1406
    RET_GACHA_WISH_SAME_ITEM = 1407
    RET_GACHA_WISH_INVALID_ITEM = 1408
    RET_INVESTIGAITON_NOT_IN_PROGRESS = 1501
    RET_INVESTIGAITON_UNCOMPLETE = 1502
    RET_INVESTIGAITON_REWARD_TAKEN = 1503
    RET_INVESTIGAITON_TARGET_STATE_ERROR = 1504
    RET_PUSH_TIPS_NOT_FOUND = 1505
    RET_SIGN_IN_RECORD_NOT_FOUND = 1506
    RET_ALREADY_HAVE_SIGNED_IN = 1507
    RET_SIGN_IN_COND_NOT_SATISFIED = 1508
    RET_BONUS_ACTIVITY_NOT_UNREWARDED = 1509
    RET_SIGN_IN_REWARDED = 1510
    RET_TOWER_NOT_OPEN = 1521
    RET_TOWER_HAVE_DAILY_RECORD = 1522
    RET_TOWER_NOT_RECORD = 1523
    RET_TOWER_HAVE_RECORD = 1524
    RET_TOWER_TEAM_NUM_ERROR = 1525
    RET_TOWER_FLOOR_NOT_OPEN = 1526
    RET_TOWER_NO_FLOOR_STAR_RECORD = 1527
    RET_ALREADY_HAS_TOWER_BUFF = 1528
    RET_DUPLICATE_ENTER_LEVEL = 1529
    RET_NOT_IN_TOWER_LEVEL = 1530
    RET_IN_TOWER_LEVEL = 1531
    RET_TOWER_PREV_FLOOR_NOT_FINISH = 1532
    RET_TOWER_STAR_NOT_ENOUGH = 1533
    RET_BATTLE_PASS_NO_SCHEDULE = 1541
    RET_BATTLE_PASS_HAS_BUYED = 1542
    RET_BATTLE_PASS_LEVEL_OVERFLOW = 1543
    RET_BATTLE_PASS_PRODUCT_EXPIRED = 1544
    RET_MATCH_HOST_QUIT = 1561
    RET_MATCH_ALREADY_IN_MATCH = 1562
    RET_MATCH_NOT_IN_MATCH = 1563
    RET_MATCH_APPLYING_ENTER_MP = 1564
    RET_WIDGET_TREASURE_SPOT_NOT_FOUND = 1581
    RET_WIDGET_TREASURE_ENTITY_EXISTS = 1582
    RET_WIDGET_TREASURE_SPOT_FAR_AWAY = 1583
    RET_WIDGET_TREASURE_FINISHED_TODAY = 1584
    RET_WIDGET_QUICK_USE_REQ_PARAM_ERROR = 1585
    RET_WIDGET_CAMERA_SCAN_ID_ERROR = 1586
    RET_WIDGET_NOT_ACTIVE = 1587
    RET_WIDGET_FEATHER_NOT_ACTIVE = 1588
    RET_WIDGET_FEATHER_GADGET_TOO_FAR_AWAY = 1589
    RET_UID_NOT_EXIST = 2001
    RET_PARSE_BIN_ERROR = 2002
    RET_ACCOUNT_INFO_NOT_EXIST = 2003
    RET_ORDER_INFO_NOT_EXIST = 2004
    RET_SNAPSHOT_INDEX_ERROR = 2005
    RET_MAIL_HAS_BEEN_SENT = 2006
    RET_PRODUCT_NOT_EXIST = 2007
    RET_UNFINISH_ORDER = 2008
    RET_ID_NOT_EXIST = 2009
    RET_ORDER_TRADE_EARLY = 2010
    RET_ORDER_FINISHED = 2011
    RET_GAMESERVER_VERSION_WRONG = 2012
    RET_OFFLINE_OP_FULL_LENGTH = 2013
    RET_CONCERT_PRODUCT_OBTAIN_LIMIT = 2014
    RET_CONCERT_PRODUCT_TICKET_DUPLICATED = 2015
    RET_CONCERT_PRODUCT_TICKET_EMPTY = 2016
    RET_REDIS_MODIFIED = 5001
    RET_REDIS_UID_NOT_EXIST = 5002
    RET_PATHFINDING_DATA_NOT_EXIST = 6001
    RET_PATHFINDING_DESTINATION_NOT_EXIST = 6002
    RET_PATHFINDING_ERROR_SCENE = 6003
    RET_PATHFINDING_SCENE_DATA_LOADING = 6004
    RET_FRIEND_COUNT_EXCEEDED = 7001
    RET_PLAYER_NOT_EXIST = 7002
    RET_ALREADY_SENT_ADD_REQUEST = 7003
    RET_ASK_FRIEND_LIST_FULL = 7004
    RET_PLAYER_ALREADY_IS_FRIEND = 7005
    RET_PLAYER_NOT_ASK_FRIEND = 7006
    RET_TARGET_FRIEND_COUNT_EXCEED = 7007
    RET_NOT_FRIEND = 7008
    RET_BIRTHDAY_CANNOT_BE_SET_TWICE = 7009
    RET_CANNOT_ADD_SELF_FRIEND = 7010
    RET_SIGNATURE_ILLEGAL = 7011
    RET_PS_PLAYER_CANNOT_ADD_FRIENDS = 7012
    RET_PS_PLAYER_CANNOT_REMOVE_FRIENDS = 7013
    RET_NAME_CARD_NOT_UNLOCKED = 7014
    RET_ALREADY_IN_BLACKLIST = 7015
    RET_PS_PALEYRS_CANNOT_ADD_BLACKLIST = 7016
    RET_PLAYER_BLACKLIST_FULL = 7017
    RET_PLAYER_NOT_IN_BLACKLIST = 7018
    RET_BLACKLIST_PLAYER_CANNOT_ADD_FRIEND = 7019
    RET_IN_TARGET_BLACKLIST = 7020
    RET_CANNOT_ADD_TARGET_FRIEND = 7021
    RET_BIRTHDAY_FORMAT_ERROR = 7022
    RET_ONLINE_ID_NOT_EXISTS = 7023
    RET_FIRST_SHARE_REWARD_HAS_TAKEN = 7024
    RET_PS_PLAYER_CANNOT_REMOVE_BLACKLIST = 7025
    RET_REPORT_CD = 7026
    RET_REPORT_CONTENT_ILLEGAL = 7027
    RET_REMARK_WORD_ILLEGAL = 7028
    RET_REMARK_TOO_LONG = 7029
    RET_REMARK_UTF8_ERROR = 7030
    RET_REMARK_IS_EMPTY = 7031
    RET_ASK_ADD_FRIEND_CD = 7032
    RET_SHOW_AVATAR_INFO_NOT_EXIST = 7033
    RET_PLAYER_NOT_SHOW_AVATAR = 7034
    RET_SOCIAL_UPDATE_SHOW_LIST_REPEAT_ID = 7035
    RET_PSN_ID_NOT_FOUND = 7036
    RET_EMOJI_COLLECTION_NUM_EXCEED_LIMIT = 7037
    RET_REMARK_EMPTY = 7038
    RET_OFFERING_NOT_OPEN = 7081
    RET_OFFERING_LEVEL_LIMIT = 7082
    RET_OFFERING_LEVEL_NOT_REACH = 7083
    RET_OFFERING_LEVEL_HAS_TAKEN = 7084
    RET_CITY_REPUTATION_NOT_OPEN = 7101
    RET_CITY_REPUTATION_LEVEL_TAKEN = 7102
    RET_CITY_REPUTATION_LEVEL_NOT_REACH = 7103
    RET_CITY_REPUTATION_PARENT_QUEST_TAKEN = 7104
    RET_CITY_REPUTATION_PARENT_QUEST_UNFINISH = 7105
    RET_CITY_REPUTATION_ACCEPT_REQUEST = 7106
    RET_CITY_REPUTATION_NOT_ACCEPT_REQUEST = 7107
    RET_CITY_REPUTATION_ACCEPT_REQUEST_LIMIT = 7108
    RET_CITY_REPUTATION_ENTRANCE_NOT_OPEN = 7109
    RET_CITY_REPUTATION_TAKEN_REQUEST_REWARD = 7110
    RET_CITY_REPUTATION_SWITCH_CLOSE = 7111
    RET_CITY_REPUTATION_ENTRACE_SWITCH_CLOSE = 7112
    RET_CITY_REPUTATION_TAKEN_EXPLORE_REWARD = 7113
    RET_CITY_REPUTATION_EXPLORE_NOT_REACH = 7114
    RET_MECHANICUS_NOT_OPEN = 7120
    RET_MECHANICUS_GEAR_UNLOCK = 7121
    RET_MECHANICUS_GEAR_LOCK = 7122
    RET_MECHANICUS_GEAR_LEVEL_LIMIT = 7123
    RET_MECHANICUS_COIN_NOT_ENOUGH = 7124
    RET_MECHANICUS_NO_SEQUENCE = 7125
    RET_MECHANICUS_SEQUENCE_LIMIT_LEVEL = 7126
    RET_MECHANICUS_SEQUENCE_LIMIT_OPEN = 7127
    RET_MECHANICUS_DIFFICULT_NOT_SUPPORT = 7128
    RET_MECHANICUS_TICKET_NOT_ENOUGH = 7129
    RET_MECHANICUS_TEACH_NOT_FINISH = 7130
    RET_MECHANICUS_TEACH_FINISHED = 7131
    RET_MECHANICUS_PREV_DIFFICULT_LEVEL_BLOCK = 7132
    RET_MECHANICUS_PLAYER_LIMIT = 7133
    RET_MECHANICUS_PUNISH_TIME = 7134
    RET_MECHANICUS_SWITCH_CLOSE = 7135
    RET_MECHANICUS_BATTLE_NOT_IN_DUNGEON = 7150
    RET_MECHANICUS_BATTLE_PLAY_NOT_FOUND = 7151
    RET_MECHANICUS_BATTLE_DUPLICATE_PICK_CARD = 7152
    RET_MECHANICUS_BATTLE_PLAYER_NOT_IN_PLAY = 7153
    RET_MECHANICUS_BATTLE_CARD_NOT_AVAILABLE = 7154
    RET_MECHANICUS_BATTLE_NOT_IN_CARD_STAGE = 7155
    RET_MECHANICUS_BATTLE_CARD_IS_WAITING = 7156
    RET_MECHANICUS_BATTLE_CARD_ALL_CONFIRMED = 7157
    RET_MECHANICUS_BATTLE_CARD_ALREADY_CONFIRMED = 7158
    RET_MECHANICUS_BATTLE_CARD_CONFIRMED_BY_OTHER = 7159
    RET_MECHANICUS_BATTLE_CARD_NOT_ENOUGH_POINTS = 7160
    RET_MECHANICUS_BATTLE_CARD_ALREADY_SKIPPED = 7161
    RET_LEGENDARY_KEY_NOT_ENOUGH = 8001
    RET_LEGENDARY_KEY_EXCEED_LIMIT = 8002
    RET_DAILY_TASK_NOT_ENOUGH_TO_REDEEM = 8003
    RET_PERSONAL_LINE_OPEN_STATE_OFF = 8004
    RET_PERSONAL_LINE_LEVEL_NOT_ENOUGH = 8005
    RET_PERSONAL_LINE_NOT_OPEN = 8006
    RET_PERSONAL_LINE_PRE_QUEST_NOT_FINISH = 8007
    RET_HUNTING_ALREADY_FINISH_OFFER_LIMIT = 8201
    RET_HUNTING_HAS_UNFINISHED_OFFER = 8202
    RET_HUNTING_FAILED_OFFER_NOT_CD_READY = 8203
    RET_HUNTING_NOT_TAKE_OFFER = 8204
    RET_HUNTING_CANNOT_TAKE_TWICE = 8205
    RET_RPIVATE_CHAT_INVALID_CONTENT_TYPE = 8901
    RET_PRIVATE_CHAT_TARGET_IS_NOT_FRIEND = 8902
    RET_PRIVATE_CHAT_CONTENT_NOT_SUPPORTED = 8903
    RET_PRIVATE_CHAT_CONTENT_TOO_LONG = 8904
    RET_PRIVATE_CHAT_PULL_TOO_FAST = 8905
    RET_PRIVATE_CHAT_REPEAT_READ = 8906
    RET_PRIVATE_CHAT_READ_NOT_FRIEND = 8907
    RET_REUNION_FINISHED = 9001
    RET_REUNION_NOT_ACTIVATED = 9002
    RET_REUNION_ALREADY_TAKE_FIRST_REWARD = 9003
    RET_REUNION_SIGN_IN_REWARDED = 9004
    RET_REUNION_WATCHER_REWARDED = 9005
    RET_REUNION_WATCHER_NOT_FINISH = 9006
    RET_REUNION_MISSION_REWARDED = 9007
    RET_REUNION_MISSION_NOT_FINISH = 9008
    RET_REUNION_WATCHER_REWARD_NOT_UNLOCKED = 9009
    RET_BLESSING_CONTENT_CLOSED = 9101
    RET_BLESSING_NOT_ACTIVE = 9102
    RET_BLESSING_NOT_TODAY_ENTITY = 9103
    RET_BLESSING_ENTITY_EXCEED_SCAN_NUM_LIMIT = 9104
    RET_BLESSING_DAILY_SCAN_NUM_EXCEED_LIMIT = 9105
    RET_BLESSING_REDEEM_REWARD_NUM_EXCEED_LIMIT = 9106
    RET_BLESSING_REDEEM_PIC_NUM_NOT_ENOUGH = 9107
    RET_BLESSING_PIC_NOT_ENOUGH = 9108
    RET_BLESSING_PIC_HAS_RECEIVED = 9109
    RET_BLESSING_TARGET_RECV_NUM_EXCEED = 9110
    RET_FLEUR_FAIR_CREDIT_EXCEED_LIMIT = 9111
    RET_FLEUR_FAIR_CREDIT_NOT_ENOUGH = 9112
    RET_FLEUR_FAIR_TOKEN_EXCEED_LIMIT = 9113
    RET_FLEUR_FAIR_TOKEN_NOT_ENOUGH = 9114
    RET_FLEUR_FAIR_MINIGAME_NOT_OPEN = 9115
    RET_FLEUR_FAIR_MUSIC_GAME_DIFFICULTY_NOT_UNLOCK = 9116
    RET_FLEUR_FAIR_DUNGEON_LOCKED = 9117
    RET_FLEUR_FAIR_DUNGEON_PUNISH_TIME = 9118
    RET_FLEUR_FAIR_ONLY_OWNER_CAN_RESTART_MINIGAM = 9119
    RET_WATER_SPIRIT_COIN_EXCEED_LIMIT = 9120
    RET_WATER_SPIRIT_COIN_NOT_ENOUGH = 9121
    RET_REGION_SEARCH_NO_SEARCH = 9122
    RET_REGION_SEARCH_STATE_ERROR = 9123
    RET_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE_NOT_OPEN = 9130
    RET_CHANNELLER_SLAB_LOOP_DUNGEON_NOT_OPEN = 9131
    RET_CHANNELLER_SLAB_LOOP_DUNGEON_FIRST_PASS_REWARD_HAS_TAKEN = 9132
    RET_CHANNELLER_SLAB_LOOP_DUNGEON_SCORE_REWARD_HAS_TAKEN = 9133
    RET_CHANNELLER_SLAB_INVALID_ONE_OFF_DUNGEON = 9134
    RET_CHANNELLER_SLAB_ONE_OFF_DUNGEON_DONE = 9135
    RET_CHANNELLER_SLAB_ONE_OFF_DUNGEON_STAGE_NOT_OPEN = 9136
    RET_CHANNELLER_SLAB_TOKEN_EXCEED_LIMIT = 9137
    RET_CHANNELLER_SLAB_TOKEN_NOT_ENOUGH = 9138
    RET_CHANNELLER_SLAB_PLAYER_NOT_IN_ONE_OFF_DUNGEON = 9139
    RET_MIST_TRIAL_SELECT_CHARACTER_NUM_NOT_ENOUGH = 9150
    RET_HIDE_AND_SEEK_PLAY_NOT_OPEN = 9160
    RET_HIDE_AND_SEEK_PLAY_MAP_NOT_OPEN = 9161
    RET_SUMMER_TIME_DRAFT_WOORD_EXCEED_LIMIT = 9170
    RET_SUMMER_TIME_DRAFT_WOORD_NOT_ENOUGH = 9171
    RET_SUMMER_TIME_MINI_HARPASTUM_EXCEED_LIMIT = 9172
    RET_SUMMER_TIME_MINI_HARPASTUMNOT_ENOUGH = 9173
    RET_BOUNCE_CONJURING_COIN_EXCEED_LIMIT = 9180
    RET_BOUNCE_CONJURING_COIN_NOT_ENOUGH = 9181
    RET_CHESS_TEACH_MAP_FINISHED = 9183
    RET_CHESS_TEACH_MAP_UNFINISHED = 9184
    RET_CHESS_COIN_EXCEED_LIMIT = 9185
    RET_CHESS_COIN_NOT_ENOUGH = 9186
    RET_CHESS_IN_PUNISH_TIME = 9187
    RET_CHESS_PREV_MAP_UNFINISHED = 9188
    RET_CHESS_MAP_LOCKED = 9189
    RET_BLITZ_RUSH_NOT_OPEN = 9192
    RET_BLITZ_RUSH_DUNGEON_NOT_OPEN = 9193
    RET_BLITZ_RUSH_COIN_A_EXCEED_LIMIT = 9194
    RET_BLITZ_RUSH_COIN_B_EXCEED_LIMIT = 9195
    RET_BLITZ_RUSH_COIN_A_NOT_ENOUGH = 9196
    RET_BLITZ_RUSH_COIN_B_NOT_ENOUGH = 9197
    RET_MIRACLE_RING_VALUE_NOT_ENOUGH = 9201
    RET_MIRACLE_RING_CD = 9202
    RET_MIRACLE_RING_REWARD_NOT_TAKEN = 9203
    RET_MIRACLE_RING_NOT_DELIVER = 9204
    RET_MIRACLE_RING_DELIVER_EXCEED = 9205
    RET_MIRACLE_RING_HAS_CREATED = 9206
    RET_MIRACLE_RING_HAS_NOT_CREATED = 9207
    RET_MIRACLE_RING_NOT_YOURS = 9208
    RET_GADGET_FOUNDATION_UNAUTHORIZED = 9251
    RET_GADGET_FOUNDATION_SCENE_NOT_FOUND = 9252
    RET_GADGET_FOUNDATION_NOT_IN_INIT_STATE = 9253
    RET_GADGET_FOUNDATION_BILDING_POINT_NOT_ENOUGHT = 9254
    RET_GADGET_FOUNDATION_NOT_IN_BUILT_STATE = 9255
    RET_GADGET_FOUNDATION_OP_NOT_SUPPORTED = 9256
    RET_GADGET_FOUNDATION_REQ_PLAYER_NOT_IN_SCENE = 9257
    RET_GADGET_FOUNDATION_LOCKED_BY_ANOTHER_PLAYER = 9258
    RET_GADGET_FOUNDATION_NOT_LOCKED = 9259
    RET_GADGET_FOUNDATION_DUPLICATE_LOCK = 9260
    RET_GADGET_FOUNDATION_PLAYER_NOT_FOUND = 9261
    RET_GADGET_FOUNDATION_PLAYER_GEAR_NOT_FOUND = 9262
    RET_GADGET_FOUNDATION_ROTAION_DISABLED = 9263
    RET_GADGET_FOUNDATION_REACH_DUNGEON_GEAR_LIMIT = 9264
    RET_GADGET_FOUNDATION_REACH_SINGLE_GEAR_LIMIT = 9265
    RET_GADGET_FOUNDATION_ROTATION_ON_GOING = 9266
    RET_OP_ACTIVITY_BONUS_NOT_FOUND = 9301
    RET_OP_ACTIVITY_NOT_OPEN = 9302
    RET_MULTISTAGE_PLAY_PLAYER_NOT_IN_SCENE = 9501
    RET_MULTISTAGE_PLAY_NOT_FOUND = 9502
    RET_COOP_CHAPTER_NOT_OPEN = 9601
    RET_COOP_COND_NOT_MEET = 9602
    RET_COOP_POINT_LOCKED = 9603
    RET_COOP_NOT_HAVE_PROGRESS = 9604
    RET_COOP_REWARD_HAS_TAKEN = 9605
    RET_DRAFT_HAS_ACTIVE_DRAFT = 9651
    RET_DRAFT_NOT_IN_MY_WORLD = 9652
    RET_DRAFT_NOT_SUPPORT_MP = 9653
    RET_DRAFT_PLAYER_NOT_ENOUGH = 9654
    RET_DRAFT_INCORRECT_SCENE = 9655
    RET_DRAFT_OTHER_PLAYER_ENTERING = 9656
    RET_DRAFT_GUEST_IS_TRANSFERRING = 9657
    RET_DRAFT_GUEST_NOT_IN_DRAFT_SCENE = 9658
    RET_DRAFT_INVITE_OVER_TIME = 9659
    RET_DRAFT_TWICE_CONFIRM_OVER_TIMER = 9660
    RET_HOME_UNKOWN = 9701
    RET_HOME_INVALID_CLIENT_PARAM = 9702
    RET_HOME_TARGE_PLAYER_HAS_NO_HOME = 9703
    RET_HOME_NOT_ONLINE = 9704
    RET_HOME_PLAYER_FULL = 9705
    RET_HOME_BLOCKED = 9706
    RET_HOME_ALREADY_IN_TARGET_HOME_WORLD = 9707
    RET_HOME_IN_EDIT_MODE = 9708
    RET_HOME_NOT_IN_EDIT_MODE = 9709
    RET_HOME_HAS_GUEST = 9710
    RET_HOME_CANT_ENTER_BY_IN_EDIT_MODE = 9711
    RET_HOME_CLIENT_PARAM_INVALID = 9712
    RET_HOME_PLAYER_NOT_IN_HOME_WORLD = 9713
    RET_HOME_PLAYER_NOT_IN_SELF_HOME_WORLD = 9714
    RET_HOME_NOT_FOUND_IN_MEM = 9715
    RET_HOME_PLAYER_IN_HOME_ROOM_SCENE = 9716
    RET_HOME_HOME_REFUSE_GUEST_ENTER = 9717
    RET_HOME_OWNER_REFUSE_TO_ENTER_HOME = 9718
    RET_HOME_OWNER_OFFLINE = 9719
    RET_HOME_FURNITURE_EXCEED_LIMIT = 9720
    RET_HOME_FURNITURE_COUNT_NOT_ENOUGH = 9721
    RET_HOME_IN_TRY_ENTER_PROCESS = 9722
    RET_HOME_ALREADY_IN_TARGET_SCENE = 9723
    RET_HOME_COIN_EXCEED_LIMIT = 9724
    RET_HOME_COIN_NOT_ENOUGH = 9725
    RET_HOME_MODULE_NOT_UNLOCKED = 9726
    RET_HOME_CUR_MODULE_CLOSED = 9727
    RET_HOME_FURNITURE_SUITE_NOT_UNLOCKED = 9728
    RET_HOME_IN_MATCH = 9729
    RET_HOME_IN_COMBAT = 9730
    RET_HOME_EDIT_MODE_CD = 9731
    RET_HOME_UPDATE_FURNITURE_CD = 9732
    RET_HOME_BLOCK_FURNITURE_LIMIT = 9733
    RET_HOME_NOT_SUPPORT = 9734
    RET_HOME_STATE_NOT_OPEN = 9735
    RET_HOME_TARGET_STATE_NOT_OPEN = 9736
    RET_HOME_APPLY_ENTER_OTHER_HOME_FAIL = 9737
    RET_HOME_SAVE_NO_MAIN_HOUSE = 9738
    RET_HOME_IN_DUNGEON = 9739
    RET_HOME_ANY_GALLERY_STARTED = 9740
    RET_HOME_QUEST_BLOCK_HOME = 9741
    RET_HOME_WAITING_PRIOR_CHECK = 9742
    RET_HOME_PERSISTENT_CHECK_FAIL = 9743
    RET_HOME_FIND_ONLINE_HOME_FAIL = 9744
    RET_HOME_JOIN_SCENE_FAIL = 9745
    RET_HOME_MAX_PLAYER = 9746
    RET_HOME_IN_TRANSFER = 9747
    RET_FURNITURE_MAKE_INDEX_ERROR = 9750
    RET_FURNITURE_MAKE_LOCKED = 9751
    RET_FURNITURE_MAKE_CONFIG_ERROR = 9752
    RET_FURNITURE_MAKE_SLOT_FULL = 9753
    RET_FURNITURE_MAKE_ADD_FURNITURE_FAIL = 9754
    RET_FURNITURE_MAKE_UNFINISH = 9755
    RET_FURNITURE_MAKE_IS_FINISH = 9756
    RET_FURNITURE_MAKE_NOT_IN_CORRECT_HOME = 9757
    RET_FURNITURE_MAKE_NO_COUNT = 9758
    RET_FURNITURE_MAKE_ACCELERATE_LIMIT = 9759
    RET_FURNITURE_MAKE_NO_MAKE_DATA = 9760
    RET_HOME_LIMITED_SHOP_CLOSE = 9761
    RET_HOME_AVATAR_NOT_SHOW = 9762
    RET_HOME_EVENT_COND_NOT_SATISFIED = 9763
    RET_HOME_INVALID_ARRANGE_ANIMAL_PARAM = 9764
    RET_HOME_INVALID_ARRANGE_NPC_PARAM = 9765
    RET_HOME_INVALID_ARRANGE_SUITE_PARAM = 9766
    RET_HOME_INVALID_ARRANGE_MAIN_HOUSE_PARAM = 9767
    RET_HOME_AVATAR_STATE_NOT_OPEN = 9768
    RET_HOME_PLANT_FIELD_NOT_EMPTY = 9769
    RET_HOME_PLANT_FIELD_EMPTY = 9770
    RET_HOME_PLANT_FIELD_TYPE_ERROR = 9771
    RET_HOME_PLANT_TIME_NOT_ENOUGH = 9772
    RET_HOME_PLANT_SUB_FIELD_NUM_NOT_ENOUGH = 9773
    RET_HOME_PLANT_FIELD_PARAM_ERROR = 9774
    RET_HOME_FURNITURE_GUID_ERROR = 9775
    RET_HOME_FURNITURE_ARRANGE_LIMIT = 9776
    RET_HOME_FISH_FARMING_LIMIT = 9777
    RET_HOME_FISH_COUNT_NOT_ENOUGH = 9778
    RET_HOME_FURNITURE_COST_LIMIT = 9779
    RET_HOME_CUSTOM_FURNITURE_INVALID = 9780
    RET_SUMO_ACTIVITY_STAGE_NOT_OPEN = 10000
    RET_SUMO_ACTIVITY_SWITCH_TEAM_IN_CD = 10001
    RET_SUMO_ACTIVITY_TEAM_NUM_INCORRECT = 10002
    RET_LUNA_RITE_ACTIVITY_AREA_ID_ERROR = 10004
    RET_LUNA_RITE_ACTIVITY_BATTLE_NOT_FINISH = 10005
    RET_LUNA_RITE_ACTIVITY_ALREADY_SACRIFICE = 10006
    RET_LUNA_RITE_ACTIVITY_ALREADY_TAKE_REWARD = 10007
    RET_LUNA_RITE_ACTIVITY_SACRIFICE_NOT_ENOUGH = 10008
    RET_LUNA_RITE_ACTIVITY_SEARCHING_COND_NOT_MEET = 10009
    RET_DIG_GADGET_CONFIG_ID_NOT_MATCH = 10015
    RET_DIG_FIND_NEAREST_POS_FAIL = 10016
    RET_MUSIC_GAME_LEVEL_NOT_OPEN = 10021
    RET_MUSIC_GAME_LEVEL_NOT_UNLOCK = 10022
    RET_MUSIC_GAME_LEVEL_NOT_STARTED = 10023
    RET_MUSIC_GAME_LEVEL_CONFIG_NOT_FOUND = 10024
    RET_MUSIC_GAME_LEVEL_ID_NOT_MATCH = 10025
    RET_ROGUELIKE_COIN_A_NOT_ENOUGH = 10031
    RET_ROGUELIKE_COIN_B_NOT_ENOUGH = 10032
    RET_ROGUELIKE_COIN_C_NOT_ENOUGH = 10033
    RET_ROGUELIKE_COIN_A_EXCEED_LIMIT = 10034
    RET_ROGUELIKE_COIN_B_EXCEED_LIMIT = 10035
    RET_ROGUELIKE_COIN_C_EXCEED_LIMIT = 10036
    RET_ROGUELIKE_RUNE_COUNT_NOT_ENOUGH = 10037
    RET_ROGUELIKE_NOT_IN_ROGUE_DUNGEON = 10038
    RET_ROGUELIKE_CELL_NOT_FOUND = 10039
    RET_ROGUELIKE_CELL_TYPE_INCORRECT = 10040
    RET_ROGUELIKE_CELL_ALREADY_FINISHED = 10041
    RET_ROGUELIKE_DUNGEON_HAVE_UNFINISHED_PROGRESS = 10042
    RET_ROGUELIKE_STAGE_NOT_FINISHED = 10043
    RET_ROGUELIKE_STAGE_FIRST_PASS_REWARD_HAS_TAKEN = 10045
    RET_ROGUELIKE_ACTIVITY_CONTENT_CLOSED = 10046
    RET_ROGUELIKE_DUNGEON_PRE_QUEST_NOT_FINISHED = 10047
    RET_ROGUELIKE_DUNGEON_NOT_OPEN = 10048
    RET_ROGUELIKE_SPRINT_IS_BANNED = 10049
    RET_ROGUELIKE_DUNGEON_PRE_STAGE_NOT_FINISHED = 10050
    RET_ROGUELIKE_ALL_AVATAR_DIE_CANNOT_RESUME = 10051
    RET_PLANT_FLOWER_ALREADY_TAKE_SEED = 10056
    RET_PLANT_FLOWER_FRIEND_HAVE_FLOWER_LIMIT = 10057
    RET_PLANT_FLOWER_CAN_GIVE_FLOWER_NOT_ENOUGH = 10058
    RET_PLANT_FLOWER_WISH_FLOWER_KINDS_LIMIT = 10059
    RET_PLANT_FLOWER_HAVE_FLOWER_NOT_ENOUGH = 10060
    RET_PLANT_FLOWER_FLOWER_COMBINATION_INVALID = 10061
    RET_NOT_IN_FISHING = 11001
    RET_FISH_STATE_ERROR = 11002
    RET_FISH_BAIT_LIMIT = 11003
    RET_FISHING_MAX_DISTANCE = 11004
    RET_FISHING_IN_COMBAT = 11005
    RET_FISHING_BATTLE_TOO_SHORT = 11006
    RET_FISH_GONE_AWAY = 11007
    RET_FAIL = -1


class ShopGoodsDisableType(betterproto.Enum):
    SHOP_GOODS_DISABLE_NONE = 0
    SHOP_GOODS_DISABLE_TALENT_FULL = 1
    SHOP_GOODS_DISABLE_FURNITURE_FORMULA_UNLOCKED = 2
    SHOP_GOODS_DISABLE_COSTUME_UNLOCKED = 3


class StoreType(betterproto.Enum):
    STORE_TYPE_NONE = 0
    STORE_TYPE_PACK = 1
    STORE_TYPE_DEPOT = 2


class VehicleInteractType(betterproto.Enum):
    VEHICLE_INTERACT_TYPE_NONE = 0
    VEHICLE_INTERACT_TYPE_IN = 1
    VEHICLE_INTERACT_TYPE_OUT = 2


class VisionType(betterproto.Enum):
    VISION_TYPE_NONE = 0
    VISION_TYPE_MEET = 1
    VISION_TYPE_REBORN = 2
    VISION_TYPE_REPLACE = 3
    VISION_TYPE_WAYPOINT_REBORN = 4
    VISION_TYPE_MISS = 5
    VISION_TYPE_DIE = 6
    VISION_TYPE_GATHER_ESCAPE = 7
    VISION_TYPE_REFRESH = 8
    VISION_TYPE_TRANSPORT = 9
    VISION_TYPE_REPLACE_DIE = 10
    VISION_TYPE_REPLACE_NO_NOTIFY = 11
    VISION_TYPE_BORN = 12
    VISION_TYPE_PICKUP = 13
    VISION_TYPE_REMOVE = 14
    VISION_TYPE_CHANGE_COSTUME = 15
    VISION_TYPE_FISH_REFRESH = 16
    VISION_TYPE_FISH_BIG_SHOCK = 17
    VISION_TYPE_FISH_QTE_SUCC = 18
    VISION_TYPE_EPFKMOIPADB = 19


class WidgetCreatorOpType(betterproto.Enum):
    WIDGET_CREATOR_OP_TYPE_NONE = 0
    WIDGET_CREATOR_OP_TYPE_RETRACT = 1
    WIDGET_CREATOR_OP_TYPE_RETRACT_AND_CREATE = 2


class WidgetSlotOp(betterproto.Enum):
    WIDGET_SLOT_OP_ATTACH = 0
    WIDGET_SLOT_OP_DETACH = 1


class WidgetSlotTag(betterproto.Enum):
    WIDGET_SLOT_TAG_QUICK_USE = 0
    WIDGET_SLOT_TAG_ATTACH_AVATAR = 1


class AchievementInfoAchievementInfoStatus(betterproto.Enum):
    ACHIEVEMENT_INVALID = 0
    ACHIEVEMENT_UNFINISHED = 1
    ACHIEVEMENT_FINISHED = 2
    ACHIEVEMENT_POINT_TAKEN = 3


class AnchorPointOpReqAnchorPointOpType(betterproto.Enum):
    ANCHOR_POINT_OP_TYPE_NONE = 0
    ANCHOR_POINT_OP_TYPE_TELEPORT = 1
    ANCHOR_POINT_OP_TYPE_REMOVE = 2


class ChatInfoSystemHintType(betterproto.Enum):
    SYSTEM_HINT_TYPE_CHAT_NONE = 0
    SYSTEM_HINT_TYPE_CHAT_ENTER_WORLD = 1
    SYSTEM_HINT_TYPE_CHAT_LEAVE_WORLD = 2


class CheckAddItemExceedLimitNotifyItemExceedLimitMsgType(betterproto.Enum):
    ITEM_EXCEED_LIMIT_MSG_TYPE_DEFAULT = 0
    ITEM_EXCEED_LIMIT_MSG_TYPE_TEXT = 1
    ITEM_EXCEED_LIMIT_MSG_TYPE_DIALOG = 2
    ITEM_EXCEED_LIMIT_MSG_TYPE_BONLGEEEBBF = 3


class CoopChapterState(betterproto.Enum):
    STATE_CLOSE = 0
    STATE_COND_NOT_MEET = 1
    STATE_COND_MEET = 2
    STATE_ACCEPT = 3


class CoopPointState(betterproto.Enum):
    STATE_UNSTARTED = 0
    STATE_STARTED = 1
    STATE_FINISHED = 2


class CoopRewardState(betterproto.Enum):
    STATE_UNLOCK = 0
    STATE_LOCK = 1
    STATE_TAKEN = 2


class MarkMapReqOperation(betterproto.Enum):
    OPERATION_ADD = 0
    OPERATION_MOD = 1
    OPERATION_DEL = 2
    OPERATION_GET = 3


class PlayerApplyEnterMpResultNotifyReason(betterproto.Enum):
    REASON_PLAYER_JUDGE = 0
    REASON_SCENE_CANNOT_ENTER = 1
    REASON_PLAYER_CANNOT_ENTER_MP = 2
    REASON_SYSTEM_JUDGE = 3
    REASON_ALLOW_ENTER_PLAYER_FULL = 4
    REASON_WORLD_LEVEL_LOWER_THAN_HOST = 5
    REASON_HOST_IN_MATCH = 6
    REASON_PLAYER_IN_BLACKLIST = 7
    REASON_PS_PLAYER_NOT_ACCEPT_OTHERS = 8
    REASON_HOST_IS_BLOCKED = 9
    REASON_OTHER_DATA_VERSION_NOT_LATEST = 10
    REASON_DATA_VERSION_NOT_LATEST = 11
    REASON_PLAYER_NOT_IN_PLAYER_WORLD = 12
    REASON_MAX_PLAYER = 13


class TowerLevelEndNotifyContinueStateType(betterproto.Enum):
    CONTINUE_STATE_TYPE_CAN_NOT_CONTINUE = 0
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_LEVEL = 1
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_FLOOR = 2


class TrialAvatarGrantRecordGrantReason(betterproto.Enum):
    GRANT_REASON_INVALID = 0
    GRANT_REASON_BY_QUEST = 1
    GRANT_REASON_BY_TRIAL_AVATAR_ACTIVITY = 2
    GRANT_REASON_BY_DUNGEON_ELEMENT_CHALLENGE = 3
    GRANT_REASON_BY_MIST_TRIAL_ACTIVITY = 4
    GRANT_REASON_BY_SUMO_ACTIVITY = 5
    GRANT_REASON_ELPMDIEIOHP = 6
    GRANT_REASON_FALPDBLGHJB = 7
    GRANT_REASON_GAMADMGGMBC = 8


class WorldDataNotifyDataType(betterproto.Enum):
    DATA_TYPE_NONE = 0
    DATA_TYPE_WORLD_LEVEL = 1
    DATA_TYPE_IS_IN_MP_MODE = 2


@dataclass(eq=False, repr=False)
class AbilityActionGenerateElemBall(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    room_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityAppliedAbility(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(1)
    ability_override: "AbilityString" = betterproto.message_field(2)
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(3)
    instanced_ability_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AbilityAppliedModifier(betterproto.Message):
    modifier_local_id: int = betterproto.int32_field(1)
    parent_ability_entity_id: int = betterproto.uint32_field(2)
    parent_ability_name: "AbilityString" = betterproto.message_field(3)
    parent_ability_override: "AbilityString" = betterproto.message_field(4)
    instanced_ability_id: int = betterproto.uint32_field(5)
    instanced_modifier_id: int = betterproto.uint32_field(6)
    exist_duration: float = betterproto.float_field(7)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        8
    )
    apply_entity_id: int = betterproto.uint32_field(9)
    is_attached_parent_ability: bool = betterproto.bool_field(10)
    modifier_durability: "ModifierDurability" = betterproto.message_field(11)
    sbuff_uid: int = betterproto.uint32_field(12)
    is_serverbuff_modifier: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class AbilityAttachedModifier(betterproto.Message):
    is_invalid: bool = betterproto.bool_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(3)
    is_serverbuff_modifier: bool = betterproto.bool_field(4)
    attach_name_hash: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AbilityChangeNotify(betterproto.Message):
    """CmdId: 1155 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(3)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AbilityControlBlock(betterproto.Message):
    ability_embryo_list: List["AbilityEmbryo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityEmbryo(betterproto.Message):
    ability_id: int = betterproto.uint32_field(1)
    ability_name_hash: int = betterproto.fixed32_field(2)
    ability_override_name_hash: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class AbilityGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_target_type: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityIdentifier(betterproto.Message):
    instanced_ability_id: int = betterproto.uint32_field(1)
    ability_caster_id: int = betterproto.uint32_field(2)
    local_id: int = betterproto.int32_field(3)
    instanced_modifier_id: int = betterproto.uint32_field(4)
    modifier_owner_id: int = betterproto.uint32_field(5)
    is_serverbuff_modifier: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class AbilityInvocationsNotify(betterproto.Message):
    """
    CmdId: 1131 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntry(betterproto.Message):
    head: "AbilityInvokeEntryHead" = betterproto.message_field(1)
    argument_type: "AbilityInvokeArgument" = betterproto.enum_field(2)
    ability_data: bytes = betterproto.bytes_field(3)
    entity_id: int = betterproto.uint32_field(4)
    forward_type: "ForwardType" = betterproto.enum_field(5)
    forward_peer: int = betterproto.uint32_field(6)
    event_id: int = betterproto.uint32_field(7)
    total_tick_time: float = betterproto.double_field(8)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntryHead(betterproto.Message):
    instanced_ability_id: int = betterproto.uint32_field(1)
    instanced_modifier_id: int = betterproto.uint32_field(2)
    local_id: int = betterproto.int32_field(3)
    modifier_config_local_id: int = betterproto.int32_field(4)
    target_id: int = betterproto.uint32_field(5)
    is_serverbuff_modifier: bool = betterproto.bool_field(6)
    server_buff_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AbilityMetaModifierChange(betterproto.Message):
    action: "ModifierAction" = betterproto.enum_field(1)
    parent_ability_name: "AbilityString" = betterproto.message_field(2)
    parent_ability_override: "AbilityString" = betterproto.message_field(3)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        4
    )
    properties: List["ModifierProperty"] = betterproto.message_field(5)
    modifier_local_id: int = betterproto.int32_field(6)
    is_mute_remote: bool = betterproto.bool_field(7)
    apply_entity_id: int = betterproto.uint32_field(8)
    is_attached_parent_ability: bool = betterproto.bool_field(9)
    server_buff_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AbilityMetaReInitOverrideMap(betterproto.Message):
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinCostStamina(betterproto.Message):
    is_swim: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinRecoverInfo(betterproto.Message):
    local_id: int = betterproto.uint32_field(3)
    data_list: List[int] = betterproto.uint32_field(4)
    is_serverbuff_modifier: bool = betterproto.bool_field(5)
    massive_prop_list: List["MassivePropSyncInfo"] = betterproto.message_field(6)
    instanced_ability_id: int = betterproto.uint32_field(1, group="source")
    instanced_modifier_id: int = betterproto.uint32_field(2, group="source")


@dataclass(eq=False, repr=False)
class AbilityMixinWidgetMpSupport(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityScalarValueEntry(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value_type: "AbilityScalarType" = betterproto.enum_field(2)
    float_value: float = betterproto.float_field(3, group="value")
    string_value: str = betterproto.string_field(4, group="value")
    int_value: int = betterproto.int32_field(5, group="value")
    uint_value: int = betterproto.uint32_field(6, group="value")


@dataclass(eq=False, repr=False)
class AbilityString(betterproto.Message):
    str: builtins.str = betterproto.string_field(1, group="type")
    hash: int = betterproto.uint32_field(2, group="type")


@dataclass(eq=False, repr=False)
class AbilitySyncStateInfo(betterproto.Message):
    is_inited: bool = betterproto.bool_field(1)
    dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(2)
    applied_abilities: List["AbilityAppliedAbility"] = betterproto.message_field(3)
    applied_modifiers: List["AbilityAppliedModifier"] = betterproto.message_field(4)
    mixin_recover_infos: List["AbilityMixinRecoverInfo"] = betterproto.message_field(5)
    sgv_dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class AchievementInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    status: "AchievementInfoAchievementInfoStatus" = betterproto.enum_field(2)
    current: int = betterproto.uint32_field(3)
    goal: int = betterproto.uint32_field(4)
    achievedate: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ActivityInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    activity_type: int = betterproto.uint32_field(5)
    is_play_open_anim: bool = betterproto.bool_field(6)
    is_finished: bool = betterproto.bool_field(7)
    is_starting: bool = betterproto.bool_field(8)
    watcher_info_list: List["ActivityWatcherInfo"] = betterproto.message_field(9)
    meet_cond_list: List[int] = betterproto.uint32_field(10)
    expire_cond_list: List[int] = betterproto.uint32_field(15)
    selected_avatar_reward_id: int = betterproto.uint32_field(17)
    activity_coin_map: Dict[int, int] = betterproto.map_field(
        18, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    score_limit: int = betterproto.uint32_field(19)
    cur_score: int = betterproto.uint32_field(20)
    taken_reward_list: List[int] = betterproto.uint32_field(24)
    is_hidden: bool = betterproto.bool_field(26)
    first_day_start_time: int = betterproto.uint32_field(27)


@dataclass(eq=False, repr=False)
class ActivityNullDetailInfo(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ActivityWatcherInfo(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(1)
    cur_progress: int = betterproto.uint32_field(2)
    total_progress: int = betterproto.uint32_field(3)
    is_taken_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class AdjustTrackingInfo(betterproto.Message):
    idfa: str = betterproto.string_field(1)
    gps_adid: str = betterproto.string_field(2)
    fire_adid: str = betterproto.string_field(3)
    adid: str = betterproto.string_field(4)
    event_token: str = betterproto.string_field(5)
    app_token: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AiSkillCdInfo(betterproto.Message):
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class AiSyncInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    has_path_to_target: bool = betterproto.bool_field(2)
    is_self_killing: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AiThreatInfo(betterproto.Message):
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class AllWidgetDataNotify(betterproto.Message):
    """CmdId: 4273 EnetChannelId: 0 EnetIsReliable: true"""

    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(13)
    next_anchor_point_usable_time: int = betterproto.uint32_field(10)
    lunch_box_data: "LunchBoxData" = betterproto.message_field(11)
    oneoff_gather_point_detector_data_list: List[
        "OneoffGatherPointDetectorData"
    ] = betterproto.message_field(5)
    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        6
    )
    cool_down_group_data_list: List["WidgetCoolDownData"] = betterproto.message_field(2)
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        4
    )
    slot_list: List["WidgetSlotData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AnchorPointData(betterproto.Message):
    anchor_point_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)
    rot: "Vector" = betterproto.message_field(3)
    end_time: int = betterproto.uint32_field(4)
    scene_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AnchorPointDataNotify(betterproto.Message):
    """CmdId: 4268 EnetChannelId: 0 EnetIsReliable: true"""

    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(14)
    next_usable_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AnchorPointOpReq(betterproto.Message):
    """
    CmdId: 4254 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    anchor_point_op_type: int = betterproto.uint32_field(6)
    anchor_point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AnchorPointOpRsp(betterproto.Message):
    """CmdId: 4278 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    anchor_point_op_type: int = betterproto.uint32_field(3)
    anchor_point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfo(betterproto.Message):
    para_type: int = betterproto.uint32_field(1)
    int_val: int = betterproto.int32_field(2, group="para_val")
    float_val: float = betterproto.float_field(3, group="para_val")
    bool_val: bool = betterproto.bool_field(4, group="para_val")


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfoPair(betterproto.Message):
    name_id: int = betterproto.int32_field(1)
    animator_para: "AnimatorParameterValueInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AskAddFriendNotify(betterproto.Message):
    """CmdId: 4038 EnetChannelId: 0 EnetIsReliable: true"""

    target_uid: int = betterproto.uint32_field(13)
    target_friend_brief: "FriendBrief" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AskAddFriendReq(betterproto.Message):
    """
    CmdId: 4032 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AskAddFriendRsp(betterproto.Message):
    """
    CmdId: 4017 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(11)
    target_uid: int = betterproto.uint32_field(14)
    param: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AttackHitEffectResult(betterproto.Message):
    hit_eff_level: int = betterproto.uint32_field(1)
    retreat_strength: float = betterproto.float_field(2)
    air_strength: float = betterproto.float_field(3)
    hit_halt_time: float = betterproto.float_field(4)
    hit_halt_time_scale: float = betterproto.float_field(5)
    original_hit_eff_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AttackResult(betterproto.Message):
    attacker_id: int = betterproto.uint32_field(1)
    defense_id: int = betterproto.uint32_field(2)
    anim_event_id: str = betterproto.string_field(3)
    ability_identifier: "AbilityIdentifier" = betterproto.message_field(4)
    damage: float = betterproto.float_field(6)
    is_crit: bool = betterproto.bool_field(7)
    hit_collision: "HitCollision" = betterproto.message_field(8)
    hit_pos_type: int = betterproto.uint32_field(9)
    endure_break: int = betterproto.uint32_field(10)
    resolved_dir: "Vector" = betterproto.message_field(11)
    hit_retreat_angle_compat: int = betterproto.int32_field(12)
    hit_eff_result: "AttackHitEffectResult" = betterproto.message_field(13)
    element_type: int = betterproto.uint32_field(14)
    use_gadget_damage_action: bool = betterproto.bool_field(19)
    gadget_damage_action_idx: int = betterproto.uint32_field(20)
    is_resist_text: bool = betterproto.bool_field(22)
    critical_rand: int = betterproto.uint32_field(23)
    element_amplify_rate: float = betterproto.float_field(24)
    damage_shield: float = betterproto.float_field(26)
    mute_element_hurt: bool = betterproto.bool_field(27)
    amplify_reaction_type: int = betterproto.uint32_field(30)
    addhurt_reaction_type: int = betterproto.uint32_field(31)
    bullet_fly_time_ms: int = betterproto.uint32_field(32)
    attack_count: int = betterproto.uint32_field(33)
    hashed_anim_event_id: int = betterproto.uint32_field(34)
    attack_timestamp_ms: int = betterproto.uint32_field(36)
    endure_delta: float = betterproto.float_field(37)
    target_type: int = betterproto.uint32_field(38)
    element_durability_attenuation: float = betterproto.float_field(39)
    egpfeacdclp: int = betterproto.uint32_field(40)


@dataclass(eq=False, repr=False)
class AvatarAddNotify(betterproto.Message):
    """CmdId: 1757 EnetChannelId: 0 EnetIsReliable: true"""

    avatar: "AvatarInfo" = betterproto.message_field(11)
    is_in_team: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeNotify(betterproto.Message):
    """CmdId: 1780 EnetChannelId: 0 EnetIsReliable: true"""

    entity_info: "SceneEntityInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeReq(betterproto.Message):
    """
    CmdId: 1734 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(7)
    costume_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeRsp(betterproto.Message):
    """CmdId: 1723 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    avatar_guid: int = betterproto.uint64_field(3)
    costume_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarDataNotify(betterproto.Message):
    """CmdId: 1695 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_list: List["AvatarInfo"] = betterproto.message_field(15)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_avatar_team_id: int = betterproto.uint32_field(2)
    choose_avatar_guid: int = betterproto.fixed64_field(11)
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(14)
    owned_flycloak_list: List[int] = betterproto.uint32_field(8)
    owned_costume_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndReq(betterproto.Message):
    """
    CmdId: 1616 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    die_guid: int = betterproto.uint64_field(14)
    skill_id: int = betterproto.uint32_field(4)
    reborn_pos: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndRsp(betterproto.Message):
    """CmdId: 1765 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    die_guid: int = betterproto.uint64_field(11)
    skill_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarEnterSceneInfo(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    avatar_entity_id: int = betterproto.uint32_field(2)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)
    weapon_guid: int = betterproto.uint64_field(5)
    weapon_entity_id: int = betterproto.uint32_field(6)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class AvatarEquipAffixInfo(betterproto.Message):
    equip_affix_id: int = betterproto.uint32_field(1)
    left_cd_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarEquipChangeNotify(betterproto.Message):
    """CmdId: 690 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    avatar_guid: int = betterproto.uint64_field(1)
    equip_type: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(8)
    equip_guid: int = betterproto.uint64_field(4)
    weapon: "SceneWeaponInfo" = betterproto.message_field(13)
    reliquary: "SceneReliquaryInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AvatarExcelInfo(betterproto.Message):
    prefab_path_hash: int = betterproto.uint64_field(1)
    prefab_path_remote_hash: int = betterproto.uint64_field(2)
    controller_path_hash: int = betterproto.uint64_field(3)
    controller_path_remote_hash: int = betterproto.uint64_field(4)
    combat_config_hash: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataRsp(betterproto.Message):
    """CmdId: 1636 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    open_expedition_list: List[int] = betterproto.uint32_field(6)
    expedition_count_limit: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackReq(betterproto.Message):
    """
    CmdId: 1655 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: List[int] = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackRsp(betterproto.Message):
    """CmdId: 1642 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        14, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionDataNotify(betterproto.Message):
    """CmdId: 1698 EnetChannelId: 0 EnetIsReliable: true"""

    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardReq(betterproto.Message):
    """
    CmdId: 1603 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardRsp(betterproto.Message):
    """CmdId: 1646 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    item_list: List["ItemParam"] = betterproto.message_field(6)
    bnfddknnjjh: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AvatarExpeditionInfo(betterproto.Message):
    state: "AvatarExpeditionState" = betterproto.enum_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    shorten_ratio: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartReq(betterproto.Message):
    """
    CmdId: 1675 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(8)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartRsp(betterproto.Message):
    """CmdId: 1688 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarFetterDataNotify(betterproto.Message):
    """CmdId: 1777 EnetChannelId: 0 EnetIsReliable: true"""

    fetter_info_map: Dict[int, "AvatarFetterInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarFetterInfo(betterproto.Message):
    exp_number: int = betterproto.uint32_field(1)
    exp_level: int = betterproto.uint32_field(2)
    open_id_list: List[int] = betterproto.uint32_field(3)
    finish_id_list: List[int] = betterproto.uint32_field(4)
    rewarded_fetter_level_list: List[int] = betterproto.uint32_field(5)
    fetter_list: List["FetterData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardReq(betterproto.Message):
    """
    CmdId: 1704 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(15)
    fetter_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardRsp(betterproto.Message):
    """CmdId: 1606 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    avatar_guid: int = betterproto.uint64_field(12)
    fetter_level: int = betterproto.uint32_field(10)
    reward_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AvatarFightPropNotify(betterproto.Message):
    """CmdId: 1232 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(3)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarFightPropUpdateNotify(betterproto.Message):
    """CmdId: 1217 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarFlycloakChangeNotify(betterproto.Message):
    """CmdId: 1681 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(12)
    flycloak_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarGainCostumeNotify(betterproto.Message):
    """CmdId: 1670 EnetChannelId: 0 EnetIsReliable: true"""

    costume_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AvatarGainFlycloakNotify(betterproto.Message):
    """CmdId: 1615 EnetChannelId: 0 EnetIsReliable: true"""

    flycloak_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    life_state: int = betterproto.uint32_field(4)
    equip_guid_list: List[int] = betterproto.uint64_field(5)
    talent_id_list: List[int] = betterproto.uint32_field(6)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    trial_avatar_info: "TrialAvatarInfo" = betterproto.message_field(9)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    skill_depot_id: int = betterproto.uint32_field(11)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(12)
    core_proud_skill_level: int = betterproto.uint32_field(13)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(14)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    expedition_state: "AvatarExpeditionState" = betterproto.enum_field(16)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_focus: bool = betterproto.bool_field(18)
    avatar_type: int = betterproto.uint32_field(19)
    team_resonance_list: List[int] = betterproto.uint32_field(20)
    wearing_flycloak_id: int = betterproto.uint32_field(21)
    equip_affix_list: List["AvatarEquipAffixInfo"] = betterproto.message_field(22)
    born_time: int = betterproto.uint32_field(23)
    pending_promote_reward_list: List[int] = betterproto.uint32_field(24)
    costume_id: int = betterproto.uint32_field(25)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(26)
    anim_hash: int = betterproto.uint32_field(27)


@dataclass(eq=False, repr=False)
class AvatarLifeStateChangeNotify(betterproto.Message):
    """CmdId: 1235 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(8)
    life_state: int = betterproto.uint32_field(15)
    source_entity_id: int = betterproto.uint32_field(1)
    attack_tag: str = betterproto.string_field(10)
    die_type: "PlayerDieType" = betterproto.enum_field(11)
    move_reliable_seq: int = betterproto.uint32_field(7)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardReq(betterproto.Message):
    """
    CmdId: 1676 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(12)
    promote_level: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardRsp(betterproto.Message):
    """CmdId: 1613 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    avatar_guid: int = betterproto.uint64_field(2)
    promote_level: int = betterproto.uint32_field(14)
    reward_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarPromoteReq(betterproto.Message):
    """
    CmdId: 1711 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    guid: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class AvatarPromoteRsp(betterproto.Message):
    """CmdId: 1668 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    guid: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class AvatarPropNotify(betterproto.Message):
    """CmdId: 1255 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(4)
    prop_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_INT64
    )


@dataclass(eq=False, repr=False)
class AvatarSkillChangeNotify(betterproto.Message):
    """CmdId: 1030 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(4)
    entity_id: int = betterproto.uint32_field(15)
    skill_depot_id: int = betterproto.uint32_field(5)
    avatar_skill_id: int = betterproto.uint32_field(2)
    old_level: int = betterproto.uint32_field(10)
    cur_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarSkillInfo(betterproto.Message):
    pass_cd_time: int = betterproto.uint32_field(1)
    full_cd_time_list: List[int] = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillInfoNotify(betterproto.Message):
    """CmdId: 1035 EnetChannelId: 0 EnetIsReliable: true"""

    guid: int = betterproto.uint64_field(4)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarSkillMaxChargeCountNotify(betterproto.Message):
    """CmdId: 1085 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(15)
    skill_id: int = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeReq(betterproto.Message):
    """
    CmdId: 1027 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(1)
    avatar_skill_id: int = betterproto.uint32_field(5)
    old_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeRsp(betterproto.Message):
    """CmdId: 1007 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(3)
    avatar_guid: int = betterproto.uint64_field(10)
    avatar_skill_id: int = betterproto.uint32_field(2)
    old_level: int = betterproto.uint32_field(5)
    cur_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarTeam(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)
    team_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class AvatarTeamResonanceInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    add_team_resonance_id_list: List[int] = betterproto.uint32_field(3)
    del_team_resonance_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarTeamUpdateNotify(betterproto.Message):
    """CmdId: 1713 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class AvatarUnlockTalentNotify(betterproto.Message):
    """CmdId: 1041 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(15)
    talent_id: int = betterproto.uint32_field(13)
    skill_depot_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarUpgradeReq(betterproto.Message):
    """
    CmdId: 1680 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    item_id: int = betterproto.uint32_field(9)
    count: int = betterproto.uint32_field(12)
    avatar_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarUpgradeRsp(betterproto.Message):
    """CmdId: 1779 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(6)
    avatar_guid: int = betterproto.uint64_field(15)
    old_level: int = betterproto.uint32_field(5)
    cur_level: int = betterproto.uint32_field(7)
    old_fight_prop_map: Dict[int, float] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    cur_fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakReq(betterproto.Message):
    """
    CmdId: 1728 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(11)
    flycloak_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakRsp(betterproto.Message):
    """CmdId: 1770 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    avatar_guid: int = betterproto.uint64_field(8)
    flycloak_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Birthday(betterproto.Message):
    month: int = betterproto.uint32_field(1)
    day: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BlockInfo(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    data_version: int = betterproto.uint32_field(2)
    bin_data: bytes = betterproto.bytes_field(3)
    is_dirty: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class BlossomBriefInfo(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    circle_camp_id: int = betterproto.uint32_field(2)
    city_id: int = betterproto.uint32_field(3)
    resin: int = betterproto.uint32_field(4)
    pos: "Vector" = betterproto.message_field(5)
    reward_id: int = betterproto.uint32_field(6)
    monster_level: int = betterproto.uint32_field(7)
    is_guide_opened: bool = betterproto.bool_field(8)
    state: int = betterproto.uint32_field(9)
    scene_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BlossomChestInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    qualify_uid_list: List[int] = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    dead_time: int = betterproto.uint32_field(4)
    blossom_refresh_type: int = betterproto.uint32_field(5)
    refresh_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BossChestInfo(betterproto.Message):
    monster_config_id: int = betterproto.uint32_field(1)
    resin: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    uid_discount_map: Dict[int, "WeeklyBossResinDiscountInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class BuildingInfo(betterproto.Message):
    building_id: int = betterproto.uint32_field(1)
    point_config_id: int = betterproto.uint32_field(2)
    cost: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)
    refund: int = betterproto.uint32_field(5)
    owner_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BuyGoodsReq(betterproto.Message):
    """CmdId: 741 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    shop_type: int = betterproto.uint32_field(15)
    goods: "ShopGoods" = betterproto.message_field(13)
    buy_count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BuyGoodsRsp(betterproto.Message):
    """CmdId: 737 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    shop_type: int = betterproto.uint32_field(12)
    goods: "ShopGoods" = betterproto.message_field(13)
    buy_count: int = betterproto.uint32_field(8)
    goods_list: List["ShopGoods"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsReq(betterproto.Message):
    """CmdId: 610 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_weapon_guid: int = betterproto.uint64_field(9)
    food_weapon_guid_list: List[int] = betterproto.uint64_field(10)
    item_param_list: List["ItemParam"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsRsp(betterproto.Message):
    """CmdId: 666 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)
    target_weapon_guid: int = betterproto.uint64_field(10)
    item_param_list: List["ItemParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CanUseSkillNotify(betterproto.Message):
    """CmdId: 1098 EnetChannelId: 0 EnetIsReliable: true"""

    is_can_use_skill: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class CardProductRewardNotify(betterproto.Message):
    """CmdId: 4104 EnetChannelId: 0 EnetIsReliable: true"""

    product_id: str = betterproto.string_field(6)
    hcoin: int = betterproto.uint32_field(11)
    remain_days: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChallengeDataNotify(betterproto.Message):
    """CmdId: 963 EnetChannelId: 0 EnetIsReliable: true"""

    challenge_index: int = betterproto.uint32_field(8)
    param_index: int = betterproto.uint32_field(9)
    value: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChangeAvatarReq(betterproto.Message):
    """
    CmdId: 1662 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    guid: int = betterproto.uint64_field(5)
    skill_id: int = betterproto.uint32_field(11)
    is_move: bool = betterproto.bool_field(7)
    move_pos: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ChangeAvatarRsp(betterproto.Message):
    """CmdId: 1710 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(6)
    cur_guid: int = betterproto.uint64_field(11)
    skill_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChangeGameTimeReq(betterproto.Message):
    """CmdId: 149 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    game_time: int = betterproto.uint32_field(9)
    is_force_set: bool = betterproto.bool_field(7)
    extra_days: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChangeGameTimeRsp(betterproto.Message):
    """CmdId: 182 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    cur_game_time: int = betterproto.uint32_field(1)
    extra_days: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeMailStarNotify(betterproto.Message):
    """
    CmdId: 1407 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    mail_id_list: List[int] = betterproto.uint32_field(5)
    is_star: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarReq(betterproto.Message):
    """
    CmdId: 1689 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid_list: List[int] = betterproto.uint64_field(5)
    cur_avatar_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarRsp(betterproto.Message):
    """CmdId: 1617 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    avatar_guid_list: List[int] = betterproto.uint64_field(3)
    cur_avatar_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class ChangeTeamNameReq(betterproto.Message):
    """
    CmdId: 1762 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    team_id: int = betterproto.int32_field(12)
    team_name: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class ChangeTeamNameRsp(betterproto.Message):
    """CmdId: 1789 EnetChannelId: 0 EnetIsReliable: true"""

    team_id: int = betterproto.int32_field(6)
    team_name: str = betterproto.string_field(2)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonResultInfo(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(1)
    is_success: bool = betterproto.bool_field(2)
    challenge_score: int = betterproto.uint32_field(3)
    challenge_max_score: int = betterproto.uint32_field(4)
    is_in_time_limit: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ChatInfo(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    sequence: int = betterproto.uint32_field(3)
    to_uid: int = betterproto.uint32_field(4)
    is_read: bool = betterproto.bool_field(5)
    text: str = betterproto.string_field(100, group="content")
    icon: int = betterproto.uint32_field(101, group="content")
    system_hint: "ChatInfoSystemHint" = betterproto.message_field(102, group="content")


@dataclass(eq=False, repr=False)
class ChatInfoSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CheckAddItemExceedLimitNotify(betterproto.Message):
    """CmdId: 653 EnetChannelId: 0 EnetIsReliable: true"""

    is_drop: bool = betterproto.bool_field(1)
    exceeded_item_list: List[int] = betterproto.uint32_field(8)
    exceeded_item_type_list: List[int] = betterproto.uint32_field(3)
    msg_type: "CheckAddItemExceedLimitNotifyItemExceedLimitMsgType" = (
        betterproto.enum_field(14)
    )


@dataclass(eq=False, repr=False)
class ChildQuest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    quest_config_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamReq(betterproto.Message):
    """
    CmdId: 1800 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    team_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamRsp(betterproto.Message):
    """CmdId: 1673 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    cur_team_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CityInfo(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    crystal_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ClientAbilityChangeNotify(betterproto.Message):
    """
    CmdId: 1127 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    entity_id: int = betterproto.uint32_field(6)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(8)
    jcjnlmlghje: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class ClientAbilityInitBeginNotify(betterproto.Message):
    """
    CmdId: 1141 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientAbilityInitFinishNotify(betterproto.Message):
    """
    CmdId: 1137 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    entity_id: int = betterproto.uint32_field(13)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ClientCollectorData(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    max_points: int = betterproto.uint32_field(2)
    curr_points: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ClientCollectorDataNotify(betterproto.Message):
    """CmdId: 4264 EnetChannelId: 0 EnetIsReliable: true"""

    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        8
    )


@dataclass(eq=False, repr=False)
class ClientGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_type: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    target_entity_id: int = betterproto.uint32_field(5)
    async_load: bool = betterproto.bool_field(6)
    ceghbcjmnfj: bool = betterproto.bool_field(7)
    fcfecgfhlad: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CodexDataFullNotify(betterproto.Message):
    """CmdId: 4201 EnetChannelId: 0 EnetIsReliable: true"""

    type_data_list: List["CodexTypeData"] = betterproto.message_field(5)
    igmffagocia: List[int] = betterproto.uint32_field(11)
    bifmjkdhhlg: int = betterproto.uint32_field(8)
    aehjdipolhc: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CodexDataUpdateNotify(betterproto.Message):
    """CmdId: 4210 EnetChannelId: 0 EnetIsReliable: true"""

    type: "CodexType" = betterproto.enum_field(3)
    id: int = betterproto.uint32_field(4)
    weapon_max_promote_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CodexTypeComparer(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CodexTypeData(betterproto.Message):
    type: "CodexType" = betterproto.enum_field(1)
    codex_id_list: List[int] = betterproto.uint32_field(2)
    have_viewed_list: List[bool] = betterproto.bool_field(3)
    weapon_max_promote_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CombatInvocationsNotify(betterproto.Message):
    """CmdId: 316 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    invoke_list: List["CombatInvokeEntry"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CombatInvokeEntry(betterproto.Message):
    argument_type: "CombatTypeArgument" = betterproto.enum_field(1)
    forward_type: "ForwardType" = betterproto.enum_field(2)
    combat_data: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class CombineDataNotify(betterproto.Message):
    """CmdId: 661 EnetChannelId: 0 EnetIsReliable: true"""

    combine_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CombineFormulaDataNotify(betterproto.Message):
    """CmdId: 688 EnetChannelId: 0 EnetIsReliable: true"""

    combine_id: int = betterproto.uint32_field(6)
    is_locked: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CombineReq(betterproto.Message):
    """CmdId: 654 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    combine_id: int = betterproto.uint32_field(5)
    combine_count: int = betterproto.uint32_field(3)
    avatar_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class CombineRsp(betterproto.Message):
    """CmdId: 646 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    combine_id: int = betterproto.uint32_field(12)
    combine_count: int = betterproto.uint32_field(6)
    avatar_guid: int = betterproto.uint64_field(15)
    cost_item_list: List["ItemParam"] = betterproto.message_field(10)
    result_item_list: List["ItemParam"] = betterproto.message_field(2)
    total_random_item_list: List["ItemParam"] = betterproto.message_field(9)
    total_return_item_list: List["ItemParam"] = betterproto.message_field(4)
    total_extra_item_list: List["ItemParam"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CoopCg(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_unlock: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CoopChapter(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: "CoopChapterState" = betterproto.enum_field(2)
    lock_reason_list: List[int] = betterproto.uint32_field(3)
    coop_point_list: List["CoopPoint"] = betterproto.message_field(4)
    coop_reward_list: List["CoopReward"] = betterproto.message_field(5)
    coop_cg_list: List["CoopCg"] = betterproto.message_field(6)
    total_end_count: int = betterproto.uint32_field(7)
    finished_end_count: int = betterproto.uint32_field(8)
    seen_ending_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    finish_dialog_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CoopDataNotify(betterproto.Message):
    """CmdId: 1976 EnetChannelId: 0 EnetIsReliable: true"""

    chapter_list: List["CoopChapter"] = betterproto.message_field(13)
    is_have_progress: bool = betterproto.bool_field(14)
    cur_coop_point: int = betterproto.uint32_field(5)
    viewed_chapter_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CoopPoint(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: "CoopPointState" = betterproto.enum_field(2)
    self_confidence: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CoopReward(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: "CoopRewardState" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class CountDownDelete(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CreateVehicleReq(betterproto.Message):
    """CmdId: 819 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    vehicle_id: int = betterproto.uint32_field(9)
    scene_point_id: int = betterproto.uint32_field(15)
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CreateVehicleRsp(betterproto.Message):
    """CmdId: 812 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    vehicle_id: int = betterproto.uint32_field(8)
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CurVehicleInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    pos: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CustomCommonNodeInfo(betterproto.Message):
    parent_index: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    slot_identifier: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CustomGadgetTreeInfo(betterproto.Message):
    node_list: List["CustomCommonNodeInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CutSceneBeginNotify(betterproto.Message):
    """CmdId: 300 EnetChannelId: 0 EnetIsReliable: true"""

    cutscene_id: int = betterproto.uint32_field(9)
    is_wait_others: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class CutSceneEndNotify(betterproto.Message):
    """CmdId: 299 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(8)
    cutscene_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CutSceneFinishNotify(betterproto.Message):
    """CmdId: 294 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    cutscene_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DateTimeDelete(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DealAddFriendReq(betterproto.Message):
    """
    CmdId: 4085 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(7)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DealAddFriendRsp(betterproto.Message):
    """
    CmdId: 4035 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(3)
    target_uid: int = betterproto.uint32_field(2)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class DelMailReq(betterproto.Message):
    """
    CmdId: 1417 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    mail_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DelMailRsp(betterproto.Message):
    """CmdId: 1485 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    mail_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DelTeamEntityNotify(betterproto.Message):
    """CmdId: 302 EnetChannelId: 0 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(8)
    del_entity_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DelayWeekCountDownDelete(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DeleteFriendNotify(betterproto.Message):
    """CmdId: 4063 EnetChannelId: 0 EnetIsReliable: true"""

    target_uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DeleteFriendReq(betterproto.Message):
    """
    CmdId: 4055 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DeleteFriendRsp(betterproto.Message):
    """CmdId: 4027 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    target_uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DestroyMaterialReq(betterproto.Message):
    """CmdId: 678 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    material_list: List["MaterialInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class DestroyMaterialRsp(betterproto.Message):
    """CmdId: 608 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    item_id_list: List[int] = betterproto.uint32_field(11)
    item_count_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DoGachaReq(betterproto.Message):
    """
    CmdId: 1541 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    gacha_type: int = betterproto.uint32_field(10)
    gacha_times: int = betterproto.uint32_field(15)
    gacha_random: int = betterproto.uint32_field(5)
    gacha_schedule_id: int = betterproto.uint32_field(6)
    gacha_tag: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class DoGachaRsp(betterproto.Message):
    """CmdId: 1537 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    gacha_type: int = betterproto.uint32_field(11)
    gacha_times: int = betterproto.uint32_field(3)
    gacha_schedule_id: int = betterproto.uint32_field(4)
    gacha_item_list: List["GachaItem"] = betterproto.message_field(2)
    new_gacha_random: int = betterproto.uint32_field(8)
    cost_item_id: int = betterproto.uint32_field(6)
    cost_item_num: int = betterproto.uint32_field(1)
    ten_cost_item_id: int = betterproto.uint32_field(14)
    ten_cost_item_num: int = betterproto.uint32_field(7)
    left_gacha_times: int = betterproto.uint32_field(15)
    gacha_times_limit: int = betterproto.uint32_field(13)
    wish_item_id: int = betterproto.uint32_field(10)
    wish_progress: int = betterproto.uint32_field(5)
    wish_max_progress: int = betterproto.uint32_field(12)
    nkjoboabfoj: int = betterproto.uint32_field(1679)
    podalhilikf: bool = betterproto.bool_field(1561)


@dataclass(eq=False, repr=False)
class DropHintNotify(betterproto.Message):
    """CmdId: 622 EnetChannelId: 0 EnetIsReliable: true"""

    item_id_list: List[int] = betterproto.uint32_field(12)
    position: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DungeonChallengeBeginNotify(betterproto.Message):
    """CmdId: 990 EnetChannelId: 0 EnetIsReliable: true"""

    challenge_id: int = betterproto.uint32_field(8)
    challenge_index: int = betterproto.uint32_field(11)
    param_list: List[int] = betterproto.uint32_field(13)
    group_id: int = betterproto.uint32_field(12)
    father_index: int = betterproto.uint32_field(6)
    uid_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonChallengeFinishNotify(betterproto.Message):
    """CmdId: 986 EnetChannelId: 0 EnetIsReliable: true"""

    challenge_index: int = betterproto.uint32_field(11)
    is_success: bool = betterproto.bool_field(4)
    is_new_record: bool = betterproto.bool_field(2)
    challenge_record_type: int = betterproto.uint32_field(10)
    current_value: int = betterproto.uint32_field(12)
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    # FHOKHHBGPEG NJDMJAFIJNH = 15;
    time_cost: int = betterproto.uint32_field(6)
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(1758, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(913, group="detail")
    )


@dataclass(eq=False, repr=False)
class DungeonDataNotify(betterproto.Message):
    """CmdId: 945 EnetChannelId: 0 EnetIsReliable: true"""

    dungeon_data_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class DungeonEntryInfo(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    is_passed: bool = betterproto.bool_field(2)
    left_times: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    max_boss_chest_num: int = betterproto.uint32_field(6)
    boss_chest_num: int = betterproto.uint32_field(7)
    next_refresh_time: int = betterproto.uint32_field(8)
    weekly_boss_resin_discount_info: "WeeklyBossResinDiscountInfo" = (
        betterproto.message_field(9)
    )


@dataclass(eq=False, repr=False)
class DungeonEntryInfoReq(betterproto.Message):
    """CmdId: 909 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    point_id: int = betterproto.uint32_field(15)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoRsp(betterproto.Message):
    """CmdId: 931 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    point_id: int = betterproto.uint32_field(9)
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(10)
    recommend_dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropRsp(betterproto.Message):
    """CmdId: 906 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class DungeonSettleExhibitionInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(1)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DungeonSettleNotify(betterproto.Message):
    """CmdId: 982 EnetChannelId: 0 EnetIsReliable: true"""

    dungeon_id: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(10)
    fail_cond_list: List[int] = betterproto.uint32_field(13)
    settle_show: Dict[int, "ParamList"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    close_time: int = betterproto.uint32_field(12)
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    result: int = betterproto.uint32_field(15)
    exhibition_info_list: List[
        "DungeonSettleExhibitionInfo"
    ] = betterproto.message_field(14)
    tower_level_end_notify: "TowerLevelEndNotify" = betterproto.message_field(
        97, group="detail"
    )
    trial_avatar_first_pass_dungeon_notify: "TrialAvatarFirstPassDungeonNotify" = (
        betterproto.message_field(796, group="detail")
    )
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(1671, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(1638, group="detail")
    )
    roguelike_dungeon_settle_info: "RoguelikeDungeonSettleInfo" = (
        betterproto.message_field(71, group="detail")
    )


@dataclass(eq=False, repr=False)
class EchoShellInfo(betterproto.Message):
    shell_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EffigyChallengeDungeonResultInfo(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    is_success: bool = betterproto.bool_field(2)
    challenge_score: int = betterproto.uint32_field(3)
    challenge_max_score: int = betterproto.uint32_field(4)
    is_in_time_limit: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class EnterSceneDoneRsp(betterproto.Message):
    """CmdId: 269 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    enter_scene_token: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EnterScenePeerNotify(betterproto.Message):
    """CmdId: 257 EnetChannelId: 0 EnetIsReliable: true"""

    dest_scene_id: int = betterproto.uint32_field(13)
    peer_id: int = betterproto.uint32_field(11)
    host_peer_id: int = betterproto.uint32_field(6)
    enter_scene_token: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class EnterSceneReadyRsp(betterproto.Message):
    """CmdId: 252 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)
    enter_scene_token: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EnterTransPointRegionNotify(betterproto.Message):
    """CmdId: 298 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    scene_id: int = betterproto.uint32_field(15)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EnterWorldAreaReq(betterproto.Message):
    """CmdId: 222 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    area_type: int = betterproto.uint32_field(12)
    area_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EnterWorldAreaRsp(betterproto.Message):
    """CmdId: 254 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    area_type: int = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EntityAiSyncNotify(betterproto.Message):
    """CmdId: 343 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    info_list: List["AiSyncInfo"] = betterproto.message_field(1)
    local_avatar_alerted_monster_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EntityAuthorityInfo(betterproto.Message):
    """ """

    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(1)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(2)
    ai_info: "SceneEntityAiInfo" = betterproto.message_field(3)
    born_pos: "Vector" = betterproto.message_field(4)
    pose_para_list: List["AnimatorParameterValueInfoPair"] = betterproto.message_field(
        5
    )


@dataclass(eq=False, repr=False)
class EntityClientData(betterproto.Message):
    wind_change_scene_time: int = betterproto.uint32_field(1)
    windmill_sync_angle: float = betterproto.float_field(2)
    wind_change_target_level: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class EntityEnvironmentInfo(betterproto.Message):
    json_climate_type: int = betterproto.uint32_field(1)
    climate_area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EntityFightPropChangeReasonNotify(betterproto.Message):
    """CmdId: 1285 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(11)
    prop_type: int = betterproto.uint32_field(6)
    prop_delta: float = betterproto.float_field(9)
    reason: "PropChangeReason" = betterproto.enum_field(5)
    param_list: List[int] = betterproto.uint32_field(10)
    change_hp_reason: "ChangeHpReason" = betterproto.enum_field(12)
    change_energy_reson: "ChangeEnergyReason" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class EntityFightPropUpdateNotify(betterproto.Message):
    """CmdId: 1237 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(1)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class EntityMoveInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)
    is_reliable: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class EntityPropNotify(betterproto.Message):
    """CmdId: 1209 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(5)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EntityRendererChangedInfo(betterproto.Message):
    changed_renderers: Dict[str, int] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_UINT32
    )
    visibility_count: int = betterproto.uint32_field(2)
    is_cached: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class Equip(betterproto.Message):
    is_locked: bool = betterproto.bool_field(3)
    reliquary: "Reliquary" = betterproto.message_field(1, group="detail")
    weapon: "Weapon" = betterproto.message_field(2, group="detail")


@dataclass(eq=False, repr=False)
class EquipParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtAiSyncCombatThreatInfoNotify(betterproto.Message):
    """CmdId: 360 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    combat_threat_info_map: Dict[int, "AiThreatInfo"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtAiSyncSkillCdNotify(betterproto.Message):
    """CmdId: 333 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    ai_cd_map: Dict[int, "AiSkillCdInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairReq(betterproto.Message):
    """CmdId: 308 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    chair_id: int = betterproto.uint64_field(10)
    position: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairRsp(betterproto.Message):
    """CmdId: 304 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(4)
    position: "Vector" = betterproto.message_field(12)
    chair_id: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class EvtAvatarSitDownNotify(betterproto.Message):
    """CmdId: 359 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    entity_id: int = betterproto.uint32_field(10)
    position: "Vector" = betterproto.message_field(5)
    chair_id: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class EvtAvatarStandUpNotify(betterproto.Message):
    """CmdId: 384 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    entity_id: int = betterproto.uint32_field(10)
    direction: int = betterproto.int32_field(3)
    perform_id: int = betterproto.int32_field(8)
    chair_id: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class EvtBeingHitInfo(betterproto.Message):
    peer_id: int = betterproto.uint32_field(1)
    attack_result: "AttackResult" = betterproto.message_field(2)
    frame_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EvtBeingHitNotify(betterproto.Message):
    """CmdId: 309 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    forward_type: "ForwardType" = betterproto.enum_field(13)
    being_hit_info: "EvtBeingHitInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class EvtBeingHitsCombineNotify(betterproto.Message):
    """CmdId: 336 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_being_hit_info_list: List["EvtBeingHitInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class EvtCreateGadgetNotify(betterproto.Message):
    """CmdId: 332 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    forward_type: "ForwardType" = betterproto.enum_field(8)
    entity_id: int = betterproto.uint32_field(14)
    config_id: int = betterproto.uint32_field(11)
    camp_id: int = betterproto.uint32_field(13)
    camp_type: int = betterproto.uint32_field(3)
    init_pos: "Vector" = betterproto.message_field(15)
    init_euler_angles: "Vector" = betterproto.message_field(5)
    guid: int = betterproto.uint64_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(7)
    is_async_load: bool = betterproto.bool_field(9)
    target_lock_point_index: int = betterproto.uint32_field(4)
    room_id: int = betterproto.uint32_field(10)
    prop_owner_entity_id: int = betterproto.uint32_field(6)
    sight_group_with_owner: bool = betterproto.bool_field(12)
    ceghbcjmnfj: bool = betterproto.bool_field(1011)
    ngancebknkc: bool = betterproto.bool_field(1304)
    fcfecgfhlad: List[int] = betterproto.uint32_field(1525)
    gehikjlbkah: List[int] = betterproto.uint32_field(1637)


@dataclass(eq=False, repr=False)
class EvtDestroyGadgetNotify(betterproto.Message):
    """CmdId: 317 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    forward_type: "ForwardType" = betterproto.enum_field(10)
    entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EvtDoSkillSuccNotify(betterproto.Message):
    """CmdId: 337 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    forward_type: "ForwardType" = betterproto.enum_field(6)
    caster_id: int = betterproto.uint32_field(10)
    skill_id: int = betterproto.uint32_field(1)
    forward: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EvtHittingOtherInfo(betterproto.Message):
    peer_id: int = betterproto.uint32_field(1)
    attack_result: "AttackResult" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ExhibitionDisplayInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    detail_param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FeatureBlockInfo(betterproto.Message):
    feature_type: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FetterData(betterproto.Message):
    fetter_id: int = betterproto.uint32_field(1)
    fetter_state: int = betterproto.uint32_field(2)
    cond_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FightPropPair(betterproto.Message):
    prop_type: int = betterproto.uint32_field(1)
    prop_value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class FinishedParentQuestNotify(betterproto.Message):
    """CmdId: 437 EnetChannelId: 0 EnetIsReliable: true"""

    parent_quest_list: List["ParentQuest"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class FinishedParentQuestUpdateNotify(betterproto.Message):
    """CmdId: 432 EnetChannelId: 0 EnetIsReliable: true"""

    parent_quest_list: List["ParentQuest"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FishPoolInfo(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    fish_area_list: List[int] = betterproto.uint32_field(2)
    today_fish_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ForceUpdateInfo(betterproto.Message):
    force_update_url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ForgeDataNotify(betterproto.Message):
    """CmdId: 648 EnetChannelId: 0 EnetIsReliable: true"""

    forge_id_list: List[int] = betterproto.uint32_field(13)
    max_queue_num: int = betterproto.uint32_field(15)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ForgeFormulaDataNotify(betterproto.Message):
    """CmdId: 673 EnetChannelId: 0 EnetIsReliable: true"""

    forge_id: int = betterproto.uint32_field(11)
    is_locked: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class ForgeQueueData(betterproto.Message):
    queue_id: int = betterproto.uint32_field(1)
    forge_id: int = betterproto.uint32_field(2)
    finish_count: int = betterproto.uint32_field(3)
    unfinish_count: int = betterproto.uint32_field(4)
    next_finish_timestamp: int = betterproto.uint32_field(5)
    total_finish_timestamp: int = betterproto.uint32_field(6)
    avatar_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FoundationInfo(betterproto.Message):
    status: "FoundationStatus" = betterproto.enum_field(1)
    uid_list: List[int] = betterproto.uint32_field(2)
    current_building_id: int = betterproto.uint32_field(3)
    begin_build_time_ms: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FriendBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    world_level: int = betterproto.uint32_field(5)
    signature: str = betterproto.string_field(6)
    online_state: "FriendOnlineState" = betterproto.enum_field(7)
    param: int = betterproto.uint32_field(8)
    is_mp_mode_available: bool = betterproto.bool_field(10)
    online_id: str = betterproto.string_field(11)
    last_active_time: int = betterproto.uint32_field(12)
    name_card_id: int = betterproto.uint32_field(13)
    mp_player_num: int = betterproto.uint32_field(14)
    is_chat_no_disturb: bool = betterproto.bool_field(15)
    chat_sequence: int = betterproto.uint32_field(16)
    remark_name: str = betterproto.string_field(17)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(23)
    profile_picture: "ProfilePicture" = betterproto.message_field(24)
    is_game_source: bool = betterproto.bool_field(25)
    is_psn_source: bool = betterproto.bool_field(26)
    platform_type: "PlatformType" = betterproto.enum_field(27)


@dataclass(eq=False, repr=False)
class Furniture(betterproto.Message):
    count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GachaInfo(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    cost_item_id: int = betterproto.uint32_field(5)
    cost_item_num: int = betterproto.uint32_field(6)
    gacha_prefab_path: str = betterproto.string_field(7)
    gacha_prob_url: str = betterproto.string_field(8)
    gacha_record_url: str = betterproto.string_field(9)
    gacha_preview_prefab_path: str = betterproto.string_field(10)
    ten_cost_item_id: int = betterproto.uint32_field(11)
    ten_cost_item_num: int = betterproto.uint32_field(12)
    left_gacha_times: int = betterproto.uint32_field(13)
    gacha_times_limit: int = betterproto.uint32_field(14)
    gacha_sort_id: int = betterproto.uint32_field(15)
    gacha_prob_url_oversea: str = betterproto.string_field(16)
    gacha_record_url_oversea: str = betterproto.string_field(17)
    gacha_up_info_list: List["GachaUpInfo"] = betterproto.message_field(18)
    title_textmap: str = betterproto.string_field(19)
    display_up_5_item_list: List[int] = betterproto.uint32_field(20)
    display_up_4_item_list: List[int] = betterproto.uint32_field(21)
    wish_item_id: int = betterproto.uint32_field(22)
    wish_progress: int = betterproto.uint32_field(23)
    wish_max_progress: int = betterproto.uint32_field(24)
    is_new_wish: bool = betterproto.bool_field(25)


@dataclass(eq=False, repr=False)
class GachaItem(betterproto.Message):
    gacha_item: "ItemParam" = betterproto.message_field(1)
    transfer_items: List["GachaTransferItem"] = betterproto.message_field(2)
    is_flash_card: bool = betterproto.bool_field(3)
    is_gacha_item_new: bool = betterproto.bool_field(4)
    token_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GachaTransferItem(betterproto.Message):
    item: "ItemParam" = betterproto.message_field(1)
    is_transfer_item_new: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GachaUpInfo(betterproto.Message):
    item_parent_type: int = betterproto.uint32_field(1)
    item_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GadgetAutoPickDropInfoNotify(betterproto.Message):
    """CmdId: 830 EnetChannelId: 0 EnetIsReliable: true"""

    item_list: List["Item"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GadgetClientParam(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_type: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    target_entity_id: int = betterproto.uint32_field(5)
    async_load: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class GadgetCrucibleInfo(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(1)
    prepare_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    dead_time: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    item_param: "ItemParam" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GadgetInteractReq(betterproto.Message):
    """CmdId: 809 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    gadget_entity_id: int = betterproto.uint32_field(9)
    op_type: "InterOpType" = betterproto.enum_field(6)
    gadget_id: int = betterproto.uint32_field(14)
    is_use_condense_resin: bool = betterproto.bool_field(15)
    resin_cost_type: "ResinCostType" = betterproto.enum_field(11)
    gcieijioado: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GadgetInteractRsp(betterproto.Message):
    """CmdId: 831 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    gadget_entity_id: int = betterproto.uint32_field(6)
    interact_type: "InteractType" = betterproto.enum_field(9)
    op_type: "InterOpType" = betterproto.enum_field(1)
    gadget_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GadgetPlayInfo(betterproto.Message):
    play_type: int = betterproto.uint32_field(1)
    duration: int = betterproto.uint32_field(2)
    progress_stage_list: List[int] = betterproto.uint32_field(3)
    start_cd: int = betterproto.uint32_field(4)
    start_time: int = betterproto.uint32_field(5)
    progress: int = betterproto.uint32_field(6)
    crucible_info: "GadgetCrucibleInfo" = betterproto.message_field(
        21, group="play_info"
    )


@dataclass(eq=False, repr=False)
class GadgetStateNotify(betterproto.Message):
    """CmdId: 841 EnetChannelId: 0 EnetIsReliable: true"""

    gadget_entity_id: int = betterproto.uint32_field(2)
    gadget_state: int = betterproto.uint32_field(11)
    is_enable_interact: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class GatherGadgetInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    is_forbid_guest: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetActivityInfoRsp(betterproto.Message):
    """CmdId: 2144 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    activity_info_list: List["ActivityInfo"] = betterproto.message_field(14)
    activated_sale_id_list: List[int] = betterproto.uint32_field(2)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetAllMailReq(betterproto.Message):
    """
    CmdId: 1455 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    ankkgpjcinb: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GetAllMailRsp(betterproto.Message):
    """CmdId: 1427 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(6)
    mail_list: List["MailData"] = betterproto.message_field(9)
    is_truncated: bool = betterproto.bool_field(5)
    ankkgpjcinb: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GetAllUnlockNameCardRsp(betterproto.Message):
    """
    CmdId: 4058 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(13)
    name_card_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetAuthkeyReq(betterproto.Message):
    """
    CmdId: 1435 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    auth_appid: str = betterproto.string_field(12)
    sign_type: int = betterproto.uint32_field(15)
    authkey_ver: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetAuthkeyRsp(betterproto.Message):
    """CmdId: 1449 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    authkey: str = betterproto.string_field(1)
    auth_appid: str = betterproto.string_field(2)
    sign_type: int = betterproto.uint32_field(7)
    authkey_ver: int = betterproto.uint32_field(10)
    game_biz: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoReq(betterproto.Message):
    """
    CmdId: 4003 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoRsp(betterproto.Message):
    """CmdId: 4034 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    uid: int = betterproto.uint32_field(11)
    show_avatar_info_list: List["ShowAvatarInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GetGachaInfoRsp(betterproto.Message):
    """CmdId: 1531 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    gacha_info_list: List["GachaInfo"] = betterproto.message_field(12)
    gacha_random: int = betterproto.uint32_field(13)
    nkjoboabfoj: int = betterproto.uint32_field(7)
    podalhilikf: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class GetMailItemReq(betterproto.Message):
    """
    CmdId: 1437 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    mail_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetMailItemRsp(betterproto.Message):
    """CmdId: 1432 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    mail_id_list: List[int] = betterproto.uint32_field(10)
    item_list: List["EquipParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListReq(betterproto.Message):
    """CmdId: 35 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    pass


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListRsp(betterproto.Message):
    """CmdId: 49 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(10)
    param: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerAskFriendListRsp(betterproto.Message):
    """CmdId: 4004 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetPlayerBlacklistRsp(betterproto.Message):
    """CmdId: 4072 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    blacklist: List["FriendBrief"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetPlayerFriendListRsp(betterproto.Message):
    """
    CmdId: 4031 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(3)
    friend_list: List["FriendBrief"] = betterproto.message_field(6)
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailReq(betterproto.Message):
    """
    CmdId: 4049 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailRsp(betterproto.Message):
    """CmdId: 4082 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    detail_data: "SocialDetail" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GetPlayerTokenReq(betterproto.Message):
    """CmdId: 109 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    account_type: int = betterproto.uint32_field(3)
    account_uid: str = betterproto.string_field(12)
    account_token: str = betterproto.string_field(14)
    account_ext: str = betterproto.string_field(2)
    uid: int = betterproto.uint32_field(8)
    is_guest: bool = betterproto.bool_field(4)
    platform_type: int = betterproto.uint32_field(7)
    cloud_client_ip: int = betterproto.uint32_field(13)
    online_id: str = betterproto.string_field(9)
    psn_region: str = betterproto.string_field(15)
    channel_id: int = betterproto.uint32_field(10)
    sub_channel_id: int = betterproto.uint32_field(1)
    country_code: str = betterproto.string_field(11)
    psn_id: str = betterproto.string_field(5)
    client_ip_str: str = betterproto.string_field(6)
    birthday: str = betterproto.string_field(966)
    nnciboldiai: int = betterproto.uint32_field(1883)


@dataclass(eq=False, repr=False)
class GetPlayerTokenRsp(betterproto.Message):
    """CmdId: 131 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    msg: str = betterproto.string_field(10)
    uid: int = betterproto.uint32_field(2)
    token: str = betterproto.string_field(1)
    black_uid_end_time: int = betterproto.uint32_field(15)
    account_type: int = betterproto.uint32_field(12)
    account_uid: str = betterproto.string_field(4)
    is_proficient_player: bool = betterproto.bool_field(5)
    secret_key: str = betterproto.string_field(13)
    gm_uid: int = betterproto.uint32_field(14)
    secret_key_seed: int = betterproto.uint64_field(11)
    security_cmd_buffer: bytes = betterproto.bytes_field(6)
    platform_type: int = betterproto.uint32_field(3)
    extra_bin_data: bytes = betterproto.bytes_field(8)
    is_guest: bool = betterproto.bool_field(9)
    channel_id: int = betterproto.uint32_field(1614)
    sub_channel_id: int = betterproto.uint32_field(1911)
    tag: int = betterproto.uint32_field(1855)
    country_code: str = betterproto.string_field(739)
    is_login_white_list: bool = betterproto.bool_field(977)
    psn_id: str = betterproto.string_field(245)
    client_version_random_key: str = betterproto.string_field(1387)
    reg_platform: int = betterproto.uint32_field(633)
    client_ip_str: str = betterproto.string_field(1238)
    birthday: str = betterproto.string_field(1109)
    nnciboldiai: int = betterproto.uint32_field(1728)
    fnecfleakko: bool = betterproto.bool_field(1679)


@dataclass(eq=False, repr=False)
class GetSceneAreaReq(betterproto.Message):
    """CmdId: 238 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    scene_id: int = betterproto.uint32_field(4)
    belong_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetSceneAreaRsp(betterproto.Message):
    """CmdId: 206 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    scene_id: int = betterproto.uint32_field(13)
    area_id_list: List[int] = betterproto.uint32_field(6)
    city_info_list: List["CityInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetScenePointReq(betterproto.Message):
    """CmdId: 230 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    scene_id: int = betterproto.uint32_field(4)
    belong_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetScenePointRsp(betterproto.Message):
    """CmdId: 297 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)
    scene_id: int = betterproto.uint32_field(12)
    unlocked_point_list: List[int] = betterproto.uint32_field(14)
    belong_uid: int = betterproto.uint32_field(15)
    unlock_area_list: List[int] = betterproto.uint32_field(11)
    locked_point_list: List[int] = betterproto.uint32_field(4)
    to_be_explore_dungeon_entry_list: List[int] = betterproto.uint32_field(8)
    not_explored_dungeon_entry_list: List[int] = betterproto.uint32_field(3)
    group_unlimit_point_list: List[int] = betterproto.uint32_field(6)
    not_interact_dungeon_entry_list: List[int] = betterproto.uint32_field(1)
    hide_point_list: List[int] = betterproto.uint32_field(9)
    unhide_point_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetShopReq(betterproto.Message):
    """CmdId: 709 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    shop_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetShopRsp(betterproto.Message):
    """CmdId: 731 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    shop: "Shop" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GetShopmallDataRsp(betterproto.Message):
    """CmdId: 717 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    shop_type_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetWidgetSlotReq(betterproto.Message):
    """
    CmdId: 4267 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    pass


@dataclass(eq=False, repr=False)
class GetWidgetSlotRsp(betterproto.Message):
    """CmdId: 4300 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    slot_list: List["WidgetSlotData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetWorldMpInfoRsp(betterproto.Message):
    """CmdId: 3179 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    is_in_mp_mode: bool = betterproto.bool_field(5)
    quit_mp_valid_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class H5ActivityIdsNotify(betterproto.Message):
    """CmdId: 5693 EnetChannelId: 0 EnetIsReliable: true"""

    h_5_activity_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    client_red_dot_timestamp: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class HitCollision(betterproto.Message):
    hit_collider_type: "HitColliderType" = betterproto.enum_field(1)
    hit_box_index: int = betterproto.int32_field(2)
    hit_point: "Vector" = betterproto.message_field(3)
    hit_dir: "Vector" = betterproto.message_field(4)
    attackee_hit_force_angle: float = betterproto.float_field(5)
    attackee_hit_entity_angle: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class HitTreeNotify(betterproto.Message):
    hit_postion: "Vector" = betterproto.message_field(3)
    wood_type: int = betterproto.uint32_field(4)
    hit_postion_duplicated: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeChooseModuleReq(betterproto.Message):
    """
    CmdId: 4479 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    module_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeChooseModuleRsp(betterproto.Message):
    """CmdId: 4745 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)
    module_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HomeComfortInfoNotify(betterproto.Message):
    """CmdId: 4649 EnetChannelId: 0 EnetIsReliable: true"""

    module_info_list: List["HomeModuleComfortInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeModuleComfortInfo(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    world_scene_block_comfort_value_list: List[int] = betterproto.uint32_field(2)
    room_scene_comfort_value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HostPlayerNotify(betterproto.Message):
    """CmdId: 341 EnetChannelId: 0 EnetIsReliable: true"""

    host_uid: int = betterproto.uint32_field(10)
    host_peer_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Item(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    material: "Material" = betterproto.message_field(5, group="detail")
    equip: "Equip" = betterproto.message_field(6, group="detail")
    furniture: "Furniture" = betterproto.message_field(7, group="detail")


@dataclass(eq=False, repr=False)
class ItemAddHintNotify(betterproto.Message):
    """CmdId: 632 EnetChannelId: 0 EnetIsReliable: true"""

    item_list: List["ItemHint"] = betterproto.message_field(10)
    position: "Vector" = betterproto.message_field(12)
    is_position_valid: bool = betterproto.bool_field(13)
    reason: int = betterproto.uint32_field(5)
    quest_id: int = betterproto.uint32_field(14)
    is_transfered_from_avatar_card: bool = betterproto.bool_field(11)
    overflow_transformed_item_list: List["ItemHint"] = betterproto.message_field(3)
    is_general_reward_hiden: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ItemGivingReq(betterproto.Message):
    """CmdId: 178 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    giving_id: int = betterproto.uint32_field(14)
    item_param_list: List["ItemParam"] = betterproto.message_field(10)
    item_guid_count_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ItemGivingRsp(betterproto.Message):
    """CmdId: 108 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    giving_id: int = betterproto.uint32_field(6)
    lemilheialj: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ItemHint(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    is_new: bool = betterproto.bool_field(3)
    guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class ItemParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LifeStateChangeNotify(betterproto.Message):
    """CmdId: 1231 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(4)
    life_state: int = betterproto.uint32_field(6)
    source_entity_id: int = betterproto.uint32_field(5)
    attack_tag: str = betterproto.string_field(1)
    die_type: "PlayerDieType" = betterproto.enum_field(13)
    move_reliable_seq: int = betterproto.uint32_field(9)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class LunchBoxData(betterproto.Message):
    slot_material_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MpLevelEntityInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    authority_peer_id: int = betterproto.uint32_field(2)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MailChangeNotify(betterproto.Message):
    """CmdId: 1431 EnetChannelId: 0 EnetIsReliable: true"""

    mail_list: List["MailData"] = betterproto.message_field(3)
    del_mail_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MailData(betterproto.Message):
    mail_id: int = betterproto.uint32_field(1)
    mail_text_content: "MailTextContent" = betterproto.message_field(4)
    item_list: List["MailItem"] = betterproto.message_field(7)
    send_time: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(9)
    importance: int = betterproto.uint32_field(10)
    is_read: bool = betterproto.bool_field(11)
    is_attachment_got: bool = betterproto.bool_field(12)
    config_id: int = betterproto.uint32_field(13)
    argument_list: List[str] = betterproto.string_field(14)
    bhcahljikff: "Cbjedmgobpl" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class MailItem(betterproto.Message):
    equip_param: "EquipParam" = betterproto.message_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailTextContent(betterproto.Message):
    title: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    sender: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class MapMarkPoint(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    pos: "Vector" = betterproto.message_field(3)
    point_type: "MapMarkPointType" = betterproto.enum_field(4)
    monster_id: int = betterproto.uint32_field(5)
    from_type: "MapMarkFromType" = betterproto.enum_field(6)
    quest_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MapMarkTipsInfo(betterproto.Message):
    tips_type: "MapMarkTipsType" = betterproto.enum_field(1)
    point_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MarkEntityInMinMapNotify(betterproto.Message):
    """CmdId: 202 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(5)
    position: "Vector" = betterproto.message_field(13)
    monster_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MarkMapReq(betterproto.Message):
    """
    CmdId: 3208 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    op: "MarkMapReqOperation" = betterproto.enum_field(15)
    old: "MapMarkPoint" = betterproto.message_field(10)
    mark: "MapMarkPoint" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MarkMapRsp(betterproto.Message):
    """CmdId: 3421 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    mark_list: List["MapMarkPoint"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MarkNewNotify(betterproto.Message):
    """CmdId: 1227 EnetChannelId: 0 EnetIsReliable: true"""

    mark_new_type: int = betterproto.uint32_field(10)
    id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MassivePropParam(betterproto.Message):
    type: int = betterproto.int32_field(1)
    reaction_info_list: List[int] = betterproto.uint32_field(2)
    param_list: List[float] = betterproto.float_field(3)
    sync_flag: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MassivePropSyncInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)
    prop_list: List["MassivePropParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Material(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfo(betterproto.Message):
    has_delete_config: bool = betterproto.bool_field(1)
    count_down_delete: "MaterialDeleteInfoCountDownDelete" = betterproto.message_field(
        2, group="delete_info"
    )
    date_delete: "MaterialDeleteInfoDateTimeDelete" = betterproto.message_field(
        3, group="delete_info"
    )
    delay_week_count_down_delete: "MaterialDeleteInfoDelayWeekCountDownDelete" = (
        betterproto.message_field(4, group="delete_info")
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_count_down_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDateTimeDelete(betterproto.Message):
    delete_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDelayWeekCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_delay_week: int = betterproto.uint32_field(2)
    config_count_down_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MaterialInfo(betterproto.Message):
    guid: int = betterproto.uint64_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MathQuaternion(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinReq(betterproto.Message):
    """CmdId: 687 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    mcoin_cost: int = betterproto.uint32_field(8)
    hcoin: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinRsp(betterproto.Message):
    """CmdId: 689 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    mcoin_cost: int = betterproto.uint32_field(10)
    hcoin: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ModifierDurability(betterproto.Message):
    reduce_ratio: float = betterproto.float_field(1)
    remaining_durability: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class ModifierProperty(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class MonsterRoute(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    speed_level: int = betterproto.uint32_field(2)
    route_type: int = betterproto.uint32_field(3)
    arrive_range: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class MotionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    speed: "Vector" = betterproto.message_field(3)
    state: "MotionState" = betterproto.enum_field(4)
    params: List["Vector"] = betterproto.message_field(5)
    ref_pos: "Vector" = betterproto.message_field(6)
    ref_id: int = betterproto.uint32_field(7)
    scene_time: int = betterproto.uint32_field(8)
    interval_velocity: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class MpPlayRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    remain_uid_list: List[int] = betterproto.uint32_field(2)
    qualify_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NpcTalkReq(betterproto.Message):
    """CmdId: 509 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    npc_entity_id: int = betterproto.uint32_field(5)
    talk_id: int = betterproto.uint32_field(7)
    entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class NpcTalkRsp(betterproto.Message):
    """CmdId: 531 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    npc_entity_id: int = betterproto.uint32_field(9)
    cur_talk_id: int = betterproto.uint32_field(6)
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class OfferingInfo(betterproto.Message):
    offering_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OneoffGatherPointDetectorData(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    is_all_collected: bool = betterproto.bool_field(2)
    is_hint_valid: bool = betterproto.bool_field(3)
    hint_center_pos: "Vector" = betterproto.message_field(4)
    hint_radius: int = betterproto.uint32_field(5)
    group_id: int = betterproto.uint32_field(6)
    config_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class OneoffGatherPointDetectorDataNotify(betterproto.Message):
    """CmdId: 4262 EnetChannelId: 0 EnetIsReliable: true"""

    oneoff_gather_point_detector_data_list: List[
        "OneoffGatherPointDetectorData"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class OnlinePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    mp_setting_type: "MpSettingType" = betterproto.enum_field(5)
    cur_player_num_in_world: int = betterproto.uint32_field(6)
    world_level: int = betterproto.uint32_field(7)
    online_id: str = betterproto.string_field(8)
    name_card_id: int = betterproto.uint32_field(9)
    blacklist_uid_list: List[int] = betterproto.uint32_field(10)
    signature: str = betterproto.string_field(11)
    profile_picture: "ProfilePicture" = betterproto.message_field(12)
    psn_id: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class OpenStateUpdateNotify(betterproto.Message):
    """CmdId: 119 EnetChannelId: 0 EnetIsReliable: true"""

    open_state_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PacketHead(betterproto.Message):
    client_sequence_id: int = betterproto.uint32_field(3)
    timestamp: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class ParamList(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ParentQuest(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)
    child_quest_list: List["ChildQuest"] = betterproto.message_field(2)
    is_finished: bool = betterproto.bool_field(3)
    is_random: bool = betterproto.bool_field(4)
    random_info: "ParentQuestRandomInfo" = betterproto.message_field(5)
    quest_var: List[int] = betterproto.int32_field(6)
    parent_quest_state: int = betterproto.uint32_field(7)
    quest_var_seq: int = betterproto.uint32_field(8)
    time_var_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    gjjjkeipapc: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class ParentQuestRandomInfo(betterproto.Message):
    entrance_id: int = betterproto.uint32_field(1)
    template_id: int = betterproto.uint32_field(2)
    factor_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpReq(betterproto.Message):
    """CmdId: 266 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpRsp(betterproto.Message):
    """CmdId: 248 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    dest_scene_id: int = betterproto.uint32_field(2)
    dest_pos: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class PingReq(betterproto.Message):
    """CmdId: 32 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    seq: int = betterproto.uint32_field(2)
    client_time: int = betterproto.uint32_field(14)
    sc_data: bytes = betterproto.bytes_field(11)
    ue_time: float = betterproto.float_field(15)
    total_tick_time: float = betterproto.double_field(12)


@dataclass(eq=False, repr=False)
class PingRsp(betterproto.Message):
    """CmdId: 17 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    seq: int = betterproto.uint32_field(4)
    client_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlatformInfo(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    start_index: int = betterproto.int32_field(2)
    start_route_time: int = betterproto.uint32_field(3)
    start_scene_time: int = betterproto.uint32_field(4)
    start_pos: "Vector" = betterproto.message_field(7)
    is_started: bool = betterproto.bool_field(8)
    start_rot: "MathQuaternion" = betterproto.message_field(9)
    stop_scene_time: int = betterproto.uint32_field(10)
    pos_offset: "Vector" = betterproto.message_field(11)
    rot_offset: "MathQuaternion" = betterproto.message_field(12)
    moving_platform_type: "MovingPlatformType" = betterproto.enum_field(13)
    is_active: bool = betterproto.bool_field(14)
    route: "Route" = betterproto.message_field(15)
    point_id: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class PlayTeamEntityInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    player_uid: int = betterproto.uint32_field(2)
    authority_peer_id: int = betterproto.uint32_field(3)
    gadget_config_id: int = betterproto.uint32_field(5)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpNotify(betterproto.Message):
    """CmdId: 1818 EnetChannelId: 0 EnetIsReliable: true"""

    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(11)
    src_app_id: int = betterproto.uint32_field(6)
    src_thread_index: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpReq(betterproto.Message):
    """
    CmdId: 1809 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultNotify(betterproto.Message):
    """CmdId: 1804 EnetChannelId: 0 EnetIsReliable: true"""

    target_uid: int = betterproto.uint32_field(7)
    is_agreed: bool = betterproto.bool_field(4)
    reason: "PlayerApplyEnterMpResultNotifyReason" = betterproto.enum_field(14)
    target_nickname: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultReq(betterproto.Message):
    """
    CmdId: 1828 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    apply_uid: int = betterproto.uint32_field(15)
    is_agreed: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultRsp(betterproto.Message):
    """CmdId: 1803 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(6)
    apply_uid: int = betterproto.uint32_field(4)
    is_agreed: bool = betterproto.bool_field(12)
    param: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpRsp(betterproto.Message):
    """CmdId: 1843 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)
    target_uid: int = betterproto.uint32_field(4)
    param: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerChatNotify(betterproto.Message):
    """CmdId: 3295 EnetChannelId: 0 EnetIsReliable: true"""

    channel_id: int = betterproto.uint32_field(14)
    chat_info: "ChatInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PlayerChatReq(betterproto.Message):
    """
    CmdId: 3378 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    channel_id: int = betterproto.uint32_field(9)
    chat_info: "ChatInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerChatRsp(betterproto.Message):
    """CmdId: 3321 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    chat_forbidden_endtime: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerDataNotify(betterproto.Message):
    """CmdId: 135 EnetChannelId: 0 EnetIsReliable: true"""

    nick_name: str = betterproto.string_field(15)
    server_time: int = betterproto.uint64_field(2)
    is_first_login_today: bool = betterproto.bool_field(11)
    region_id: int = betterproto.uint32_field(9)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonReq(betterproto.Message):
    """CmdId: 941 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    point_id: int = betterproto.uint32_field(5)
    dungeon_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonRsp(betterproto.Message):
    """CmdId: 937 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    point_id: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneInfoNotify(betterproto.Message):
    """CmdId: 274 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    cur_avatar_entity_id: int = betterproto.uint32_field(8)
    avatar_enter_info: List["AvatarEnterSceneInfo"] = betterproto.message_field(14)
    team_enter_info: "TeamEnterSceneInfo" = betterproto.message_field(9)
    mp_level_entity_info: "MpLevelEntityInfo" = betterproto.message_field(5)
    enter_scene_token: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneNotify(betterproto.Message):
    """CmdId: 209 EnetChannelId: 0 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(14)
    pos: "Vector" = betterproto.message_field(15)
    scene_begin_time: int = betterproto.uint64_field(12)
    type: "EnterType" = betterproto.enum_field(2)
    target_uid: int = betterproto.uint32_field(4)
    prev_scene_id: int = betterproto.uint32_field(7)
    prev_pos: "Vector" = betterproto.message_field(6)
    dungeon_id: int = betterproto.uint32_field(13)
    world_level: int = betterproto.uint32_field(3)
    enter_scene_token: int = betterproto.uint32_field(9)
    is_first_login_enter_scene: bool = betterproto.bool_field(11)
    scene_tag_id_list: List[int] = betterproto.uint32_field(1)
    is_skip_ui: bool = betterproto.bool_field(1430)
    enter_reason: int = betterproto.uint32_field(1982)
    world_type: int = betterproto.uint32_field(1067)
    scene_transaction: str = betterproto.string_field(1081)


@dataclass(eq=False, repr=False)
class PlayerGameTimeNotify(betterproto.Message):
    """CmdId: 155 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    game_time: int = betterproto.uint32_field(7)
    uid: int = betterproto.uint32_field(13)
    is_home: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class PlayerGetForceQuitBanInfoRsp(betterproto.Message):
    """CmdId: 4162 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    match_id: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfo(betterproto.Message):
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(1)
    unlocked_module_id_list: List[int] = betterproto.uint32_field(2)
    levelup_reward_got_level_list: List[int] = betterproto.uint32_field(3)
    seen_module_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfoNotify(betterproto.Message):
    """CmdId: 4563 EnetChannelId: 0 EnetIsReliable: true"""

    comp_info: "PlayerHomeCompInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerLevelRewardUpdateNotify(betterproto.Message):
    """CmdId: 143 EnetChannelId: 0 EnetIsReliable: true"""

    level_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerLocationInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)
    rot: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerLoginReq(betterproto.Message):
    """CmdId: 141 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    token: str = betterproto.string_field(5)
    client_version: str = betterproto.string_field(7)
    system_version: str = betterproto.string_field(12)
    device_name: str = betterproto.string_field(3)
    device_uuid: str = betterproto.string_field(14)
    target_uid: int = betterproto.uint32_field(15)
    login_rand: int = betterproto.uint64_field(11)
    is_editor: bool = betterproto.bool_field(2)
    language_type: int = betterproto.uint32_field(13)
    account_type: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(8)
    platform: str = betterproto.string_field(6)
    device_info: str = betterproto.string_field(4)
    platform_type: int = betterproto.uint32_field(10)
    is_guest: bool = betterproto.bool_field(9)
    cloud_client_ip: int = betterproto.uint32_field(233)
    gm_uid: int = betterproto.uint32_field(1423)
    checksum: str = betterproto.string_field(485)
    online_id: str = betterproto.string_field(1974)
    client_token: int = betterproto.uint32_field(133)
    security_cmd_reply: bytes = betterproto.bytes_field(96)
    extra_bin_data: bytes = betterproto.bytes_field(814)
    cps: str = betterproto.string_field(467)
    channel_id: int = betterproto.uint32_field(2028)
    sub_channel_id: int = betterproto.uint32_field(1571)
    checksum_client_version: str = betterproto.string_field(1844)
    tag: int = betterproto.uint32_field(843)
    tracking_io_info: "TrackingIoInfo" = betterproto.message_field(1882)
    country_code: str = betterproto.string_field(1060)
    client_data_version: int = betterproto.uint32_field(1570)
    environment_error_code: bytes = betterproto.bytes_field(1303)
    target_home_owner_uid: int = betterproto.uint32_field(1054)
    psn_id: str = betterproto.string_field(921)
    client_verison_hash: str = betterproto.string_field(1972)
    is_transfer: bool = betterproto.bool_field(1918)
    reg_platform: int = betterproto.uint32_field(167)
    target_home_param: int = betterproto.uint32_field(1129)
    adjust_tracking_info: "AdjustTrackingInfo" = betterproto.message_field(280)
    birthday: str = betterproto.string_field(174)
    madlmmnjica: str = betterproto.string_field(135)
    ccljbejhfop: str = betterproto.string_field(745)
    lkcfgdbhhil: int = betterproto.uint32_field(1881)


@dataclass(eq=False, repr=False)
class PlayerLoginRsp(betterproto.Message):
    """CmdId: 137 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    player_data: bytes = betterproto.bytes_field(6)
    is_new_player: bool = betterproto.bool_field(11)
    target_uid: int = betterproto.uint32_field(15)
    login_rand: int = betterproto.uint64_field(12)
    is_use_ability_hash: bool = betterproto.bool_field(3)
    ability_hash_code: int = betterproto.int32_field(7)
    ability_hash_map: Dict[str, int] = betterproto.map_field(
        13, betterproto.TYPE_STRING, betterproto.TYPE_INT32
    )
    client_data_version: int = betterproto.uint32_field(14)
    is_relogin: bool = betterproto.bool_field(2)
    client_silence_data_version: int = betterproto.uint32_field(10)
    game_biz: str = betterproto.string_field(9)
    player_data_version: int = betterproto.uint32_field(8)
    client_md_5: str = betterproto.string_field(1706)
    client_silence_md_5: str = betterproto.string_field(271)
    res_version_config: "ResVersionConfig" = betterproto.message_field(933)
    block_info_map: Dict[int, "BlockInfo"] = betterproto.map_field(
        1156, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    client_version_suffix: str = betterproto.string_field(1984)
    client_silence_version_suffix: str = betterproto.string_field(49)
    short_ability_hash_map: List["ShortAbilityHashPair"] = betterproto.message_field(
        364
    )
    sc_info: bytes = betterproto.bytes_field(2014)
    is_audit: bool = betterproto.bool_field(1545)
    is_sc_open: bool = betterproto.bool_field(1974)
    register_cps: str = betterproto.string_field(715)
    feature_block_info_list: List["FeatureBlockInfo"] = betterproto.message_field(408)
    is_data_need_relogin: bool = betterproto.bool_field(110)
    country_code: str = betterproto.string_field(1306)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(749)
    next_resource_url: str = betterproto.string_field(1744)
    target_home_owner_uid: int = betterproto.uint32_field(945)
    is_enable_client_hash_debug: bool = betterproto.bool_field(713)
    is_transfer: bool = betterproto.bool_field(138)
    total_tick_time: float = betterproto.double_field(1923)
    birthday: str = betterproto.string_field(1977)


@dataclass(eq=False, repr=False)
class PlayerPropNotify(betterproto.Message):
    """CmdId: 127 EnetChannelId: 0 EnetIsReliable: true"""

    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonReq(betterproto.Message):
    """CmdId: 932 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    point_id: int = betterproto.uint32_field(12)
    is_quit_immediately: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonRsp(betterproto.Message):
    """CmdId: 917 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    point_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerRttInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    rtt: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerSetPauseReq(betterproto.Message):
    """CmdId: 159 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    is_paused: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PlayerStoreNotify(betterproto.Message):
    """CmdId: 609 EnetChannelId: 0 EnetIsReliable: true"""

    store_type: "StoreType" = betterproto.enum_field(4)
    item_list: List["Item"] = betterproto.message_field(3)
    weight_limit: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerTimeNotify(betterproto.Message):
    """CmdId: 172 EnetChannelId: 0 EnetIsReliable: true"""

    is_paused: bool = betterproto.bool_field(8)
    player_time: int = betterproto.uint64_field(4)
    server_time: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class PlayerWorldLocationInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    player_loc: "PlayerLocationInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    is_locked: bool = betterproto.bool_field(2)
    scene_tag_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfoListNotify(betterproto.Message):
    """CmdId: 3172 EnetChannelId: 0 EnetIsReliable: true"""

    info_list: List["PlayerWorldSceneInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PostEnterSceneRsp(betterproto.Message):
    """CmdId: 3344 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    enter_scene_token: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PrivateChatNotify(betterproto.Message):
    """CmdId: 4991 EnetChannelId: 0 EnetIsReliable: true"""

    chat_info: "ChatInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PrivateChatReq(betterproto.Message):
    """
    CmdId: 4959 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(2)
    text: str = betterproto.string_field(8, group="content")
    icon: int = betterproto.uint32_field(6, group="content")


@dataclass(eq=False, repr=False)
class PrivateChatRsp(betterproto.Message):
    """CmdId: 4981 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    chat_forbidden_endtime: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ProfilePicture(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PropPair(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    prop_value: "PropValue" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PropValue(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    val: int = betterproto.int64_field(4)
    ival: int = betterproto.int64_field(2, group="value")
    fval: float = betterproto.float_field(3, group="value")


@dataclass(eq=False, repr=False)
class ProudSkillChangeNotify(betterproto.Message):
    """CmdId: 1055 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(12)
    entity_id: int = betterproto.uint32_field(11)
    skill_depot_id: int = betterproto.uint32_field(7)
    proud_skill_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ProudSkillExtraLevelNotify(betterproto.Message):
    """CmdId: 1097 EnetChannelId: 0 EnetIsReliable: true"""

    avatar_guid: int = betterproto.uint64_field(14)
    talent_type: int = betterproto.uint32_field(10)
    talent_index: int = betterproto.uint32_field(4)
    extra_level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PullPrivateChatReq(betterproto.Message):
    """
    CmdId: 4967 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(2)
    from_sequence: int = betterproto.uint32_field(7)
    pull_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PullPrivateChatRsp(betterproto.Message):
    """CmdId: 5035 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    chat_info: List["ChatInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PullRecentChatRsp(betterproto.Message):
    """CmdId: 4999 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    chat_info: List["ChatInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumReq(betterproto.Message):
    """
    CmdId: 4207 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    codex_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumRsp(betterproto.Message):
    """CmdId: 4205 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    codex_id_list: List[int] = betterproto.uint32_field(4)
    be_killed_num_list: List[int] = betterproto.uint32_field(11)
    chpbkclkpcj: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QueryCurrRegionHttpRsp(betterproto.Message):
    force_udpate: "ForceUpdateInfo" = betterproto.message_field(4, group="Detail")
    stop_server: "StopServerInfo" = betterproto.message_field(5, group="Detail")
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    region_info: "RegionInfo" = betterproto.message_field(3)
    client_secret_key: bytes = betterproto.bytes_field(11)
    region_custom_config_encrypted: bytes = betterproto.bytes_field(12)
    client_region_custom_config_encrypted: bytes = betterproto.bytes_field(13)


@dataclass(eq=False, repr=False)
class QueryRegionListHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    region_list: List["RegionSimpleInfo"] = betterproto.message_field(2)
    client_secret_key: bytes = betterproto.bytes_field(5)
    client_custom_config_encrypted: bytes = betterproto.bytes_field(6)
    enable_login_pc: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class Quest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(4)
    is_random: bool = betterproto.bool_field(5)
    parent_quest_id: int = betterproto.uint32_field(6)
    quest_config_id: int = betterproto.uint32_field(7)
    start_game_time: int = betterproto.uint32_field(8)
    accept_time: int = betterproto.uint32_field(9)
    lacked_npc_list: List[int] = betterproto.uint32_field(10)
    finish_progress_list: List[int] = betterproto.uint32_field(11)
    fail_progress_list: List[int] = betterproto.uint32_field(12)
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    lacked_place_list: List[int] = betterproto.uint32_field(14)
    lacked_place_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class QuestDelNotify(betterproto.Message):
    """CmdId: 441 EnetChannelId: 0 EnetIsReliable: true"""

    quest_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class QuestGlobalVar(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class QuestGlobalVarNotify(betterproto.Message):
    """CmdId: 411 EnetChannelId: 0 EnetIsReliable: true"""

    var_list: List["QuestGlobalVar"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class QuestListNotify(betterproto.Message):
    """CmdId: 409 EnetChannelId: 0 EnetIsReliable: true"""

    quest_list: List["Quest"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class QuestListUpdateNotify(betterproto.Message):
    """CmdId: 431 EnetChannelId: 0 EnetIsReliable: true"""

    quest_list: List["Quest"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class QuestProgressUpdateNotify(betterproto.Message):
    """CmdId: 445 EnetChannelId: 0 EnetIsReliable: true"""

    quest_id: int = betterproto.uint32_field(14)
    finish_progress_list: List[int] = betterproto.uint32_field(7)
    fail_progress_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarNotify(betterproto.Message):
    """CmdId: 463 EnetChannelId: 0 EnetIsReliable: true"""

    parent_quest_id: int = betterproto.uint32_field(3)
    quest_var: List[int] = betterproto.int32_field(6)
    parent_quest_var_seq: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarReq(betterproto.Message):
    """CmdId: 490 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    quest_id: int = betterproto.uint32_field(15)
    quest_var_op_list: List["QuestVarOp"] = betterproto.message_field(11)
    parent_quest_id: int = betterproto.uint32_field(3)
    parent_quest_var_seq: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarRsp(betterproto.Message):
    """CmdId: 486 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(8)
    quest_id: int = betterproto.uint32_field(7)
    parent_quest_id: int = betterproto.uint32_field(12)
    parent_quest_var_seq: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestVarOp(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)
    is_add: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class QuickUseWidgetReq(betterproto.Message):
    """
    CmdId: 4251 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(
        1800, group="param"
    )
    camera_info: "WidgetCameraInfo" = betterproto.message_field(479, group="param")
    creator_info: "WidgetCreatorInfo" = betterproto.message_field(1204, group="param")
    thunder_bird_feather_info: "WidgetThunderBirdFeatherInfo" = (
        betterproto.message_field(1198, group="param")
    )


@dataclass(eq=False, repr=False)
class QuickUseWidgetRsp(betterproto.Message):
    """CmdId: 4252 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    material_id: int = betterproto.uint32_field(1)
    detector_data: "OneoffGatherPointDetectorData" = betterproto.message_field(
        11, group="ELHGGAPPEBG"
    )
    client_collector_data: "ClientCollectorData" = betterproto.message_field(
        3, group="ELHGGAPPEBG"
    )


@dataclass(eq=False, repr=False)
class ReadMailNotify(betterproto.Message):
    """
    CmdId: 1441 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    mail_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class RegionInfo(betterproto.Message):
    gateserver_ip: str = betterproto.string_field(1)
    gateserver_port: int = betterproto.uint32_field(2)
    pay_callback_url: str = betterproto.string_field(3)
    area_type: str = betterproto.string_field(7)
    resource_url: str = betterproto.string_field(8)
    data_url: str = betterproto.string_field(9)
    feedback_url: str = betterproto.string_field(10)
    bulletin_url: str = betterproto.string_field(11)
    resource_url_bak: str = betterproto.string_field(12)
    data_url_bak: str = betterproto.string_field(13)
    client_data_version: int = betterproto.uint32_field(14)
    handbook_url: str = betterproto.string_field(16)
    client_silence_data_version: int = betterproto.uint32_field(18)
    client_data_md5: str = betterproto.string_field(19)
    client_silence_data_md5: str = betterproto.string_field(20)
    res_version_config: "ResVersionConfig" = betterproto.message_field(22)
    secret_key: bytes = betterproto.bytes_field(23)
    official_community_url: str = betterproto.string_field(24)
    client_version_suffix: str = betterproto.string_field(26)
    client_silence_version_suffix: str = betterproto.string_field(27)
    use_gateserver_domain_name: bool = betterproto.bool_field(28)
    gateserver_domain_name: str = betterproto.string_field(29)
    user_center_url: str = betterproto.string_field(30)
    account_bind_url: str = betterproto.string_field(31)
    cdkey_url: str = betterproto.string_field(32)
    privacy_policy_url: str = betterproto.string_field(33)
    next_resource_url: str = betterproto.string_field(34)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(35)


@dataclass(eq=False, repr=False)
class RegionSimpleInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)
    dispatch_url: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class Reliquary(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    main_prop_id: int = betterproto.uint32_field(4)
    append_prop_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteReq(betterproto.Message):
    """CmdId: 612 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_guid: int = betterproto.uint64_field(4)
    item_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteRsp(betterproto.Message):
    """CmdId: 658 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    target_reliquary_guid: int = betterproto.uint64_field(4)
    old_promote_level: int = betterproto.uint32_field(11)
    cur_promote_level: int = betterproto.uint32_field(14)
    old_append_prop_list: List[int] = betterproto.uint32_field(3)
    cur_append_prop_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeReq(betterproto.Message):
    """CmdId: 606 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_reliquary_guid: int = betterproto.uint64_field(5)
    food_reliquary_guid_list: List[int] = betterproto.uint64_field(15)
    item_param_list: List["ItemParam"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeRsp(betterproto.Message):
    """CmdId: 619 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)
    target_reliquary_guid: int = betterproto.uint64_field(10)
    old_level: int = betterproto.uint32_field(5)
    cur_level: int = betterproto.uint32_field(6)
    power_up_rate: int = betterproto.uint32_field(2)
    old_append_prop_list: List[int] = betterproto.uint32_field(7)
    cur_append_prop_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ResVersionConfig(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    relogin: bool = betterproto.bool_field(2)
    md_5: str = betterproto.string_field(3)
    release_total_size: str = betterproto.string_field(4)
    version_suffix: str = betterproto.string_field(5)
    branch: str = betterproto.string_field(6)
    next_script_version: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class ResinCard(betterproto.Message):
    base_item_list: List["ItemParam"] = betterproto.message_field(1)
    per_day_item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ResinChangeNotify(betterproto.Message):
    """CmdId: 670 EnetChannelId: 0 EnetIsReliable: true"""

    cur_value: int = betterproto.uint32_field(4)
    next_add_timestamp: int = betterproto.uint32_field(2)
    cur_buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonSettleInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    cur_level: int = betterproto.uint32_field(2)
    finished_challenge_cell_num_map: Dict[
        int, "RoguelikeSettleCoinInfo"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_final_level: bool = betterproto.bool_field(4)
    total_coin_b_num: int = betterproto.uint32_field(5)
    total_coin_c_num: int = betterproto.uint32_field(6)
    is_coin_c_reach_limit: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class RoguelikeGadgetInfo(betterproto.Message):
    cell_config_id: int = betterproto.uint32_field(1)
    cell_type: int = betterproto.uint32_field(2)
    cell_state: int = betterproto.uint32_field(3)
    cell_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeSettleCoinInfo(betterproto.Message):
    cell_num: int = betterproto.uint32_field(1)
    coin_b: int = betterproto.uint32_field(2)
    coin_c: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Route(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    route_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoutePoint(betterproto.Message):
    position: "Vector" = betterproto.message_field(1)
    arrive_range: float = betterproto.float_field(2)
    velocity: float = betterproto.float_field(11, group="move_params")
    time: float = betterproto.float_field(12, group="move_params")
    rotation: "Vector" = betterproto.message_field(21, group="rotate_params")
    rotation_speed: "MathQuaternion" = betterproto.message_field(
        22, group="rotate_params"
    )
    axis_speed: "MathQuaternion" = betterproto.message_field(23, group="rotate_params")


@dataclass(eq=False, repr=False)
class SceneAreaWeatherNotify(betterproto.Message):
    """CmdId: 229 EnetChannelId: 0 EnetIsReliable: true"""

    weather_gadget_id: int = betterproto.uint32_field(13)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    weather_area_id: int = betterproto.uint32_field(15)
    climate_type: int = betterproto.uint32_field(14)
    trans_duration: float = betterproto.float_field(11)


@dataclass(eq=False, repr=False)
class SceneAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    peer_id: int = betterproto.uint32_field(4)
    equip_id_list: List[int] = betterproto.uint32_field(5)
    skill_depot_id: int = betterproto.uint32_field(6)
    talent_id_list: List[int] = betterproto.uint32_field(7)
    weapon: "SceneWeaponInfo" = betterproto.message_field(8)
    reliquary_list: List["SceneReliquaryInfo"] = betterproto.message_field(9)
    core_proud_skill_level: int = betterproto.uint32_field(11)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    server_buff_list: List["ServerBuff"] = betterproto.message_field(15)
    team_resonance_list: List[int] = betterproto.uint32_field(16)
    wearing_flycloak_id: int = betterproto.uint32_field(17)
    born_time: int = betterproto.uint32_field(18)
    costume_id: int = betterproto.uint32_field(19)
    cur_vehicle_info: "CurVehicleInfo" = betterproto.message_field(20)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(21)
    anim_hash: int = betterproto.uint32_field(22)


@dataclass(eq=False, repr=False)
class SceneEntityAiInfo(betterproto.Message):
    is_ai_open: bool = betterproto.bool_field(1)
    born_pos: "Vector" = betterproto.message_field(2)
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    servant_info: "ServantInfo" = betterproto.message_field(4)
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_tactic: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneEntityAppearNotify(betterproto.Message):
    """CmdId: 217 EnetChannelId: 0 EnetIsReliable: true"""

    entity_list: List["SceneEntityInfo"] = betterproto.message_field(6)
    appear_type: "VisionType" = betterproto.enum_field(8)
    param: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneEntityDisappearNotify(betterproto.Message):
    """CmdId: 285 EnetChannelId: 0 EnetIsReliable: true"""

    entity_list: List[int] = betterproto.uint32_field(9)
    disappear_type: "VisionType" = betterproto.enum_field(10)
    param: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneEntityDrownReq(betterproto.Message):
    """CmdId: 212 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneEntityDrownRsp(betterproto.Message):
    """CmdId: 258 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneEntityInfo(betterproto.Message):
    entity_type: "ProtEntityType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    motion_info: "MotionInfo" = betterproto.message_field(4)
    prop_list: List["PropPair"] = betterproto.message_field(5)
    fight_prop_list: List["FightPropPair"] = betterproto.message_field(6)
    life_state: int = betterproto.uint32_field(7)
    animator_para_list: List[
        "AnimatorParameterValueInfoPair"
    ] = betterproto.message_field(9)
    last_move_scene_time_ms: int = betterproto.uint32_field(17)
    last_move_reliable_seq: int = betterproto.uint32_field(18)
    entity_client_data: "EntityClientData" = betterproto.message_field(19)
    entity_environment_info_list: List[
        "EntityEnvironmentInfo"
    ] = betterproto.message_field(20)
    entity_authority_info: "EntityAuthorityInfo" = betterproto.message_field(21)
    tag_list: List[str] = betterproto.string_field(22)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(23)
    avatar: "SceneAvatarInfo" = betterproto.message_field(10, group="entity")
    monster: "SceneMonsterInfo" = betterproto.message_field(11, group="entity")
    npc: "SceneNpcInfo" = betterproto.message_field(12, group="entity")
    gadget: "SceneGadgetInfo" = betterproto.message_field(13, group="entity")


@dataclass(eq=False, repr=False)
class SceneEntityMoveNotify(betterproto.Message):
    """CmdId: 227 EnetChannelId: 1 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(10)
    motion_info: "MotionInfo" = betterproto.message_field(3)
    scene_time: int = betterproto.uint32_field(12)
    reliable_seq: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneFishInfo(betterproto.Message):
    fish_id: int = betterproto.uint32_field(1)
    fish_pool_entity_id: int = betterproto.uint32_field(2)
    fish_pool_pos: "Vector" = betterproto.message_field(3)
    fish_pool_gadget_id: int = betterproto.uint32_field(4)
    lpnflhkphec: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneForceUnlockNotify(betterproto.Message):
    """CmdId: 201 EnetChannelId: 0 EnetIsReliable: true"""

    force_id_list: List[int] = betterproto.uint32_field(1)
    is_add: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SceneGadgetInfo(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    born_type: "GadgetBornType" = betterproto.enum_field(5)
    gadget_state: int = betterproto.uint32_field(6)
    gadget_type: int = betterproto.uint32_field(7)
    is_show_cutscene: bool = betterproto.bool_field(8)
    authority_peer_id: int = betterproto.uint32_field(9)
    is_enable_interact: bool = betterproto.bool_field(10)
    interact_id: int = betterproto.uint32_field(11)
    mark_flag: int = betterproto.uint32_field(21)
    prop_owner_entity_id: int = betterproto.uint32_field(22)
    platform: "PlatformInfo" = betterproto.message_field(23)
    interact_uid_list: List[int] = betterproto.uint32_field(24)
    draft_id: int = betterproto.uint32_field(25)
    gadget_talk_state: int = betterproto.uint32_field(26)
    play_info: "GadgetPlayInfo" = betterproto.message_field(100)
    trifle_item: "Item" = betterproto.message_field(12, group="content")
    gather_gadget: "GatherGadgetInfo" = betterproto.message_field(13, group="content")
    worktop: "WorktopInfo" = betterproto.message_field(14, group="content")
    client_gadget: "ClientGadgetInfo" = betterproto.message_field(15, group="content")
    weather: "WeatherInfo" = betterproto.message_field(17, group="content")
    ability_gadget: "AbilityGadgetInfo" = betterproto.message_field(18, group="content")
    statue_gadget: "StatueGadgetInfo" = betterproto.message_field(19, group="content")
    boss_chest: "BossChestInfo" = betterproto.message_field(20, group="content")
    blossom_chest: "BlossomChestInfo" = betterproto.message_field(41, group="content")
    mp_play_reward: "MpPlayRewardInfo" = betterproto.message_field(42, group="content")
    general_reward: "GadgetGeneralRewardInfo" = betterproto.message_field(
        43, group="content"
    )
    offering_info: "OfferingInfo" = betterproto.message_field(44, group="content")
    foundation_info: "FoundationInfo" = betterproto.message_field(45, group="content")
    vehicle_info: "VehicleInfo" = betterproto.message_field(46, group="content")
    shell_info: "EchoShellInfo" = betterproto.message_field(47, group="content")
    screen_info: "ScreenInfo" = betterproto.message_field(48, group="content")
    fish_pool_info: "FishPoolInfo" = betterproto.message_field(59, group="content")
    custom_gadget_tree_info: "CustomGadgetTreeInfo" = betterproto.message_field(
        60, group="content"
    )
    roguelike_gadget_info: "RoguelikeGadgetInfo" = betterproto.message_field(
        61, group="content"
    )


@dataclass(eq=False, repr=False)
class SceneInitFinishRsp(betterproto.Message):
    """CmdId: 232 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    retcode: int = betterproto.int32_field(10)
    enter_scene_token: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SceneKickPlayerNotify(betterproto.Message):
    """CmdId: 292 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    kicker_uid: int = betterproto.uint32_field(9)
    target_uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneKickPlayerReq(betterproto.Message):
    """CmdId: 295 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneKickPlayerRsp(betterproto.Message):
    """CmdId: 215 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    target_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    weapon_list: List["SceneWeaponInfo"] = betterproto.message_field(4)
    authority_peer_id: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(6)
    is_elite: bool = betterproto.bool_field(7)
    owner_entity_id: int = betterproto.uint32_field(8)
    summoned_tag: int = betterproto.uint32_field(9)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    pose_id: int = betterproto.uint32_field(11)
    born_type: "MonsterBornType" = betterproto.enum_field(12)
    block_id: int = betterproto.uint32_field(13)
    mark_flag: int = betterproto.uint32_field(14)
    title_id: int = betterproto.uint32_field(15)
    special_name_id: int = betterproto.uint32_field(16)
    attack_target_id: int = betterproto.uint32_field(17)
    monster_route: "MonsterRoute" = betterproto.message_field(18)
    ai_config_id: int = betterproto.uint32_field(19)
    level_route_id: int = betterproto.uint32_field(20)
    init_pose_id: int = betterproto.uint32_field(21)
    fish_info: "SceneFishInfo" = betterproto.message_field(50, group="content")


@dataclass(eq=False, repr=False)
class SceneNpcInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScenePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    peer_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    is_connected: bool = betterproto.bool_field(4)
    scene_id: int = betterproto.uint32_field(5)
    online_player_info: "OnlinePlayerInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayerInfoNotify(betterproto.Message):
    """CmdId: 225 EnetChannelId: 0 EnetIsReliable: true"""

    player_info_list: List["ScenePlayerInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ScenePlayerLocationNotify(betterproto.Message):
    """CmdId: 207 EnetChannelId: 1 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(1)
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(8)
    vehicle_loc_list: List["VehicleLocationInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SceneReliquaryInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneTeamAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    scene_id: int = betterproto.uint32_field(3)
    entity_id: int = betterproto.uint32_field(4)
    avatar_info: "AvatarInfo" = betterproto.message_field(5)
    scene_avatar_info: "SceneAvatarInfo" = betterproto.message_field(6)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(8)
    scene_entity_info: "SceneEntityInfo" = betterproto.message_field(9)
    weapon_guid: int = betterproto.uint64_field(10)
    weapon_entity_id: int = betterproto.uint32_field(11)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(12)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(13)
    is_reconnect: bool = betterproto.bool_field(14)
    is_player_cur_avatar: bool = betterproto.bool_field(15)
    is_on_scene: bool = betterproto.bool_field(16)


@dataclass(eq=False, repr=False)
class SceneTeamUpdateNotify(betterproto.Message):
    """CmdId: 1699 EnetChannelId: 0 EnetIsReliable: true"""

    scene_team_avatar_list: List["SceneTeamAvatar"] = betterproto.message_field(11)
    is_in_mp: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class SceneTimeNotify(betterproto.Message):
    """CmdId: 262 EnetChannelId: 0 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(3)
    is_paused: bool = betterproto.bool_field(5)
    scene_time: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class SceneTransToPointReq(betterproto.Message):
    """CmdId: 286 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    scene_id: int = betterproto.uint32_field(12)
    point_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneTransToPointRsp(betterproto.Message):
    """CmdId: 263 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)
    scene_id: int = betterproto.uint32_field(11)
    point_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneUnlockInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    is_locked: bool = betterproto.bool_field(2)
    scene_tag_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneWeaponInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint64_field(4)
    level: int = betterproto.uint32_field(5)
    promote_level: int = betterproto.uint32_field(6)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    affix_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ScreenInfo(betterproto.Message):
    live_id: int = betterproto.uint32_field(1)
    projector_entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionReq(betterproto.Message):
    """CmdId: 832 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    gadget_entity_id: int = betterproto.uint32_field(2)
    option_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionRsp(betterproto.Message):
    """CmdId: 817 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    gadget_entity_id: int = betterproto.uint32_field(12)
    option_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ServantInfo(betterproto.Message):
    master_entity_id: int = betterproto.uint32_field(1)
    born_slot_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerBuff(betterproto.Message):
    server_buff_uid: int = betterproto.uint32_field(1)
    server_buff_id: int = betterproto.uint32_field(2)
    server_buff_type: int = betterproto.uint32_field(3)
    instanced_modifier_id: int = betterproto.uint32_field(4)
    is_modifier_added: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ServerCondMeetQuestListUpdateNotify(betterproto.Message):
    """CmdId: 401 EnetChannelId: 0 EnetIsReliable: true"""

    add_quest_id_list: List[int] = betterproto.uint32_field(9)
    del_quest_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ServerTimeNotify(betterproto.Message):
    """CmdId: 82 EnetChannelId: 1 EnetIsReliable: true"""

    server_time: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class SetEntityClientDataNotify(betterproto.Message):
    """
    CmdId: 3375 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    entity_id: int = betterproto.uint32_field(13)
    entity_client_data: "EntityClientData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SetEquipLockStateReq(betterproto.Message):
    """CmdId: 604 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_equip_guid: int = betterproto.uint64_field(10)
    is_locked: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class SetEquipLockStateRsp(betterproto.Message):
    """CmdId: 605 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    target_equip_guid: int = betterproto.uint64_field(13)
    is_locked: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SetNameCardReq(betterproto.Message):
    """
    CmdId: 4006 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    name_card_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SetNameCardRsp(betterproto.Message):
    """
    CmdId: 4019 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(11)
    name_card_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayReq(betterproto.Message):
    """
    CmdId: 4007 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    birthday: "Birthday" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayRsp(betterproto.Message):
    """CmdId: 4030 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    birthday: "Birthday" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataReq(betterproto.Message):
    """CmdId: 198 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    avatar_id: int = betterproto.uint32_field(3)
    nick_name: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataRsp(betterproto.Message):
    """CmdId: 145 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageReq(betterproto.Message):
    """
    CmdId: 4045 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageRsp(betterproto.Message):
    """CmdId: 4090 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    avatar_id: int = betterproto.uint32_field(3)
    profile_picture: "ProfilePicture" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SetPlayerNameReq(betterproto.Message):
    """CmdId: 163 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    nick_name: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class SetPlayerNameRsp(betterproto.Message):
    """CmdId: 124 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    nick_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class SetPlayerPropReq(betterproto.Message):
    """CmdId: 130 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    prop_list: List["PropValue"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SetPlayerPropRsp(betterproto.Message):
    """CmdId: 197 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureReq(betterproto.Message):
    """
    CmdId: 4097 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    signature: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureRsp(betterproto.Message):
    """CmdId: 4098 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    signature: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamReq(betterproto.Message):
    """
    CmdId: 1753 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    team_id: int = betterproto.uint32_field(10)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(1)
    cur_avatar_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamRsp(betterproto.Message):
    """CmdId: 1664 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    team_id: int = betterproto.uint32_field(5)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(12)
    cur_avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetReq(betterproto.Message):
    """
    CmdId: 4297 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    lunch_box_data: "LunchBoxData" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetRsp(betterproto.Message):
    """CmdId: 4266 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(9)
    lunch_box_data: "LunchBoxData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SetWidgetSlotReq(betterproto.Message):
    """
    CmdId: 4269 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    op: "WidgetSlotOp" = betterproto.enum_field(4)
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(11)
    material_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SetWidgetSlotRsp(betterproto.Message):
    """CmdId: 4260 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(7)
    op: "WidgetSlotOp" = betterproto.enum_field(14)
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(4)
    material_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class Shop(betterproto.Message):
    shop_type: int = betterproto.uint32_field(1)
    goods_list: List["ShopGoods"] = betterproto.message_field(2)
    mcoin_product_list: List["ShopMcoinProduct"] = betterproto.message_field(3)
    card_product_list: List["ShopCardProduct"] = betterproto.message_field(4)
    next_refresh_time: int = betterproto.uint32_field(6)
    city_id: int = betterproto.uint32_field(7)
    city_reputation_level: int = betterproto.uint32_field(8)
    concert_product_list: List["ShopConcertProduct"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ShopCardProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    hcoin_per_day: int = betterproto.uint32_field(4)
    days: int = betterproto.uint32_field(5)
    remain_reward_days: int = betterproto.uint32_field(6)
    card_product_type: int = betterproto.uint32_field(7)
    resin_card: "ShopCardProductResinCard" = betterproto.message_field(
        101, group="extra_card_data"
    )


@dataclass(eq=False, repr=False)
class ShopCardProductResinCard(betterproto.Message):
    base_item_list: List["ItemParam"] = betterproto.message_field(1)
    per_day_item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ShopConcertProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    obtain_count: int = betterproto.uint32_field(3)
    obtain_limit: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    buy_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ShopGoods(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    goods_item: "ItemParam" = betterproto.message_field(2)
    scoin: int = betterproto.uint32_field(3)
    hcoin: int = betterproto.uint32_field(4)
    cost_item_list: List["ItemParam"] = betterproto.message_field(5)
    bought_num: int = betterproto.uint32_field(6)
    buy_limit: int = betterproto.uint32_field(7)
    begin_time: int = betterproto.uint32_field(8)
    end_time: int = betterproto.uint32_field(9)
    next_refresh_time: int = betterproto.uint32_field(10)
    min_level: int = betterproto.uint32_field(11)
    max_level: int = betterproto.uint32_field(12)
    pre_goods_id_list: List[int] = betterproto.uint32_field(13)
    mcoin: int = betterproto.uint32_field(14)
    disable_type: int = betterproto.uint32_field(15)
    secondary_sheet_id: int = betterproto.uint32_field(16)
    discount_id: int = betterproto.uint32_field(17)
    discount_begin_time: int = betterproto.uint32_field(18)
    discount_end_time: int = betterproto.uint32_field(19)
    single_limit: int = betterproto.uint32_field(20)


@dataclass(eq=False, repr=False)
class ShopMcoinProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    mcoin_non_first: int = betterproto.uint32_field(4)
    mcoin_first: int = betterproto.uint32_field(5)
    bought_num: int = betterproto.uint32_field(6)
    is_audit: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ShortAbilityHashPair(betterproto.Message):
    ability_name_hash: int = betterproto.int32_field(1)
    ability_config_hash: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    talent_id_list: List[int] = betterproto.uint32_field(3)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    skill_depot_id: int = betterproto.uint32_field(5)
    core_proud_skill_level: int = betterproto.uint32_field(6)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(7)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    equip_list: List["ShowEquip"] = betterproto.message_field(10)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(11)
    costume_id: int = betterproto.uint32_field(12)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ShowEquip(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    reliquary: "Reliquary" = betterproto.message_field(2, group="detail")
    weapon: "Weapon" = betterproto.message_field(3, group="detail")


@dataclass(eq=False, repr=False)
class SocialDetail(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    signature: str = betterproto.string_field(5)
    birthday: "Birthday" = betterproto.message_field(6)
    world_level: int = betterproto.uint32_field(7)
    reserved_list: List[int] = betterproto.uint32_field(8)
    online_state: "FriendOnlineState" = betterproto.enum_field(9)
    param: int = betterproto.uint32_field(10)
    is_friend: bool = betterproto.bool_field(11)
    is_mp_mode_available: bool = betterproto.bool_field(12)
    online_id: str = betterproto.string_field(13)
    name_card_id: int = betterproto.uint32_field(14)
    is_in_blacklist: bool = betterproto.bool_field(15)
    is_chat_no_disturb: bool = betterproto.bool_field(16)
    remark_name: str = betterproto.string_field(17)
    finish_achievement_num: int = betterproto.uint32_field(18)
    tower_floor_index: int = betterproto.uint32_field(19)
    tower_level_index: int = betterproto.uint32_field(20)
    is_show_avatar: bool = betterproto.bool_field(21)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    show_name_card_id_list: List[int] = betterproto.uint32_field(23)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(24)
    profile_picture: "ProfilePicture" = betterproto.message_field(25)


@dataclass(eq=False, repr=False)
class SocialShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StatueGadgetInfo(betterproto.Message):
    opened_statue_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class StopServerInfo(betterproto.Message):
    stop_begin_time: int = betterproto.uint32_field(1)
    stop_end_time: int = betterproto.uint32_field(2)
    url: str = betterproto.string_field(3)
    content_msg: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class StoreItemChangeNotify(betterproto.Message):
    """CmdId: 641 EnetChannelId: 0 EnetIsReliable: true"""

    store_type: "StoreType" = betterproto.enum_field(9)
    item_list: List["Item"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class StoreItemDelNotify(betterproto.Message):
    """CmdId: 637 EnetChannelId: 0 EnetIsReliable: true"""

    store_type: "StoreType" = betterproto.enum_field(14)
    guid_list: List[int] = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class StoreWeightLimitNotify(betterproto.Message):
    """CmdId: 631 EnetChannelId: 0 EnetIsReliable: true"""

    store_type: "StoreType" = betterproto.enum_field(4)
    weight_limit: int = betterproto.uint32_field(2)
    material_count_limit: int = betterproto.uint32_field(1)
    weapon_count_limit: int = betterproto.uint32_field(5)
    reliquary_count_limit: int = betterproto.uint32_field(6)
    furniture_count_limit: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class StrengthenPointData(betterproto.Message):
    base_point: int = betterproto.uint32_field(1)
    cur_point: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SyncScenePlayTeamEntityNotify(betterproto.Message):
    """CmdId: 3096 EnetChannelId: 0 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(13)
    entity_info_list: List["PlayTeamEntityInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SyncTeamEntityNotify(betterproto.Message):
    """CmdId: 334 EnetChannelId: 0 EnetIsReliable: true"""

    scene_id: int = betterproto.uint32_field(13)
    team_entity_info_list: List["TeamEntityInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeAchievementRewardReq(betterproto.Message):
    """
    CmdId: 2693 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardReq(betterproto.Message):
    """CmdId: 160 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardRsp(betterproto.Message):
    """CmdId: 177 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    level: int = betterproto.uint32_field(13)
    reward_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TakeoffEquipReq(betterproto.Message):
    """CmdId: 698 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    avatar_guid: int = betterproto.uint64_field(15)
    slot: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TakeoffEquipRsp(betterproto.Message):
    """CmdId: 645 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(8)
    avatar_guid: int = betterproto.uint64_field(3)
    slot: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TeamEnterSceneInfo(betterproto.Message):
    team_entity_id: int = betterproto.uint32_field(1)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(2)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TeamEntityInfo(betterproto.Message):
    team_entity_id: int = betterproto.uint32_field(1)
    authority_peer_id: int = betterproto.uint32_field(2)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TeamResonanceChangeNotify(betterproto.Message):
    """CmdId: 1045 EnetChannelId: 0 EnetIsReliable: true"""

    info_list: List["AvatarTeamResonanceInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class TowerAllDataRsp(betterproto.Message):
    """CmdId: 2449 EnetChannelId: 0 EnetIsReliable: true"""

    tower_schedule_id: int = betterproto.uint32_field(13)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(12)
    daily_floor_id: int = betterproto.uint32_field(9)
    daily_level_index: int = betterproto.uint32_field(6)
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(2)
    next_schedule_change_time: int = betterproto.uint32_field(8)
    floor_open_time_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_first_interact: bool = betterproto.bool_field(14)
    monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(1)
    skip_to_floor_index: int = betterproto.uint32_field(3)
    commemorative_reward_id: int = betterproto.uint32_field(15)
    skip_floor_granted_reward_item_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    valid_tower_record_num: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(4)
    is_finished_entrance_floor: bool = betterproto.bool_field(7)
    schedule_start_time: int = betterproto.uint32_field(490)
    last_schedule_monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(395)


@dataclass(eq=False, repr=False)
class TowerBuffSelectReq(betterproto.Message):
    """
    CmdId: 2407 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    tower_buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerBuffSelectRsp(betterproto.Message):
    """CmdId: 2430 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    tower_buff_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecord(betterproto.Message):
    cur_floor_id: int = betterproto.uint32_field(1)
    cur_level_index: int = betterproto.uint32_field(2)
    tower_team_list: List["TowerTeam"] = betterproto.message_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)
    is_empty: bool = betterproto.bool_field(5)
    mpligmakfam: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecordChangeNotify(betterproto.Message):
    """CmdId: 2441 EnetChannelId: 0 EnetIsReliable: true"""

    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TowerEnterLevelReq(betterproto.Message):
    """
    CmdId: 2455 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    enter_point_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TowerEnterLevelRsp(betterproto.Message):
    """CmdId: 2427 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(14)
    floor_id: int = betterproto.uint32_field(6)
    level_index: int = betterproto.uint32_field(8)
    tower_buff_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TowerFloorRecord(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    passed_level_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    floor_star_reward_progress: int = betterproto.uint32_field(3)
    passed_level_record_list: List["TowerLevelRecord"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TowerFloorRecordChangeNotify(betterproto.Message):
    """CmdId: 2431 EnetChannelId: 0 EnetIsReliable: true"""

    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(9)
    is_finished_entrance_floor: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class TowerLevelEndNotify(betterproto.Message):
    """CmdId: 2442 EnetChannelId: 0 EnetIsReliable: true"""

    is_success: bool = betterproto.bool_field(14)
    finished_star_cond_list: List[int] = betterproto.uint32_field(1)
    reward_item_list: List["ItemParam"] = betterproto.message_field(9)
    continue_state: int = betterproto.uint32_field(2)
    next_floor_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TowerLevelRecord(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    satisfied_cond_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondData(betterproto.Message):
    star_cond_index: int = betterproto.uint32_field(3)
    cond_value: int = betterproto.uint32_field(4)
    is_pause: bool = betterproto.bool_field(5)
    oafmggmjpil: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondNotify(betterproto.Message):
    """CmdId: 2401 EnetChannelId: 0 EnetIsReliable: true"""

    floor_id: int = betterproto.uint32_field(3)
    level_index: int = betterproto.uint32_field(6)
    cond_data_list: List["TowerLevelStarCondData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class TowerMiddleLevelChangeTeamNotify(betterproto.Message):
    """CmdId: 2411 EnetChannelId: 0 EnetIsReliable: true"""

    pass


@dataclass(eq=False, repr=False)
class TowerMonthlyBrief(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(1)
    best_floor_index: int = betterproto.uint32_field(2)
    best_level_index: int = betterproto.uint32_field(3)
    total_star_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TowerTeam(betterproto.Message):
    tower_team_id: int = betterproto.uint32_field(1)
    avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class TowerTeamSelectReq(betterproto.Message):
    """
    CmdId: 2417 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    floor_id: int = betterproto.uint32_field(15)
    tower_team_list: List["TowerTeam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TowerTeamSelectRsp(betterproto.Message):
    """CmdId: 2485 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TrackingIoInfo(betterproto.Message):
    appid: str = betterproto.string_field(1)
    deviceid: str = betterproto.string_field(2)
    mac: str = betterproto.string_field(3)
    rydevicetype: str = betterproto.string_field(4)
    client_tz: str = betterproto.string_field(5)
    current_caid: str = betterproto.string_field(6)
    cached_caid: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class TrialAvatarFirstPassDungeonNotify(betterproto.Message):
    """CmdId: 2137 EnetChannelId: 0 EnetIsReliable: true"""

    trial_avatar_index_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarGrantRecord(betterproto.Message):
    grant_reason: int = betterproto.uint32_field(1)
    from_parent_quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarInfo(betterproto.Message):
    trial_avatar_id: int = betterproto.uint32_field(1)
    trial_equip_list: List["Item"] = betterproto.message_field(2)
    grant_record: "TrialAvatarGrantRecord" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TryEnterHomeReq(betterproto.Message):
    """
    CmdId: 4553 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    target_uid: int = betterproto.uint32_field(10)
    target_point: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TryEnterHomeRsp(betterproto.Message):
    """CmdId: 4610 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    target_uid: int = betterproto.uint32_field(2)
    param_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class Uint32Pair(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnionCmd(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    body: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class UnionCmdNotify(betterproto.Message):
    """CmdId: 98 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    cmd_list: List["UnionCmd"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentReq(betterproto.Message):
    """
    CmdId: 1009 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    avatar_guid: int = betterproto.uint64_field(13)
    talent_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentRsp(betterproto.Message):
    """CmdId: 1031 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    avatar_guid: int = betterproto.uint64_field(14)
    talent_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class UnlockNameCardNotify(betterproto.Message):
    """CmdId: 4001 EnetChannelId: 0 EnetIsReliable: true"""

    name_card_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListReq(betterproto.Message):
    """
    CmdId: 4025 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    show_avatar_id_list: List[int] = betterproto.uint32_field(13)
    is_show_avatar: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListRsp(betterproto.Message):
    """CmdId: 4083 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(2)
    show_avatar_id_list: List[int] = betterproto.uint32_field(1)
    is_show_avatar: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class UseItemReq(betterproto.Message):
    """CmdId: 635 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    guid: int = betterproto.uint64_field(1)
    count: int = betterproto.uint32_field(12)
    target_guid: int = betterproto.uint64_field(14)
    option_idx: int = betterproto.uint32_field(10)
    is_enter_mp_dungeon_team: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class UseItemRsp(betterproto.Message):
    """CmdId: 649 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    guid: int = betterproto.uint64_field(8)
    item_id: int = betterproto.uint32_field(11)
    target_guid: int = betterproto.uint64_field(12)
    option_idx: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetReq(betterproto.Message):
    """
    CmdId: 4283 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    material_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(10)
    rot: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetRsp(betterproto.Message):
    """CmdId: 4279 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(13)
    material_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetReq(betterproto.Message):
    """
    CmdId: 4290 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetRsp(betterproto.Message):
    """
    CmdId: 4271 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    retcode: int = betterproto.int32_field(9)
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class Vector(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class VehicleInfo(betterproto.Message):
    member_list: List["VehicleMember"] = betterproto.message_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    cur_stamina: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class VehicleInteractReq(betterproto.Message):
    """CmdId: 838 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    entity_id: int = betterproto.uint32_field(8)
    interact_type: "VehicleInteractType" = betterproto.enum_field(3)
    pos: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VehicleInteractRsp(betterproto.Message):
    """CmdId: 806 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(15)
    entity_id: int = betterproto.uint32_field(14)
    interact_type: "VehicleInteractType" = betterproto.enum_field(3)
    member: "VehicleMember" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class VehicleLocationInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(2)
    owner_uid: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(4)
    rot: "Vector" = betterproto.message_field(5)
    cur_hp: float = betterproto.float_field(6)
    max_hp: float = betterproto.float_field(7)
    uid_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class VehicleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    pos: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VehicleStaminaNotify(betterproto.Message):
    """CmdId: 811 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(8)
    cur_stamina: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class Weapon(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    affix_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WeaponAwakenReq(betterproto.Message):
    """CmdId: 642 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_weapon_guid: int = betterproto.uint64_field(9)
    item_guid: int = betterproto.uint64_field(3)
    affix_level_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WeaponAwakenRsp(betterproto.Message):
    """CmdId: 601 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(3)
    target_weapon_guid: int = betterproto.uint64_field(1)
    target_weapon_awaken_level: int = betterproto.uint32_field(13)
    old_affix_level_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_affix_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    avatar_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class WeaponPromoteReq(betterproto.Message):
    """CmdId: 624 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_weapon_guid: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class WeaponPromoteRsp(betterproto.Message):
    """CmdId: 638 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    target_weapon_guid: int = betterproto.uint64_field(15)
    old_promote_level: int = betterproto.uint32_field(5)
    cur_promote_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WeaponUpgradeReq(betterproto.Message):
    """CmdId: 686 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    target_weapon_guid: int = betterproto.uint64_field(3)
    food_weapon_guid_list: List[int] = betterproto.uint64_field(8)
    item_param_list: List["ItemParam"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class WeaponUpgradeRsp(betterproto.Message):
    """CmdId: 663 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(11)
    target_weapon_guid: int = betterproto.uint64_field(8)
    old_level: int = betterproto.uint32_field(4)
    cur_level: int = betterproto.uint32_field(7)
    item_param_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WearEquipReq(betterproto.Message):
    """CmdId: 630 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    avatar_guid: int = betterproto.uint64_field(14)
    equip_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class WearEquipRsp(betterproto.Message):
    """CmdId: 697 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(6)
    avatar_guid: int = betterproto.uint64_field(10)
    equip_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class WeatherInfo(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WeeklyBossResinDiscountInfo(betterproto.Message):
    discount_num: int = betterproto.uint32_field(1)
    discount_num_limit: int = betterproto.uint32_field(2)
    resin_cost: int = betterproto.uint32_field(3)
    original_resin_cost: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WidgetActiveChangeNotify(betterproto.Message):
    """CmdId: 4295 EnetChannelId: 0 EnetIsReliable: true"""

    widget_data_list: List["WidgetSlotData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WidgetCameraInfo(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WidgetCoolDownData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    cool_down_time: int = betterproto.uint64_field(2)
    is_success: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class WidgetCoolDownNotify(betterproto.Message):
    """CmdId: 4263 EnetChannelId: 0 EnetIsReliable: true"""

    group_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(4)
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        8
    )


@dataclass(eq=False, repr=False)
class WidgetCreateLocationInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WidgetCreatorInfo(betterproto.Message):
    op_type: "WidgetCreatorOpType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WidgetDoBagReq(betterproto.Message):
    """
    CmdId: 4284 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    material_id: int = betterproto.uint32_field(15)
    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(
        351, group="op_info"
    )
    widget_creator_info: "WidgetCreatorInfo" = betterproto.message_field(
        46, group="op_info"
    )


@dataclass(eq=False, repr=False)
class WidgetDoBagRsp(betterproto.Message):
    """CmdId: 4286 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    material_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WidgetGadgetAllDataNotify(betterproto.Message):
    """CmdId: 4285 EnetChannelId: 0 EnetIsReliable: true"""

    widget_gadget_data: List["WidgetGadgetData"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class WidgetGadgetData(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    gadget_entity_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WidgetGadgetDataNotify(betterproto.Message):
    """CmdId: 4292 EnetChannelId: 0 EnetIsReliable: true"""

    widget_gadget_data: "WidgetGadgetData" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class WidgetGadgetDestroyNotify(betterproto.Message):
    """CmdId: 4275 EnetChannelId: 0 EnetIsReliable: true"""

    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WidgetReportReq(betterproto.Message):
    """
    CmdId: 4287 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    material_id: int = betterproto.uint32_field(7)
    is_clear_hint: bool = betterproto.bool_field(13)
    is_client_collect: bool = betterproto.bool_field(9)
    bhcbojngoik: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class WidgetReportRsp(betterproto.Message):
    """CmdId: 4282 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(12)
    material_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WidgetSlotChangeNotify(betterproto.Message):
    """CmdId: 4274 EnetChannelId: 0 EnetIsReliable: true"""

    op: "WidgetSlotOp" = betterproto.enum_field(6)
    slot: "WidgetSlotData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class WidgetSlotData(betterproto.Message):
    tag: "WidgetSlotTag" = betterproto.enum_field(1)
    material_id: int = betterproto.uint32_field(2)
    cd_over_time: int = betterproto.uint32_field(3)
    is_active: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class WidgetSlotTagComparer(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WidgetThunderBirdFeatherInfo(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WidgetUseAttachAbilityGroupChangeNotify(betterproto.Message):
    """CmdId: 4299 EnetChannelId: 0 EnetIsReliable: true"""

    material_id: int = betterproto.uint32_field(4)
    is_attach: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class WindSeedClientNotify(betterproto.Message):
    """CmdId: 1182 EnetChannelId: 0 EnetIsReliable: true"""

    refresh_notify: "WindSeedClientNotifyRefreshNotify" = betterproto.message_field(
        9, group="notify"
    )
    add_wind_bullet_notify: "WindSeedClientNotifyAddWindBulletNotify" = (
        betterproto.message_field(1, group="notify")
    )
    area_notify: "WindSeedClientNotifyAreaNotify" = betterproto.message_field(
        15, group="notify"
    )


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyRefreshNotify(betterproto.Message):
    refresh_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAddWindBulletNotify(betterproto.Message):
    seed_entity_id: int = betterproto.uint32_field(1)
    seed_pos: "Vector" = betterproto.message_field(2)
    catch_player_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAreaNotify(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    area_code: bytes = betterproto.bytes_field(2)
    area_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WorktopInfo(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)
    is_guest_can_operate: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WorktopOptionNotify(betterproto.Message):
    """CmdId: 837 EnetChannelId: 0 EnetIsReliable: true"""

    gadget_entity_id: int = betterproto.uint32_field(12)
    option_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WorldDataNotify(betterproto.Message):
    """
    CmdId: 3131 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    world_prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class WorldPlayerDieNotify(betterproto.Message):
    """CmdId: 296 EnetChannelId: 0 EnetIsReliable: true"""

    die_type: "PlayerDieType" = betterproto.enum_field(9)
    murderer_entity_id: int = betterproto.uint32_field(14)
    monster_id: int = betterproto.uint32_field(10, group="entity")
    gadget_id: int = betterproto.uint32_field(11, group="entity")


@dataclass(eq=False, repr=False)
class WorldPlayerInfoNotify(betterproto.Message):
    """
    CmdId: 3304 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true
    """

    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(6)
    player_uid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WorldPlayerLocationNotify(betterproto.Message):
    """CmdId: 283 EnetChannelId: 0 EnetIsReliable: true"""

    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(6)
    player_world_loc_list: List["PlayerWorldLocationInfo"] = betterproto.message_field(
        15
    )


@dataclass(eq=False, repr=False)
class WorldPlayerRttNotify(betterproto.Message):
    """CmdId: 24 EnetChannelId: 0 EnetIsReliable: true"""

    player_rtt_list: List["PlayerRttInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class WorldPlayerReviveReq(betterproto.Message):
    """CmdId: 247 EnetChannelId: 0 EnetIsReliable: true IsAllowClient: true"""

    pass


@dataclass(eq=False, repr=False)
class WorldPlayerReviveRsp(betterproto.Message):
    """CmdId: 280 EnetChannelId: 0 EnetIsReliable: true"""

    retcode: int = betterproto.int32_field(8)
